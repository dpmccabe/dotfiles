{
	"folder_history":
	[
		"/Users/devin/carterlab/Code/gcnv_msacs_workflow",
		"/Users/devin/carterlab/Code/absolutev1.4",
		"/Users/devin/carterlab/Code/gcnv_pon_workflow",
		"/Users/devin/carterlab/Projects/melanoma_old/code",
		"/Users/devin/carterlab/Code/MSACS",
		"/Users/devin/carterlab/Projects/advi",
		"/Users/devin/Sites/mdb",
		"/Users/devin/carterlab/Code/AllelicCapseg",
		"/Users/devin/School/2016-3 (Fall)/PDA (2550)/hw",
		"/Users/devin/carterlab/Code/gatk",
		"/Users/devin/carterlab/Projects/msacs_example",
		"/Users/devin/Desktop/foghorn",
		"/Users/devin/Desktop/temp_msacs",
		"/Users/devin/Google Drive/carterlab/Code/MSACS",
		"/Users/devin/Google Drive/carterlab/Code/AllelicCapseg",
		"/Users/devin/Desktop/msacs_example",
		"/Users/devin/Desktop",
		"/Users/devin/Google Drive/School/2017-1 (Spring)/Stat 215/hw",
		"/Users/devin/Google Drive/carterlab/Code/MSACS/R",
		"/Users/devin/Google Drive/carterlab/Code/AllelicCapsegMulti",
		"/Users/devin/Desktop/fwdfollowingup",
		"/Users/devin/Google Drive/carterlab/Code/AllelicCapsegMulti/R",
		"/Users/devin/Google Drive/carterlab/Code/AllelicCapseg/R",
		"/Users/devin/Desktop/pkbbrainmetnormals",
		"/Users/devin/Google Drive/School/2017-1 (Spring)/Stat 215/hw/Homework3/data/Part2/plus",
		"/Users/devin/Google Drive/School/2017-1 (Spring)/Stat 215/hw/Homework3",
		"/Users/devin/Google Drive/carterlab/Projects/melanoma"
	],
	"last_version": 3143,
	"last_window_id": 492,
	"log_indexing": false,
	"settings":
	{
		"new_window_height": 1001.0,
		"new_window_settings":
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"sampl",
						"sample_id"
					],
					[
						"samp",
						"sample_id"
					]
				]
			},
			"build_system_choices":
			[
				[
					[
						[
							"Packages/LaTeXing/LaTeX.sublime-build",
							""
						],
						[
							"Packages/LaTeXing/LaTeX.sublime-build",
							"Clean up Files"
						],
						[
							"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
							""
						],
						[
							"Packages/User/LaTeX.sublime-build",
							""
						],
						[
							"Packages/User/LaTeX.sublime-build",
							"Primary Quick Build"
						],
						[
							"Packages/User/LaTeX.sublime-build",
							"Choose Quick Build"
						],
						[
							"Packages/User/LaTeX.sublime-build",
							"Clean up Files"
						]
					],
					[
						"Packages/User/LaTeX.sublime-build",
						""
					]
				]
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 357.0,
				"last_filter": "spaces",
				"selected_items":
				[
					[
						"spaces",
						"Indentation: Convert to Spaces"
					],
					[
						"space",
						"Indentation: Convert to Spaces"
					],
					[
						"uni",
						"Permute Lines: Unique"
					],
					[
						"sor",
						"Sort Lines"
					],
					[
						"color ",
						"UI: Select Color Scheme"
					],
					[
						"colo",
						"UI: Select Color Scheme"
					],
					[
						"theme",
						"UI: Select Theme"
					],
					[
						"scheme",
						"UI: Select Color Scheme"
					],
					[
						"uniq",
						"Permute Lines: Unique"
					],
					[
						"update",
						"Package Control: Upgrade/Overwrite All Packages"
					],
					[
						"indent",
						"Indentation: Reindent Lines"
					],
					[
						"install",
						"Package Control: Install Package"
					],
					[
						"instal",
						"Package Control: Install Package"
					],
					[
						"package",
						"Package Control: Add Repository"
					],
					[
						"isntal",
						"Package Control: Install Package"
					],
					[
						"enable",
						"Package Control: Enable Package"
					],
					[
						"R-bo",
						"Preferences: R-Box Key Bindings"
					],
					[
						"pack",
						"Package Control: List Packages"
					],
					[
						"packag",
						"Package Control: Enable Package"
					],
					[
						"remove pac",
						"Package Control: Remove Package"
					],
					[
						"build",
						"Build With: LaTeX"
					],
					[
						"clean",
						"LaTeXing: Clean Temporary Output Dictionary"
					],
					[
						"sort",
						"Sort Lines"
					],
					[
						"trim",
						"Trimmer: Trim leading AND trailing whitespace."
					],
					[
						"so",
						"Sort Lines"
					],
					[
						"color",
						"UI: Select Color Scheme"
					],
					[
						"R",
						"Set Syntax: R"
					],
					[
						"reind",
						"Indentation: Reindent Lines"
					],
					[
						"s",
						"Sort Lines"
					]
				],
				"width": 513.0
			},
			"console":
			{
				"height": 128.0,
				"history":
				[
					"r_docs",
					"rdocs"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"file_history":
			[
				"/Users/devin/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
				"/Users/devin/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
				"/Users/devin/Desktop/runs.csv",
				"/Users/devin/carterlab/Projects/meningioma_final/scripts/MSACS.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/setup.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/analysis/agg_msacs_segs.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/hets/combine_hets.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/MSACS/MSACS_submit.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/MSACS/MSACS.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/MSACS/MSACS.sh",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/coverage/SparkGenomeReadCounts_submit.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/vars.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/coverage/SparkGenomeReadCounts.sh",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/hets/filter_hets.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/coverage/fix_sgrc_output.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/coverage/GermlineCNVCaller.sh",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/coverage/CombineReadCounts_submit.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/hets/CollectAllelicCounts_submit.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/coverage/CalculateTargetCoverage_submit.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/coverage/CombineNormalReadCounts_submit.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/coverage/GermlineCNVCaller_submit.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/genotyping/TargetCoverageSexGenotyper_submit.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/README.md",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/hets/CollectAllelicCounts.sh",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/coverage/CombineReadCounts.sh",
				"/Users/devin/carterlab/Code/MSACS/R/export_allelic_seg_summaries.R",
				"/Users/devin/carterlab/Code/MSACS/R/compute_grid_posteriors_on_allelic_copyratio.R",
				"/Users/devin/carterlab/Code/MSACS/R/sample_from_allelic_seg_cluster_model.R",
				"/Users/devin/carterlab/Code/MSACS/R/fit_modes_SCNA_models.R",
				"/Users/devin/carterlab/Code/MSACS/R/densities.R",
				"/Users/devin/carterlab/Code/MSACS/R/fit_tcr.R",
				"/Users/devin/carterlab/Code/MSACS/DESCRIPTION",
				"/Users/devin/carterlab/Code/MSACS/R/load_data.R",
				"/Users/devin/carterlab/Code/MSACS/R/MSACS.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/.gitignore",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/genotyping/check_genotypes.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/genotyping/saturate_sex_genotypes.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/data/samples.tsv",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/MSACS/msacs_submit.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/MSACS/msacs_run.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/MSACS/msacs_run.sh",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/genotyping/TargetCoverageSexGenotyper.sh",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/post/agg_msacs_segs.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/genotyping/filter_par.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/coverage/filter_par.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/msacs/msacs_submit.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/support/resource_file_locations.sh",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/support/ice.no_MT_gcnv.250_pad.targets",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/resource_file_paths.sh",
				"/Users/devin/carterlab/Projects/mixing/scripts/sync.sh",
				"/Users/devin/carterlab/Code/MSACS/R/genome_plots.R",
				"/Users/devin/carterlab/Code/MSACS/R/definitions.R",
				"/Users/devin/carterlab/Code/MSACS/R/mscbs_wrapper.R",
				"/Users/devin/carterlab/Code/MSACS/R/minimal_MSCBS.R",
				"/Users/devin/carterlab/Code/MSACS/R/MS_plot_mergers.R",
				"/Users/devin/carterlab/Code/MSACS/R/cbs_wrapper.R",
				"/Users/devin/carterlab/Code/MSACS/R/modcmp_seg_merge.R",
				"/Users/devin/carterlab/Projects/melanoma/data_gcnv-09.07/acs2.tsv",
				"/Users/devin/carterlab/Code/MSACS/NAMESPACE",
				"/Users/devin/carterlab/Code/MSACS/R/MS_Split.R",
				"/Users/devin/carterlab/Projects/Boland_PrAn/scripts/sync.sh",
				"/Users/devin/carterlab/Code/MSACS/R/MS_fit_joint_seg_f_cond_consensus_SNP_GTs.R",
				"/Users/devin/carterlab/Code/MSACS/R/MS_joint_opt_seg_f_and_consensus_SNP_GTs.R",
				"/Users/devin/Sites/mdb/Gemfile",
				"/Users/devin/Sites/mdb/secrets/production.rb",
				"/Users/devin/Sites/mdb/secrets/development.rb",
				"/Users/devin/Sites/mdb/filenames.rb",
				"/Users/devin/Sites/mdb/config.ru",
				"/Users/devin/.gemrc",
				"/Users/devin/.zshrc",
				"/Users/devin/Sites/mdb/Procfile",
				"/Users/devin/Sites/mdb/mongoid.yml",
				"/Users/devin/carterlab/Code/MSACS/R/fit_object.R",
				"/Users/devin/carterlab/Code/MSACS/R/exporter.R",
				"/Users/devin/carterlab/Code/MSACS/R/segmenter.R",
				"/Users/devin/carterlab/Code/MSACS/R/models.R",
				"/Users/devin/carterlab/Code/MSACS/README.md",
				"/Users/devin/carterlab/Code/MSACS/R/MS_AllelicCapseg.R",
				"/Users/devin/carterlab/Code/MSACS/.gitignore",
				"/Users/devin/carterlab/Code/MSACS/R/MS_compute_ACS_f_model_average_posteriors.R",
				"/Users/devin/carterlab/Code/MSACS/src/beta_prime_distribution.cpp",
				"/Users/devin/carterlab/Code/MSACS/R/plot_aCR_segs.R",
				"/Users/devin/carterlab/Projects/melanoma/scripts/sync.sh",
				"/Users/devin/Desktop/temp.R",
				"/Users/devin/carterlab/Code/MSACS/R/MSACS.r",
				"/Users/devin/carterlab/Code/MSACS/man/MSACS.Rd",
				"/Users/devin/carterlab/Code/MSACS/R/detect_tiny_clones.R",
				"/Users/devin/carterlab/Code/MSACS/R/vargrid_SCNA_dens_functions.R",
				"/Users/devin/carterlab/Code/MSACS/R/import_MAF_data.R",
				"/Users/devin/carterlab/Code/MSACS/R/cluster_SSNV_CCFs.R",
				"/Users/devin/carterlab/Code/MSACS/R/SCNA_model_spec.R",
				"/Users/devin/carterlab/Code/MSACS/R/test_model.R",
				"/Users/devin/carterlab/Code/MSACS/R/run_MSCBS.R",
				"/Users/devin/carterlab/Code/MSACS/R/license.R",
				"/Users/devin/carterlab/Code/MSACS/R/fit_object.r",
				"/Users/devin/carterlab/Code/MSACS/R/definitions.r",
				"/Users/devin/carterlab/Code/MSACS/R/MS_error_model.R",
				"/Users/devin/carterlab/Code/MSACS/R/capseg_error_model.R",
				"/Users/devin/carterlab/Code/MSACS/R/capture_model_fit.R",
				"/Users/devin/carterlab/Code/MSACS/R/AllelicCapseg.R",
				"/Users/devin/carterlab/Code/MSACS/R/exporter.r",
				"/Users/devin/carterlab/Code/MSACS/R/genome_plots.r",
				"/Users/devin/carterlab/Code/MSACS/R/mscbs_wrapper.r",
				"/Users/devin/carterlab/Code/MSACS/R/models.r",
				"/Users/devin/carterlab/Code/MSACS/R/MS_LRT_seg_merge.R",
				"/Users/devin/carterlab/Projects/meningioma/scripts/sync.sh",
				"/Users/devin/.R/Makevars",
				"/Users/devin/carterlab/Code/MSACS/R/load_data.r",
				"/Users/devin/carterlab/Code/MSACS/R/cache_me.r",
				"/Users/devin/carterlab/Code/MSACS/R/fit_tcr.r",
				"/Users/devin/carterlab/Code/MSACS/R/cbs_wrapper.r",
				"/Users/devin/carterlab/Projects/liquid_wgs_ulp/scripts/sync.sh",
				"/Users/devin/Desktop/temp.r",
				"/Users/devin/Desktop/msacs_gcnv/scripts/run_msacs_gcnv.R",
				"/Users/devin/Desktop/HD_gender.txt",
				"/Users/devin/School/2014-1 (Spring)/Math 473/paper.tex",
				"/Users/devin/Desktop/10417_1.ctDNA.QC.FC15883359.correctedDepth.txt",
				"/Users/devin/School/2016-3 (Fall)/PDA (2550)/hw/hw05/hw5.tex",
				"/Users/devin/Documents/tex/hwtemplate.sty",
				"/Users/devin/School/2016-3 (Fall)/PDA (2550)/hw/hw05/hw5.Rnw",
				"/Users/devin/carterlab/Projects/meningioma/data_gcnv/acs.tsv",
				"/Users/devin/Desktop/16p13-13.tsv",
				"/Users/devin/carterlab/Code/MSACS/R/MS_fit_joint_seg_f.R",
				"/Users/devin/carterlab/Projects/meningioma/data-06.02b/acs.tsv",
				"/Users/devin/Desktop/t.r",
				"/Users/devin/Desktop/gcnv.txt",
				"/Users/devin/carterlab/Projects/melanoma/data_gcnv/acs.tsv",
				"/Users/devin/carterlab/Projects/melanoma/data/samples/PB-MS-001-Normal-SM-B5RXW/PB-MS-001-Normal-SM-B5RXW.filt.hets"
			],
			"find":
			{
				"height": 37.0
			},
			"find_in_files":
			{
				"height": 95.0,
				"where_history":
				[
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"incremental_find":
			{
				"height": 22.0
			},
			"input":
			{
				"height": 34.0
			},
			"menu_visible": true,
			"output.exec":
			{
				"height": 102.0
			},
			"output.find_results":
			{
				"height": 0.0
			},
			"output.mdpopups":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"replace":
			{
				"height": 40.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"msacs",
						"scripts/MSACS/MSACS.R"
					],
					[
						"fix",
						"scripts/coverage/fix_sgrc_output.R"
					],
					[
						"agg",
						"scripts/analysis/agg_msacs_segs.R"
					],
					[
						"msa",
						"scripts/MSACS/MSACS_submit.R"
					],
					[
						"combine",
						"scripts/hets/combine_hets.R"
					],
					[
						"set",
						"scripts/setup.R"
					],
					[
						"spar",
						"scripts/coverage/SparkGenomeReadCounts.sh"
					],
					[
						"coll",
						"scripts/hets/CollectAllelicCounts_submit.R"
					],
					[
						"readm",
						"README.md"
					],
					[
						"read",
						"scripts/coverage/CombineNormalReadCounts_submit.R"
					],
					[
						"tar",
						"scripts/genotyping/TargetCoverageSexGenotyper_submit.R"
					],
					[
						"germ",
						"scripts/coverage/GermlineCNVCaller_submit.R"
					],
					[
						"comb",
						"scripts/coverage/CombineReadCounts.sh"
					],
					[
						"gem",
						"scripts/coverage/GermlineCNVCaller.sh"
					],
					[
						"var",
						"scripts/vars.R"
					],
					[
						"calc",
						"scripts/coverage/CalculateTargetCoverage_submit.R"
					],
					[
						"rea",
						"README.md"
					],
					[
						"filt",
						"scripts/hets/filter_hets.R"
					],
					[
						"mod",
						"R/models.R"
					],
					[
						"all",
						"R/export_allelic_seg_summaries.R"
					],
					[
						"alle",
						"R/compute_grid_posteriors_on_allelic_copyratio.R"
					],
					[
						"exp",
						"R/exporter.R"
					],
					[
						"fit",
						"R/fit_tcr.R"
					],
					[
						"load",
						"R/load_data.R"
					],
					[
						"merge",
						"R/MS_plot_mergers.R"
					],
					[
						"def",
						"R/definitions.R"
					],
					[
						"segm",
						"R/segmenter.R"
					],
					[
						"des",
						"DESCRIPTION"
					],
					[
						"filter",
						"scripts/hets/filter_hets.R"
					],
					[
						"git",
						".gitignore"
					],
					[
						"com",
						"scripts/common.R"
					],
					[
						"nam",
						"NAMESPACE"
					],
					[
						"de",
						"DESCRIPTION"
					],
					[
						"nae",
						"NAMESPACE"
					],
					[
						"msc",
						"R/mscbs_wrapper.R"
					],
					[
						"cbs",
						"R/cbs_wrapper.R"
					],
					[
						"msplot",
						"R/MS_plot_mergers.R"
					],
					[
						"mspl",
						"R/MS_Split.R"
					],
					[
						"cmp",
						"R/modcmp_seg_merge.R"
					],
					[
						"lod",
						"R/load_data.R"
					],
					[
						"mer",
						"R/modcmp_seg_merge.R"
					],
					[
						"expo",
						"R/export_allelic_seg_summaries.R"
					],
					[
						"seg",
						"R/segmenter.R"
					],
					[
						"ms",
						"R/MSACS.R"
					],
					[
						"modc",
						"R/modcmp_seg_merge.R"
					],
					[
						"plot",
						"R/MS_plot_mergers.R"
					],
					[
						"ex",
						"R/export_allelic_seg_summaries.R"
					],
					[
						"fitt",
						"R/fit_tcr.R"
					],
					[
						"mscbs",
						"R/mscbs_wrapper.R"
					],
					[
						"geno",
						"R/genome_plots.R"
					],
					[
						"gen",
						"R/genome_plots.R"
					],
					[
						"name",
						"NAMESPACE"
					],
					[
						"giti",
						".gitignore"
					],
					[
						"dens",
						"R/densities.R"
					],
					[
						"d",
						"DESCRIPTION"
					],
					[
						"na",
						"NAMESPACE"
					],
					[
						"mscb",
						"R/mscbs_wrapper.R"
					],
					[
						"model",
						"R/models.R"
					],
					[
						"export",
						"R/export_allelic_seg_summaries.R"
					],
					[
						"defin",
						"R/definitions.R"
					],
					[
						"msac",
						"R/MSACS.r"
					],
					[
						"tcr",
						"R/fit_tcr.r"
					],
					[
						"fitob",
						"R/fit_object.r"
					],
					[
						"desc",
						"DESCRIPTION"
					],
					[
						"capseg",
						"R/capseg_error_model.R"
					],
					[
						"cache",
						"R/cache_me.r"
					],
					[
						"genom",
						"R/genome_plots.r"
					],
					[
						"ave",
						"R/MS_compute_ACS_f_model_average_posteriors.R"
					],
					[
						"grid",
						"R/compute_grid_posteriors_on_allelic_copyratio.R"
					],
					[
						"mode",
						"R/models.r"
					],
					[
						"genome",
						"R/genome_plots.r"
					],
					[
						"geom",
						"R/genome_plots.r"
					],
					[
						"plotmer",
						"R/MS_plot_mergers.R"
					],
					[
						"fittc",
						"R/fit_tcr.r"
					],
					[
						"mo",
						"R/models.r"
					],
					[
						"ms_fit_joint_seg_f_cond_consensus_snp_gts",
						"R/MS_fit_joint_seg_f_cond_consensus_SNP_GTs.R"
					],
					[
						"geo",
						"R/genome_plots.r"
					],
					[
						"joint",
						"R/MS_fit_joint_seg_f.R"
					],
					[
						"",
						"R/detect_tiny_clones.R"
					],
					[
						"merg",
						"R/MS_LRT_seg_merge.R"
					],
					[
						"cach",
						"R/cache_me.r"
					],
					[
						"msfitj",
						"R/MS_fit_joint_seg_f.R"
					],
					[
						"fito",
						"R/fit_object.r"
					],
					[
						"data",
						"R/load_data.r"
					],
					[
						"mserr",
						"R/MS_error_model.R"
					],
					[
						"wrap",
						"R/legacy_wrapper.r"
					],
					[
						"lrt",
						"R/MS_LRT_seg_merge.R"
					],
					[
						"msall",
						"R/MS_AllelicCapseg.R"
					],
					[
						"file",
						"R/file_parsers.R"
					],
					[
						"filep",
						"R/file_parsers.R"
					],
					[
						"msalli",
						"R/MS_AllelicCapseg.R"
					],
					[
						"parse",
						"R/file_parsers.R"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 375.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"",
						"AllelicCapseg"
					]
				],
				"width": 530.0
			},
			"show_minimap": false,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 339.0,
			"status_bar_visible": true,
			"template_settings":
			{
			}
		},
		"new_window_width": 1680.0
	},
	"windows":
	[
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"sampl",
						"sample_id"
					],
					[
						"samp",
						"sample_id"
					]
				]
			},
			"buffers":
			[
				{
					"file": "/Users/devin/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
					"settings":
					{
						"buffer_size": 17206,
						"line_ending": "Unix",
						"read_only": true,
						"scratch": true
					}
				},
				{
					"file": "/Users/devin/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
					"settings":
					{
						"buffer_size": 1840,
						"encoding": "UTF-8",
						"line_ending": "Unix"
					}
				}
			],
			"build_system": "",
			"build_system_choices":
			[
				[
					[
						[
							"Packages/LaTeXing/LaTeX.sublime-build",
							""
						],
						[
							"Packages/LaTeXing/LaTeX.sublime-build",
							"Clean up Files"
						],
						[
							"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
							""
						],
						[
							"Packages/User/LaTeX.sublime-build",
							""
						],
						[
							"Packages/User/LaTeX.sublime-build",
							"Primary Quick Build"
						],
						[
							"Packages/User/LaTeX.sublime-build",
							"Choose Quick Build"
						],
						[
							"Packages/User/LaTeX.sublime-build",
							"Clean up Files"
						]
					],
					[
						"Packages/User/LaTeX.sublime-build",
						""
					]
				]
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 357.0,
				"last_filter": "spaces",
				"selected_items":
				[
					[
						"spaces",
						"Indentation: Convert to Spaces"
					],
					[
						"space",
						"Indentation: Convert to Spaces"
					],
					[
						"uni",
						"Permute Lines: Unique"
					],
					[
						"sor",
						"Sort Lines"
					],
					[
						"color ",
						"UI: Select Color Scheme"
					],
					[
						"colo",
						"UI: Select Color Scheme"
					],
					[
						"theme",
						"UI: Select Theme"
					],
					[
						"scheme",
						"UI: Select Color Scheme"
					],
					[
						"uniq",
						"Permute Lines: Unique"
					],
					[
						"update",
						"Package Control: Upgrade/Overwrite All Packages"
					],
					[
						"indent",
						"Indentation: Reindent Lines"
					],
					[
						"install",
						"Package Control: Install Package"
					],
					[
						"instal",
						"Package Control: Install Package"
					],
					[
						"package",
						"Package Control: Add Repository"
					],
					[
						"isntal",
						"Package Control: Install Package"
					],
					[
						"enable",
						"Package Control: Enable Package"
					],
					[
						"R-bo",
						"Preferences: R-Box Key Bindings"
					],
					[
						"pack",
						"Package Control: List Packages"
					],
					[
						"packag",
						"Package Control: Enable Package"
					],
					[
						"remove pac",
						"Package Control: Remove Package"
					],
					[
						"build",
						"Build With: LaTeX"
					],
					[
						"clean",
						"LaTeXing: Clean Temporary Output Dictionary"
					],
					[
						"sort",
						"Sort Lines"
					],
					[
						"trim",
						"Trimmer: Trim leading AND trailing whitespace."
					],
					[
						"so",
						"Sort Lines"
					],
					[
						"color",
						"UI: Select Color Scheme"
					],
					[
						"R",
						"Set Syntax: R"
					],
					[
						"reind",
						"Indentation: Reindent Lines"
					],
					[
						"s",
						"Sort Lines"
					]
				],
				"width": 513.0
			},
			"console":
			{
				"height": 128.0,
				"history":
				[
					"r_docs",
					"rdocs"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"file_history":
			[
				"/Users/devin/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
				"/Users/devin/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
				"/Users/devin/Desktop/runs.csv",
				"/Users/devin/carterlab/Projects/meningioma_final/scripts/MSACS.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/setup.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/analysis/agg_msacs_segs.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/hets/combine_hets.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/MSACS/MSACS_submit.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/MSACS/MSACS.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/MSACS/MSACS.sh",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/coverage/SparkGenomeReadCounts_submit.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/vars.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/coverage/SparkGenomeReadCounts.sh",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/hets/filter_hets.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/coverage/fix_sgrc_output.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/coverage/GermlineCNVCaller.sh",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/coverage/CombineReadCounts_submit.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/hets/CollectAllelicCounts_submit.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/coverage/CalculateTargetCoverage_submit.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/coverage/CombineNormalReadCounts_submit.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/coverage/GermlineCNVCaller_submit.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/genotyping/TargetCoverageSexGenotyper_submit.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/README.md",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/hets/CollectAllelicCounts.sh",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/coverage/CombineReadCounts.sh",
				"/Users/devin/carterlab/Code/MSACS/R/export_allelic_seg_summaries.R",
				"/Users/devin/carterlab/Code/MSACS/R/compute_grid_posteriors_on_allelic_copyratio.R",
				"/Users/devin/carterlab/Code/MSACS/R/sample_from_allelic_seg_cluster_model.R",
				"/Users/devin/carterlab/Code/MSACS/R/fit_modes_SCNA_models.R",
				"/Users/devin/carterlab/Code/MSACS/R/densities.R",
				"/Users/devin/carterlab/Code/MSACS/R/fit_tcr.R",
				"/Users/devin/carterlab/Code/MSACS/DESCRIPTION",
				"/Users/devin/carterlab/Code/MSACS/R/load_data.R",
				"/Users/devin/carterlab/Code/MSACS/R/MSACS.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/.gitignore",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/genotyping/check_genotypes.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/genotyping/saturate_sex_genotypes.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/data/samples.tsv",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/MSACS/msacs_submit.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/MSACS/msacs_run.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/MSACS/msacs_run.sh",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/genotyping/TargetCoverageSexGenotyper.sh",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/post/agg_msacs_segs.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/genotyping/filter_par.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/coverage/filter_par.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/msacs/msacs_submit.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/support/resource_file_locations.sh",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/support/ice.no_MT_gcnv.250_pad.targets",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/resource_file_paths.sh",
				"/Users/devin/carterlab/Projects/mixing/scripts/sync.sh",
				"/Users/devin/carterlab/Code/MSACS/R/genome_plots.R",
				"/Users/devin/carterlab/Code/MSACS/R/definitions.R",
				"/Users/devin/carterlab/Code/MSACS/R/mscbs_wrapper.R",
				"/Users/devin/carterlab/Code/MSACS/R/minimal_MSCBS.R",
				"/Users/devin/carterlab/Code/MSACS/R/MS_plot_mergers.R",
				"/Users/devin/carterlab/Code/MSACS/R/cbs_wrapper.R",
				"/Users/devin/carterlab/Code/MSACS/R/modcmp_seg_merge.R",
				"/Users/devin/carterlab/Projects/melanoma/data_gcnv-09.07/acs2.tsv",
				"/Users/devin/carterlab/Code/MSACS/NAMESPACE",
				"/Users/devin/carterlab/Code/MSACS/R/MS_Split.R",
				"/Users/devin/carterlab/Projects/Boland_PrAn/scripts/sync.sh",
				"/Users/devin/carterlab/Code/MSACS/R/MS_fit_joint_seg_f_cond_consensus_SNP_GTs.R",
				"/Users/devin/carterlab/Code/MSACS/R/MS_joint_opt_seg_f_and_consensus_SNP_GTs.R",
				"/Users/devin/Sites/mdb/Gemfile",
				"/Users/devin/Sites/mdb/secrets/production.rb",
				"/Users/devin/Sites/mdb/secrets/development.rb",
				"/Users/devin/Sites/mdb/filenames.rb",
				"/Users/devin/Sites/mdb/config.ru",
				"/Users/devin/.gemrc",
				"/Users/devin/.zshrc",
				"/Users/devin/Sites/mdb/Procfile",
				"/Users/devin/Sites/mdb/mongoid.yml",
				"/Users/devin/carterlab/Code/MSACS/R/fit_object.R",
				"/Users/devin/carterlab/Code/MSACS/R/exporter.R",
				"/Users/devin/carterlab/Code/MSACS/R/segmenter.R",
				"/Users/devin/carterlab/Code/MSACS/R/models.R",
				"/Users/devin/carterlab/Code/MSACS/README.md",
				"/Users/devin/carterlab/Code/MSACS/R/MS_AllelicCapseg.R",
				"/Users/devin/carterlab/Code/MSACS/.gitignore",
				"/Users/devin/carterlab/Code/MSACS/R/MS_compute_ACS_f_model_average_posteriors.R",
				"/Users/devin/carterlab/Code/MSACS/src/beta_prime_distribution.cpp",
				"/Users/devin/carterlab/Code/MSACS/R/plot_aCR_segs.R",
				"/Users/devin/carterlab/Projects/melanoma/scripts/sync.sh",
				"/Users/devin/Desktop/temp.R",
				"/Users/devin/carterlab/Code/MSACS/R/MSACS.r",
				"/Users/devin/carterlab/Code/MSACS/man/MSACS.Rd",
				"/Users/devin/carterlab/Code/MSACS/R/detect_tiny_clones.R",
				"/Users/devin/carterlab/Code/MSACS/R/vargrid_SCNA_dens_functions.R",
				"/Users/devin/carterlab/Code/MSACS/R/import_MAF_data.R",
				"/Users/devin/carterlab/Code/MSACS/R/cluster_SSNV_CCFs.R",
				"/Users/devin/carterlab/Code/MSACS/R/SCNA_model_spec.R",
				"/Users/devin/carterlab/Code/MSACS/R/test_model.R",
				"/Users/devin/carterlab/Code/MSACS/R/run_MSCBS.R",
				"/Users/devin/carterlab/Code/MSACS/R/license.R",
				"/Users/devin/carterlab/Code/MSACS/R/fit_object.r",
				"/Users/devin/carterlab/Code/MSACS/R/definitions.r",
				"/Users/devin/carterlab/Code/MSACS/R/MS_error_model.R",
				"/Users/devin/carterlab/Code/MSACS/R/capseg_error_model.R",
				"/Users/devin/carterlab/Code/MSACS/R/capture_model_fit.R",
				"/Users/devin/carterlab/Code/MSACS/R/AllelicCapseg.R",
				"/Users/devin/carterlab/Code/MSACS/R/exporter.r",
				"/Users/devin/carterlab/Code/MSACS/R/genome_plots.r",
				"/Users/devin/carterlab/Code/MSACS/R/mscbs_wrapper.r",
				"/Users/devin/carterlab/Code/MSACS/R/models.r",
				"/Users/devin/carterlab/Code/MSACS/R/MS_LRT_seg_merge.R",
				"/Users/devin/carterlab/Projects/meningioma/scripts/sync.sh",
				"/Users/devin/.R/Makevars",
				"/Users/devin/carterlab/Code/MSACS/R/load_data.r",
				"/Users/devin/carterlab/Code/MSACS/R/cache_me.r",
				"/Users/devin/carterlab/Code/MSACS/R/fit_tcr.r",
				"/Users/devin/carterlab/Code/MSACS/R/cbs_wrapper.r",
				"/Users/devin/carterlab/Projects/liquid_wgs_ulp/scripts/sync.sh",
				"/Users/devin/Desktop/temp.r",
				"/Users/devin/Desktop/msacs_gcnv/scripts/run_msacs_gcnv.R",
				"/Users/devin/Desktop/HD_gender.txt",
				"/Users/devin/School/2014-1 (Spring)/Math 473/paper.tex",
				"/Users/devin/Desktop/10417_1.ctDNA.QC.FC15883359.correctedDepth.txt",
				"/Users/devin/School/2016-3 (Fall)/PDA (2550)/hw/hw05/hw5.tex",
				"/Users/devin/Documents/tex/hwtemplate.sty",
				"/Users/devin/School/2016-3 (Fall)/PDA (2550)/hw/hw05/hw5.Rnw",
				"/Users/devin/carterlab/Projects/meningioma/data_gcnv/acs.tsv",
				"/Users/devin/Desktop/16p13-13.tsv",
				"/Users/devin/carterlab/Code/MSACS/R/MS_fit_joint_seg_f.R",
				"/Users/devin/carterlab/Projects/meningioma/data-06.02b/acs.tsv",
				"/Users/devin/Desktop/t.r",
				"/Users/devin/Desktop/gcnv.txt",
				"/Users/devin/carterlab/Projects/melanoma/data_gcnv/acs.tsv",
				"/Users/devin/carterlab/Projects/melanoma/data/samples/PB-MS-001-Normal-SM-B5RXW/PB-MS-001-Normal-SM-B5RXW.filt.hets"
			],
			"find":
			{
				"height": 37.0
			},
			"find_in_files":
			{
				"height": 95.0,
				"where_history":
				[
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"groups":
			[
				{
					"selected": 0,
					"sheets":
					[
						{
							"buffer": 0,
							"file": "/Users/devin/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 17206,
								"regions":
								{
								},
								"selection":
								[
									[
										17206,
										17206
									]
								],
								"settings":
								{
									"edit_settings_other_view_id": 52,
									"edit_settings_view": "base",
									"git_gutter_is_enabled": false,
									"syntax": "Packages/PackageDev/Package/Sublime Text Settings/Sublime Text Settings.sublime-syntax"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 1,
							"type": "text"
						}
					]
				},
				{
					"selected": 0,
					"sheets":
					[
						{
							"buffer": 1,
							"file": "/Users/devin/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 1840,
								"regions":
								{
								},
								"selection":
								[
									[
										961,
										978
									]
								],
								"settings":
								{
									"edit_settings_other_view_id": 51,
									"edit_settings_view": "user",
									"git_gutter_is_enabled": false,
									"syntax": "Packages/PackageDev/Package/Sublime Text Settings/Sublime Text Settings.sublime-syntax",
									"translate_tabs_to_spaces": false
								},
								"translation.x": 0.0,
								"translation.y": 533.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 22.0
			},
			"input":
			{
				"height": 34.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					],
					[
						1,
						0,
						2,
						1
					]
				],
				"cols":
				[
					0.0,
					0.5,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.exec":
			{
				"height": 102.0
			},
			"output.find_results":
			{
				"height": 0.0
			},
			"output.mdpopups":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"position": "0 0 4 1680 1023 0 0 1680 1027 ",
			"project": "",
			"replace":
			{
				"height": 40.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"msacs",
						"scripts/MSACS/MSACS.R"
					],
					[
						"fix",
						"scripts/coverage/fix_sgrc_output.R"
					],
					[
						"agg",
						"scripts/analysis/agg_msacs_segs.R"
					],
					[
						"msa",
						"scripts/MSACS/MSACS_submit.R"
					],
					[
						"combine",
						"scripts/hets/combine_hets.R"
					],
					[
						"set",
						"scripts/setup.R"
					],
					[
						"spar",
						"scripts/coverage/SparkGenomeReadCounts.sh"
					],
					[
						"coll",
						"scripts/hets/CollectAllelicCounts_submit.R"
					],
					[
						"readm",
						"README.md"
					],
					[
						"read",
						"scripts/coverage/CombineNormalReadCounts_submit.R"
					],
					[
						"tar",
						"scripts/genotyping/TargetCoverageSexGenotyper_submit.R"
					],
					[
						"germ",
						"scripts/coverage/GermlineCNVCaller_submit.R"
					],
					[
						"comb",
						"scripts/coverage/CombineReadCounts.sh"
					],
					[
						"gem",
						"scripts/coverage/GermlineCNVCaller.sh"
					],
					[
						"var",
						"scripts/vars.R"
					],
					[
						"calc",
						"scripts/coverage/CalculateTargetCoverage_submit.R"
					],
					[
						"rea",
						"README.md"
					],
					[
						"filt",
						"scripts/hets/filter_hets.R"
					],
					[
						"mod",
						"R/models.R"
					],
					[
						"all",
						"R/export_allelic_seg_summaries.R"
					],
					[
						"alle",
						"R/compute_grid_posteriors_on_allelic_copyratio.R"
					],
					[
						"exp",
						"R/exporter.R"
					],
					[
						"fit",
						"R/fit_tcr.R"
					],
					[
						"load",
						"R/load_data.R"
					],
					[
						"merge",
						"R/MS_plot_mergers.R"
					],
					[
						"def",
						"R/definitions.R"
					],
					[
						"segm",
						"R/segmenter.R"
					],
					[
						"des",
						"DESCRIPTION"
					],
					[
						"filter",
						"scripts/hets/filter_hets.R"
					],
					[
						"git",
						".gitignore"
					],
					[
						"com",
						"scripts/common.R"
					],
					[
						"nam",
						"NAMESPACE"
					],
					[
						"de",
						"DESCRIPTION"
					],
					[
						"nae",
						"NAMESPACE"
					],
					[
						"msc",
						"R/mscbs_wrapper.R"
					],
					[
						"cbs",
						"R/cbs_wrapper.R"
					],
					[
						"msplot",
						"R/MS_plot_mergers.R"
					],
					[
						"mspl",
						"R/MS_Split.R"
					],
					[
						"cmp",
						"R/modcmp_seg_merge.R"
					],
					[
						"lod",
						"R/load_data.R"
					],
					[
						"mer",
						"R/modcmp_seg_merge.R"
					],
					[
						"expo",
						"R/export_allelic_seg_summaries.R"
					],
					[
						"seg",
						"R/segmenter.R"
					],
					[
						"ms",
						"R/MSACS.R"
					],
					[
						"modc",
						"R/modcmp_seg_merge.R"
					],
					[
						"plot",
						"R/MS_plot_mergers.R"
					],
					[
						"ex",
						"R/export_allelic_seg_summaries.R"
					],
					[
						"fitt",
						"R/fit_tcr.R"
					],
					[
						"mscbs",
						"R/mscbs_wrapper.R"
					],
					[
						"geno",
						"R/genome_plots.R"
					],
					[
						"gen",
						"R/genome_plots.R"
					],
					[
						"name",
						"NAMESPACE"
					],
					[
						"giti",
						".gitignore"
					],
					[
						"dens",
						"R/densities.R"
					],
					[
						"d",
						"DESCRIPTION"
					],
					[
						"na",
						"NAMESPACE"
					],
					[
						"mscb",
						"R/mscbs_wrapper.R"
					],
					[
						"model",
						"R/models.R"
					],
					[
						"export",
						"R/export_allelic_seg_summaries.R"
					],
					[
						"defin",
						"R/definitions.R"
					],
					[
						"msac",
						"R/MSACS.r"
					],
					[
						"tcr",
						"R/fit_tcr.r"
					],
					[
						"fitob",
						"R/fit_object.r"
					],
					[
						"desc",
						"DESCRIPTION"
					],
					[
						"capseg",
						"R/capseg_error_model.R"
					],
					[
						"cache",
						"R/cache_me.r"
					],
					[
						"genom",
						"R/genome_plots.r"
					],
					[
						"ave",
						"R/MS_compute_ACS_f_model_average_posteriors.R"
					],
					[
						"grid",
						"R/compute_grid_posteriors_on_allelic_copyratio.R"
					],
					[
						"mode",
						"R/models.r"
					],
					[
						"genome",
						"R/genome_plots.r"
					],
					[
						"geom",
						"R/genome_plots.r"
					],
					[
						"plotmer",
						"R/MS_plot_mergers.R"
					],
					[
						"fittc",
						"R/fit_tcr.r"
					],
					[
						"mo",
						"R/models.r"
					],
					[
						"ms_fit_joint_seg_f_cond_consensus_snp_gts",
						"R/MS_fit_joint_seg_f_cond_consensus_SNP_GTs.R"
					],
					[
						"geo",
						"R/genome_plots.r"
					],
					[
						"joint",
						"R/MS_fit_joint_seg_f.R"
					],
					[
						"",
						"R/detect_tiny_clones.R"
					],
					[
						"merg",
						"R/MS_LRT_seg_merge.R"
					],
					[
						"cach",
						"R/cache_me.r"
					],
					[
						"msfitj",
						"R/MS_fit_joint_seg_f.R"
					],
					[
						"fito",
						"R/fit_object.r"
					],
					[
						"data",
						"R/load_data.r"
					],
					[
						"mserr",
						"R/MS_error_model.R"
					],
					[
						"wrap",
						"R/legacy_wrapper.r"
					],
					[
						"lrt",
						"R/MS_LRT_seg_merge.R"
					],
					[
						"msall",
						"R/MS_AllelicCapseg.R"
					],
					[
						"file",
						"R/file_parsers.R"
					],
					[
						"filep",
						"R/file_parsers.R"
					],
					[
						"msalli",
						"R/MS_AllelicCapseg.R"
					],
					[
						"parse",
						"R/file_parsers.R"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 375.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"",
						"AllelicCapseg"
					]
				],
				"width": 530.0
			},
			"selected_group": 1,
			"settings":
			{
			},
			"show_minimap": false,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": false,
			"side_bar_width": 339.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 492,
			"workspace_name": ""
		},
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"sampl",
						"sample_id"
					],
					[
						"samp",
						"sample_id"
					]
				]
			},
			"buffers":
			[
				{
					"file": "/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/setup.R",
					"settings":
					{
						"buffer_size": 1214,
						"line_ending": "Unix"
					}
				}
			],
			"build_system": "",
			"build_system_choices":
			[
				[
					[
						[
							"Packages/LaTeXing/LaTeX.sublime-build",
							""
						],
						[
							"Packages/LaTeXing/LaTeX.sublime-build",
							"Clean up Files"
						],
						[
							"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
							""
						],
						[
							"Packages/User/LaTeX.sublime-build",
							""
						],
						[
							"Packages/User/LaTeX.sublime-build",
							"Primary Quick Build"
						],
						[
							"Packages/User/LaTeX.sublime-build",
							"Choose Quick Build"
						],
						[
							"Packages/User/LaTeX.sublime-build",
							"Clean up Files"
						]
					],
					[
						"Packages/User/LaTeX.sublime-build",
						""
					]
				]
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 357.0,
				"last_filter": "spaces",
				"selected_items":
				[
					[
						"spaces",
						"Indentation: Convert to Spaces"
					],
					[
						"space",
						"Indentation: Convert to Spaces"
					],
					[
						"uni",
						"Permute Lines: Unique"
					],
					[
						"sor",
						"Sort Lines"
					],
					[
						"color ",
						"UI: Select Color Scheme"
					],
					[
						"colo",
						"UI: Select Color Scheme"
					],
					[
						"theme",
						"UI: Select Theme"
					],
					[
						"scheme",
						"UI: Select Color Scheme"
					],
					[
						"uniq",
						"Permute Lines: Unique"
					],
					[
						"update",
						"Package Control: Upgrade/Overwrite All Packages"
					],
					[
						"indent",
						"Indentation: Reindent Lines"
					],
					[
						"install",
						"Package Control: Install Package"
					],
					[
						"instal",
						"Package Control: Install Package"
					],
					[
						"package",
						"Package Control: Add Repository"
					],
					[
						"isntal",
						"Package Control: Install Package"
					],
					[
						"enable",
						"Package Control: Enable Package"
					],
					[
						"R-bo",
						"Preferences: R-Box Key Bindings"
					],
					[
						"pack",
						"Package Control: List Packages"
					],
					[
						"packag",
						"Package Control: Enable Package"
					],
					[
						"remove pac",
						"Package Control: Remove Package"
					],
					[
						"build",
						"Build With: LaTeX"
					],
					[
						"clean",
						"LaTeXing: Clean Temporary Output Dictionary"
					],
					[
						"sort",
						"Sort Lines"
					],
					[
						"trim",
						"Trimmer: Trim leading AND trailing whitespace."
					],
					[
						"so",
						"Sort Lines"
					],
					[
						"color",
						"UI: Select Color Scheme"
					],
					[
						"R",
						"Set Syntax: R"
					],
					[
						"reind",
						"Indentation: Reindent Lines"
					],
					[
						"s",
						"Sort Lines"
					]
				],
				"width": 513.0
			},
			"console":
			{
				"height": 128.0,
				"history":
				[
					"r_docs",
					"rdocs"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"expanded_folders":
			[
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts"
			],
			"file_history":
			[
				"/Users/devin/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
				"/Users/devin/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
				"/Users/devin/Desktop/runs.csv",
				"/Users/devin/carterlab/Projects/meningioma_final/scripts/MSACS.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/setup.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/analysis/agg_msacs_segs.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/hets/combine_hets.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/MSACS/MSACS_submit.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/MSACS/MSACS.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/MSACS/MSACS.sh",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/coverage/SparkGenomeReadCounts_submit.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/vars.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/coverage/SparkGenomeReadCounts.sh",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/hets/filter_hets.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/coverage/fix_sgrc_output.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/coverage/GermlineCNVCaller.sh",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/coverage/CombineReadCounts_submit.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/hets/CollectAllelicCounts_submit.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/coverage/CalculateTargetCoverage_submit.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/coverage/CombineNormalReadCounts_submit.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/coverage/GermlineCNVCaller_submit.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/genotyping/TargetCoverageSexGenotyper_submit.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/README.md",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/hets/CollectAllelicCounts.sh",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/coverage/CombineReadCounts.sh",
				"/Users/devin/carterlab/Code/MSACS/R/export_allelic_seg_summaries.R",
				"/Users/devin/carterlab/Code/MSACS/R/compute_grid_posteriors_on_allelic_copyratio.R",
				"/Users/devin/carterlab/Code/MSACS/R/sample_from_allelic_seg_cluster_model.R",
				"/Users/devin/carterlab/Code/MSACS/R/fit_modes_SCNA_models.R",
				"/Users/devin/carterlab/Code/MSACS/R/densities.R",
				"/Users/devin/carterlab/Code/MSACS/R/fit_tcr.R",
				"/Users/devin/carterlab/Code/MSACS/DESCRIPTION",
				"/Users/devin/carterlab/Code/MSACS/R/load_data.R",
				"/Users/devin/carterlab/Code/MSACS/R/MSACS.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/.gitignore",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/genotyping/check_genotypes.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/genotyping/saturate_sex_genotypes.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/data/samples.tsv",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/MSACS/msacs_submit.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/MSACS/msacs_run.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/MSACS/msacs_run.sh",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/genotyping/TargetCoverageSexGenotyper.sh",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/post/agg_msacs_segs.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/genotyping/filter_par.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/coverage/filter_par.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/msacs/msacs_submit.R",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/support/resource_file_locations.sh",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/support/ice.no_MT_gcnv.250_pad.targets",
				"/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/resource_file_paths.sh",
				"/Users/devin/carterlab/Projects/mixing/scripts/sync.sh",
				"/Users/devin/carterlab/Code/MSACS/R/genome_plots.R",
				"/Users/devin/carterlab/Code/MSACS/R/definitions.R",
				"/Users/devin/carterlab/Code/MSACS/R/mscbs_wrapper.R",
				"/Users/devin/carterlab/Code/MSACS/R/minimal_MSCBS.R",
				"/Users/devin/carterlab/Code/MSACS/R/MS_plot_mergers.R",
				"/Users/devin/carterlab/Code/MSACS/R/cbs_wrapper.R",
				"/Users/devin/carterlab/Code/MSACS/R/modcmp_seg_merge.R",
				"/Users/devin/carterlab/Projects/melanoma/data_gcnv-09.07/acs2.tsv",
				"/Users/devin/carterlab/Code/MSACS/NAMESPACE",
				"/Users/devin/carterlab/Code/MSACS/R/MS_Split.R",
				"/Users/devin/carterlab/Projects/Boland_PrAn/scripts/sync.sh",
				"/Users/devin/carterlab/Code/MSACS/R/MS_fit_joint_seg_f_cond_consensus_SNP_GTs.R",
				"/Users/devin/carterlab/Code/MSACS/R/MS_joint_opt_seg_f_and_consensus_SNP_GTs.R",
				"/Users/devin/Sites/mdb/Gemfile",
				"/Users/devin/Sites/mdb/secrets/production.rb",
				"/Users/devin/Sites/mdb/secrets/development.rb",
				"/Users/devin/Sites/mdb/filenames.rb",
				"/Users/devin/Sites/mdb/config.ru",
				"/Users/devin/.gemrc",
				"/Users/devin/.zshrc",
				"/Users/devin/Sites/mdb/Procfile",
				"/Users/devin/Sites/mdb/mongoid.yml",
				"/Users/devin/carterlab/Code/MSACS/R/fit_object.R",
				"/Users/devin/carterlab/Code/MSACS/R/exporter.R",
				"/Users/devin/carterlab/Code/MSACS/R/segmenter.R",
				"/Users/devin/carterlab/Code/MSACS/R/models.R",
				"/Users/devin/carterlab/Code/MSACS/README.md",
				"/Users/devin/carterlab/Code/MSACS/R/MS_AllelicCapseg.R",
				"/Users/devin/carterlab/Code/MSACS/.gitignore",
				"/Users/devin/carterlab/Code/MSACS/R/MS_compute_ACS_f_model_average_posteriors.R",
				"/Users/devin/carterlab/Code/MSACS/src/beta_prime_distribution.cpp",
				"/Users/devin/carterlab/Code/MSACS/R/plot_aCR_segs.R",
				"/Users/devin/carterlab/Projects/melanoma/scripts/sync.sh",
				"/Users/devin/Desktop/temp.R",
				"/Users/devin/carterlab/Code/MSACS/R/MSACS.r",
				"/Users/devin/carterlab/Code/MSACS/man/MSACS.Rd",
				"/Users/devin/carterlab/Code/MSACS/R/detect_tiny_clones.R",
				"/Users/devin/carterlab/Code/MSACS/R/vargrid_SCNA_dens_functions.R",
				"/Users/devin/carterlab/Code/MSACS/R/import_MAF_data.R",
				"/Users/devin/carterlab/Code/MSACS/R/cluster_SSNV_CCFs.R",
				"/Users/devin/carterlab/Code/MSACS/R/SCNA_model_spec.R",
				"/Users/devin/carterlab/Code/MSACS/R/test_model.R",
				"/Users/devin/carterlab/Code/MSACS/R/run_MSCBS.R",
				"/Users/devin/carterlab/Code/MSACS/R/license.R",
				"/Users/devin/carterlab/Code/MSACS/R/fit_object.r",
				"/Users/devin/carterlab/Code/MSACS/R/definitions.r",
				"/Users/devin/carterlab/Code/MSACS/R/MS_error_model.R",
				"/Users/devin/carterlab/Code/MSACS/R/capseg_error_model.R",
				"/Users/devin/carterlab/Code/MSACS/R/capture_model_fit.R",
				"/Users/devin/carterlab/Code/MSACS/R/AllelicCapseg.R",
				"/Users/devin/carterlab/Code/MSACS/R/exporter.r",
				"/Users/devin/carterlab/Code/MSACS/R/genome_plots.r",
				"/Users/devin/carterlab/Code/MSACS/R/mscbs_wrapper.r",
				"/Users/devin/carterlab/Code/MSACS/R/models.r",
				"/Users/devin/carterlab/Code/MSACS/R/MS_LRT_seg_merge.R",
				"/Users/devin/carterlab/Projects/meningioma/scripts/sync.sh",
				"/Users/devin/.R/Makevars",
				"/Users/devin/carterlab/Code/MSACS/R/load_data.r",
				"/Users/devin/carterlab/Code/MSACS/R/cache_me.r",
				"/Users/devin/carterlab/Code/MSACS/R/fit_tcr.r",
				"/Users/devin/carterlab/Code/MSACS/R/cbs_wrapper.r",
				"/Users/devin/carterlab/Projects/liquid_wgs_ulp/scripts/sync.sh",
				"/Users/devin/Desktop/temp.r",
				"/Users/devin/Desktop/msacs_gcnv/scripts/run_msacs_gcnv.R",
				"/Users/devin/Desktop/HD_gender.txt",
				"/Users/devin/School/2014-1 (Spring)/Math 473/paper.tex",
				"/Users/devin/Desktop/10417_1.ctDNA.QC.FC15883359.correctedDepth.txt",
				"/Users/devin/School/2016-3 (Fall)/PDA (2550)/hw/hw05/hw5.tex",
				"/Users/devin/Documents/tex/hwtemplate.sty",
				"/Users/devin/School/2016-3 (Fall)/PDA (2550)/hw/hw05/hw5.Rnw",
				"/Users/devin/carterlab/Projects/meningioma/data_gcnv/acs.tsv",
				"/Users/devin/Desktop/16p13-13.tsv",
				"/Users/devin/carterlab/Code/MSACS/R/MS_fit_joint_seg_f.R",
				"/Users/devin/carterlab/Projects/meningioma/data-06.02b/acs.tsv",
				"/Users/devin/Desktop/t.r",
				"/Users/devin/Desktop/gcnv.txt",
				"/Users/devin/carterlab/Projects/melanoma/data_gcnv/acs.tsv",
				"/Users/devin/carterlab/Projects/melanoma/data/samples/PB-MS-001-Normal-SM-B5RXW/PB-MS-001-Normal-SM-B5RXW.filt.hets"
			],
			"find":
			{
				"height": 37.0
			},
			"find_in_files":
			{
				"height": 95.0,
				"where_history":
				[
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"folders":
			[
				{
					"path": "/Users/devin/carterlab/Code/gcnv_msacs_workflow"
				}
			],
			"groups":
			[
				{
					"selected": 0,
					"sheets":
					[
						{
							"buffer": 0,
							"file": "/Users/devin/carterlab/Code/gcnv_msacs_workflow/scripts/setup.R",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 1214,
								"regions":
								{
								},
								"selection":
								[
									[
										0,
										0
									]
								],
								"settings":
								{
									"R-Box.completions":
									[
										[
											"keep\t{purrr}",
											"keep"
										],
										[
											"discard\t{purrr}",
											"discard"
										],
										[
											"pmap_df\t{purrr}",
											"pmap_df"
										],
										[
											"is_scalar_vector\t{purrr}",
											"is_scalar_vector"
										],
										[
											"cross_n\t{purrr}",
											"cross_n"
										],
										[
											"map_int\t{purrr}",
											"map_int"
										],
										[
											"rerun\t{purrr}",
											"rerun"
										],
										[
											"invoke_map_chr\t{purrr}",
											"invoke_map_chr"
										],
										[
											"rdunif\t{purrr}",
											"rdunif"
										],
										[
											"map_call\t{purrr}",
											"map_call"
										],
										[
											"is_bare_integer\t{purrr}",
											"is_bare_integer"
										],
										[
											"dmap_if\t{purrr}",
											"dmap_if"
										],
										[
											"by_row\t{purrr}",
											"by_row"
										],
										[
											"prepend\t{purrr}",
											"prepend"
										],
										[
											"detect_index\t{purrr}",
											"detect_index"
										],
										[
											"accumulate\t{purrr}",
											"accumulate"
										],
										[
											"is_bare_vector\t{purrr}",
											"is_bare_vector"
										],
										[
											"is_bare_atomic\t{purrr}",
											"is_bare_atomic"
										],
										[
											"is_empty\t{purrr}",
											"is_empty"
										],
										[
											"is_formula\t{purrr}",
											"is_formula"
										],
										[
											"is_bare_character\t{purrr}",
											"is_bare_character"
										],
										[
											"invoke_map_df\t{purrr}",
											"invoke_map_df"
										],
										[
											"invoke_map_dbl\t{purrr}",
											"invoke_map_dbl"
										],
										[
											"invoke_map_int\t{purrr}",
											"invoke_map_int"
										],
										[
											"sort_by\t{purrr}",
											"sort_by"
										],
										[
											"is_character\t{purrr}",
											"is_character"
										],
										[
											"flatten\t{purrr}",
											"flatten"
										],
										[
											"is_bare_numeric\t{purrr}",
											"is_bare_numeric"
										],
										[
											"contains\t{purrr}",
											"contains"
										],
										[
											"compact\t{purrr}",
											"compact"
										],
										[
											"pmap_lgl\t{purrr}",
											"pmap_lgl"
										],
										[
											"flatten_int\t{purrr}",
											"flatten_int"
										],
										[
											"array_branch\t{purrr}",
											"array_branch"
										],
										[
											"rbernoulli\t{purrr}",
											"rbernoulli"
										],
										[
											"map_if\t{purrr}",
											"map_if"
										],
										[
											"is_numeric\t{purrr}",
											"is_numeric"
										],
										[
											"lift\t{purrr}",
											"lift"
										],
										[
											"map2_dbl\t{purrr}",
											"map2_dbl"
										],
										[
											"pmap_dbl\t{purrr}",
											"pmap_dbl"
										],
										[
											"is_logical\t{purrr}",
											"is_logical"
										],
										[
											"map_at\t{purrr}",
											"map_at"
										],
										[
											"when\t{purrr}",
											"when"
										],
										[
											"flatten_df\t{purrr}",
											"flatten_df"
										],
										[
											"as_function\t{purrr}",
											"as_function"
										],
										[
											"map2_df\t{purrr}",
											"map2_df"
										],
										[
											"is_scalar_numeric\t{purrr}",
											"is_scalar_numeric"
										],
										[
											"slice_rows\t{purrr}",
											"slice_rows"
										],
										[
											"map2_lgl\t{purrr}",
											"map2_lgl"
										],
										[
											"reduce\t{purrr}",
											"reduce"
										],
										[
											"lmap\t{purrr}",
											"lmap"
										],
										[
											"quietly\t{purrr}",
											"quietly"
										],
										[
											"map_chr\t{purrr}",
											"map_chr"
										],
										[
											"is_integer\t{purrr}",
											"is_integer"
										],
										[
											"flatten_chr\t{purrr}",
											"flatten_chr"
										],
										[
											"is_vector\t{purrr}",
											"is_vector"
										],
										[
											"is_scalar_logical\t{purrr}",
											"is_scalar_logical"
										],
										[
											"splice\t{purrr}",
											"splice"
										],
										[
											"by_slice\t{purrr}",
											"by_slice"
										],
										[
											"zip2\t{purrr}",
											"zip2"
										],
										[
											"as_vector\t{purrr}",
											"as_vector"
										],
										[
											"pmap_chr\t{purrr}",
											"pmap_chr"
										],
										[
											"lift_dv\t{purrr}",
											"lift_dv"
										],
										[
											"zip3\t{purrr}",
											"zip3"
										],
										[
											"is_atomic\t{purrr}",
											"is_atomic"
										],
										[
											"order_by\t{purrr}",
											"order_by"
										],
										[
											"invoke\t{purrr}",
											"invoke"
										],
										[
											"is_function\t{purrr}",
											"is_function"
										],
										[
											"lift_vd\t{purrr}",
											"lift_vd"
										],
										[
											"is_bare_list\t{purrr}",
											"is_bare_list"
										],
										[
											"is_scalar_double\t{purrr}",
											"is_scalar_double"
										],
										[
											"walk2\t{purrr}",
											"walk2"
										],
										[
											"walk3\t{purrr}",
											"walk3"
										],
										[
											"split_by\t{purrr}",
											"split_by"
										],
										[
											"some\t{purrr}",
											"some"
										],
										[
											"map_n\t{purrr}",
											"map_n"
										],
										[
											"lift_lv\t{purrr}",
											"lift_lv"
										],
										[
											"map2_chr\t{purrr}",
											"map2_chr"
										],
										[
											"update_list\t{purrr}",
											"update_list"
										],
										[
											"flatten_dbl\t{purrr}",
											"flatten_dbl"
										],
										[
											"accumulate_right\t{purrr}",
											"accumulate_right"
										],
										[
											"lmap_at\t{purrr}",
											"lmap_at"
										],
										[
											"is_list\t{purrr}",
											"is_list"
										],
										[
											"lift_vl\t{purrr}",
											"lift_vl"
										],
										[
											"zip_n\t{purrr}",
											"zip_n"
										],
										[
											"map_df\t{purrr}",
											"map_df"
										],
										[
											"simplify_all\t{purrr}",
											"simplify_all"
										],
										[
											"pmap_int\t{purrr}",
											"pmap_int"
										],
										[
											"partial\t{purrr}",
											"partial"
										],
										[
											"is_bare_double\t{purrr}",
											"is_bare_double"
										],
										[
											"lmap_if\t{purrr}",
											"lmap_if"
										],
										[
											"lift_dl\t{purrr}",
											"lift_dl"
										],
										[
											"map_lgl\t{purrr}",
											"map_lgl"
										],
										[
											"pmap\t{purrr}",
											"pmap"
										],
										[
											"is_null\t{purrr}",
											"is_null"
										],
										[
											"unslice\t{purrr}",
											"unslice"
										],
										[
											"map_rows\t{purrr}",
											"map_rows"
										],
										[
											"set_names\t{purrr}",
											"set_names"
										],
										[
											"map_dbl\t{purrr}",
											"map_dbl"
										],
										[
											"lift_ld\t{purrr}",
											"lift_ld"
										],
										[
											"is_scalar_list\t{purrr}",
											"is_scalar_list"
										],
										[
											"safely\t{purrr}",
											"safely"
										],
										[
											"array_tree\t{purrr}",
											"array_tree"
										],
										[
											"walk_n\t{purrr}",
											"walk_n"
										],
										[
											"map2_int\t{purrr}",
											"map2_int"
										],
										[
											"negate\t{purrr}",
											"negate"
										],
										[
											"is_double\t{purrr}",
											"is_double"
										],
										[
											"transpose\t{purrr}",
											"transpose"
										],
										[
											"map2\t{purrr}",
											"map2"
										],
										[
											"map3\t{purrr}",
											"map3"
										],
										[
											"list_along\t{purrr}",
											"list_along"
										],
										[
											"invoke_map\t{purrr}",
											"invoke_map"
										],
										[
											"invoke_map_lgl\t{purrr}",
											"invoke_map_lgl"
										],
										[
											"every\t{purrr}",
											"every"
										],
										[
											"compose\t{purrr}",
											"compose"
										],
										[
											"possibly\t{purrr}",
											"possibly"
										],
										[
											"head_while\t{purrr}",
											"head_while"
										],
										[
											"walk\t{purrr}",
											"walk"
										],
										[
											"is_scalar_atomic\t{purrr}",
											"is_scalar_atomic"
										],
										[
											"flatmap\t{purrr}",
											"flatmap"
										],
										[
											"dmap_at\t{purrr}",
											"dmap_at"
										],
										[
											"simplify\t{purrr}",
											"simplify"
										],
										[
											"map\t{purrr}",
											"map"
										],
										[
											"at_depth\t{purrr}",
											"at_depth"
										],
										[
											"detect\t{purrr}",
											"detect"
										],
										[
											"tail_while\t{purrr}",
											"tail_while"
										],
										[
											"rep_along\t{purrr}",
											"rep_along"
										],
										[
											"is_bare_logical\t{purrr}",
											"is_bare_logical"
										],
										[
											"dmap\t{purrr}",
											"dmap"
										],
										[
											"reduce_right\t{purrr}",
											"reduce_right"
										],
										[
											"is_scalar_character\t{purrr}",
											"is_scalar_character"
										],
										[
											"is_scalar_integer\t{purrr}",
											"is_scalar_integer"
										],
										[
											"pwalk\t{purrr}",
											"pwalk"
										],
										[
											"cross_d\t{purrr}",
											"cross_d"
										],
										[
											"flatten_lgl\t{purrr}",
											"flatten_lgl"
										],
										[
											"cross2\t{purrr}",
											"cross2"
										],
										[
											"cross3\t{purrr}",
											"cross3"
										],
										[
											"invoke_rows\t{purrr}",
											"invoke_rows"
										],
										[
											"dmap_at\t{purrrlyr}",
											"dmap_at"
										],
										[
											"slice_rows\t{purrrlyr}",
											"slice_rows"
										],
										[
											"dmap_if\t{purrrlyr}",
											"dmap_if"
										],
										[
											"unslice\t{purrrlyr}",
											"unslice"
										],
										[
											"by_row\t{purrrlyr}",
											"by_row"
										],
										[
											"map_rows\t{purrrlyr}",
											"map_rows"
										],
										[
											"dmap\t{purrrlyr}",
											"dmap"
										],
										[
											"by_slice\t{purrrlyr}",
											"by_slice"
										],
										[
											"invoke_rows\t{purrrlyr}",
											"invoke_rows"
										],
										[
											"nest_\t{tidyr}",
											"nest_"
										],
										[
											"unnest\t{tidyr}",
											"unnest"
										],
										[
											"full_seq\t{tidyr}",
											"full_seq"
										],
										[
											"separate_\t{tidyr}",
											"separate_"
										],
										[
											"spread\t{tidyr}",
											"spread"
										],
										[
											"complete\t{tidyr}",
											"complete"
										],
										[
											"drop_na_\t{tidyr}",
											"drop_na_"
										],
										[
											"fill_\t{tidyr}",
											"fill_"
										],
										[
											"drop_na\t{tidyr}",
											"drop_na"
										],
										[
											"crossing\t{tidyr}",
											"crossing"
										],
										[
											"complete_\t{tidyr}",
											"complete_"
										],
										[
											"separate_rows\t{tidyr}",
											"separate_rows"
										],
										[
											"gather\t{tidyr}",
											"gather"
										],
										[
											"unite_\t{tidyr}",
											"unite_"
										],
										[
											"extract\t{tidyr}",
											"extract"
										],
										[
											"crossing_\t{tidyr}",
											"crossing_"
										],
										[
											"fill\t{tidyr}",
											"fill"
										],
										[
											"nesting_\t{tidyr}",
											"nesting_"
										],
										[
											"separate\t{tidyr}",
											"separate"
										],
										[
											"spread_\t{tidyr}",
											"spread_"
										],
										[
											"nest\t{tidyr}",
											"nest"
										],
										[
											"unnest_\t{tidyr}",
											"unnest_"
										],
										[
											"extract_\t{tidyr}",
											"extract_"
										],
										[
											"gather_\t{tidyr}",
											"gather_"
										],
										[
											"extract_numeric\t{tidyr}",
											"extract_numeric"
										],
										[
											"expand\t{tidyr}",
											"expand"
										],
										[
											"unite\t{tidyr}",
											"unite"
										],
										[
											"nesting\t{tidyr}",
											"nesting"
										],
										[
											"replace_na\t{tidyr}",
											"replace_na"
										],
										[
											"separate_rows_\t{tidyr}",
											"separate_rows_"
										],
										[
											"expand_\t{tidyr}",
											"expand_"
										],
										[
											"Sys.Date\t{base}",
											"Sys.Date"
										],
										[
											"c.warnings\t{base}",
											"c.warnings"
										],
										[
											"as.expression.default\t{base}",
											"as.expression.default"
										],
										[
											"as.POSIXlt.factor\t{base}",
											"as.POSIXlt.factor"
										],
										[
											"unique.warnings\t{base}",
											"unique.warnings"
										],
										[
											"regexpr\t{base}",
											"regexpr"
										],
										[
											"parse\t{base}",
											"parse"
										],
										[
											"library.dynam.unload\t{base}",
											"library.dynam.unload"
										],
										[
											"-\t{base}",
											"-"
										],
										[
											"is.list\t{base}",
											"is.list"
										],
										[
											"switch\t{base}",
											"switch"
										],
										[
											"identity\t{base}",
											"identity"
										],
										[
											"merge.default\t{base}",
											"merge.default"
										],
										[
											".rowSums\t{base}",
											".rowSums"
										],
										[
											"as.hexmode\t{base}",
											"as.hexmode"
										],
										[
											"quarters.POSIXt\t{base}",
											"quarters.POSIXt"
										],
										[
											"F\t{base}",
											"F"
										],
										[
											"as.qr\t{base}",
											"as.qr"
										],
										[
											"double\t{base}",
											"double"
										],
										[
											"numeric_version\t{base}",
											"numeric_version"
										],
										[
											"file.info\t{base}",
											"file.info"
										],
										[
											"I\t{base}",
											"I"
										],
										[
											".Deprecated\t{base}",
											".Deprecated"
										],
										[
											"readline\t{base}",
											"readline"
										],
										[
											"saveRDS\t{base}",
											"saveRDS"
										],
										[
											".packageStartupMessage\t{base}",
											".packageStartupMessage"
										],
										[
											"T\t{base}",
											"T"
										],
										[
											".C_R_addTaskCallback\t{base}",
											".C_R_addTaskCallback"
										],
										[
											".expand_R_libs_env_var\t{base}",
											".expand_R_libs_env_var"
										],
										[
											"c\t{base}",
											"c"
										],
										[
											"asNamespace\t{base}",
											"asNamespace"
										],
										[
											"stop\t{base}",
											"stop"
										],
										[
											"q\t{base}",
											"q"
										],
										[
											"flush\t{base}",
											"flush"
										],
										[
											"strsplit\t{base}",
											"strsplit"
										],
										[
											"t\t{base}",
											"t"
										],
										[
											"anyDuplicated\t{base}",
											"anyDuplicated"
										],
										[
											".F_dqrqy\t{base}",
											".F_dqrqy"
										],
										[
											"setdiff\t{base}",
											"setdiff"
										],
										[
											".packages\t{base}",
											".packages"
										],
										[
											"unix.time\t{base}",
											"unix.time"
										],
										[
											"gctorture\t{base}",
											"gctorture"
										],
										[
											"pcre_config\t{base}",
											"pcre_config"
										],
										[
											"charmatch\t{base}",
											"charmatch"
										],
										[
											"is.ordered\t{base}",
											"is.ordered"
										],
										[
											"enquote\t{base}",
											"enquote"
										],
										[
											"as.data.frame.data.frame\t{base}",
											"as.data.frame.data.frame"
										],
										[
											"as.list\t{base}",
											"as.list"
										],
										[
											".F_dqrxb\t{base}",
											".F_dqrxb"
										],
										[
											"mean.Date\t{base}",
											"mean.Date"
										],
										[
											"is.numeric.POSIXt\t{base}",
											"is.numeric.POSIXt"
										],
										[
											"diff.default\t{base}",
											"diff.default"
										],
										[
											".getNamespaceInfo\t{base}",
											".getNamespaceInfo"
										],
										[
											".mapply\t{base}",
											".mapply"
										],
										[
											"debugonce\t{base}",
											"debugonce"
										],
										[
											"print.AsIs\t{base}",
											"print.AsIs"
										],
										[
											"bitwXor\t{base}",
											"bitwXor"
										],
										[
											"asin\t{base}",
											"asin"
										],
										[
											"qr.fitted\t{base}",
											"qr.fitted"
										],
										[
											"as.data.frame.numeric_version\t{base}",
											"as.data.frame.numeric_version"
										],
										[
											"pretty.default\t{base}",
											"pretty.default"
										],
										[
											"signalCondition\t{base}",
											"signalCondition"
										],
										[
											"invokeRestart\t{base}",
											"invokeRestart"
										],
										[
											"Summary.Date\t{base}",
											"Summary.Date"
										],
										[
											"simplify2array\t{base}",
											"simplify2array"
										],
										[
											"loadingNamespaceInfo\t{base}",
											"loadingNamespaceInfo"
										],
										[
											"sys.function\t{base}",
											"sys.function"
										],
										[
											".make_numeric_version\t{base}",
											".make_numeric_version"
										],
										[
											"cumsum\t{base}",
											"cumsum"
										],
										[
											"gsub\t{base}",
											"gsub"
										],
										[
											"withRestarts\t{base}",
											"withRestarts"
										],
										[
											"diff.difftime\t{base}",
											"diff.difftime"
										],
										[
											"seek\t{base}",
											"seek"
										],
										[
											"NCOL\t{base}",
											"NCOL"
										],
										[
											"class\t{base}",
											"class"
										],
										[
											"readRDS\t{base}",
											"readRDS"
										],
										[
											"environment\t{base}",
											"environment"
										],
										[
											"kappa.default\t{base}",
											"kappa.default"
										],
										[
											".dynLibs\t{base}",
											".dynLibs"
										],
										[
											"outer\t{base}",
											"outer"
										],
										[
											"seq.POSIXt\t{base}",
											"seq.POSIXt"
										],
										[
											"conditionCall\t{base}",
											"conditionCall"
										],
										[
											"print.condition\t{base}",
											"print.condition"
										],
										[
											"chol2inv\t{base}",
											"chol2inv"
										],
										[
											".POSIXct\t{base}",
											".POSIXct"
										],
										[
											"list.dirs\t{base}",
											"list.dirs"
										],
										[
											"format.default\t{base}",
											"format.default"
										],
										[
											"env.profile\t{base}",
											"env.profile"
										],
										[
											"La.svd\t{base}",
											"La.svd"
										],
										[
											"as.single.default\t{base}",
											"as.single.default"
										],
										[
											"Sys.info\t{base}",
											"Sys.info"
										],
										[
											"stdout\t{base}",
											"stdout"
										],
										[
											"attr.all.equal\t{base}",
											"attr.all.equal"
										],
										[
											"acos\t{base}",
											"acos"
										],
										[
											"atan\t{base}",
											"atan"
										],
										[
											"mean\t{base}",
											"mean"
										],
										[
											"debug\t{base}",
											"debug"
										],
										[
											"is.function\t{base}",
											"is.function"
										],
										[
											"repeat\t{base}",
											"repeat"
										],
										[
											"R_system_version\t{base}",
											"R_system_version"
										],
										[
											"UseMethod\t{base}",
											"UseMethod"
										],
										[
											"paste\t{base}",
											"paste"
										],
										[
											"xpdrows.data.frame\t{base}",
											"xpdrows.data.frame"
										],
										[
											"conditionMessage.condition\t{base}",
											"conditionMessage.condition"
										],
										[
											"trunc.POSIXt\t{base}",
											"trunc.POSIXt"
										],
										[
											"jitter\t{base}",
											"jitter"
										],
										[
											"quit\t{base}",
											"quit"
										],
										[
											"anyNA.POSIXlt\t{base}",
											"anyNA.POSIXlt"
										],
										[
											"as.data.frame.AsIs\t{base}",
											"as.data.frame.AsIs"
										],
										[
											".F_dtrco\t{base}",
											".F_dtrco"
										],
										[
											"print.listof\t{base}",
											"print.listof"
										],
										[
											"order\t{base}",
											"order"
										],
										[
											"getDLLRegisteredRoutines\t{base}",
											"getDLLRegisteredRoutines"
										],
										[
											"Math.POSIXt\t{base}",
											"Math.POSIXt"
										],
										[
											"rowsum.default\t{base}",
											"rowsum.default"
										],
										[
											"suppressWarnings\t{base}",
											"suppressWarnings"
										],
										[
											"findPackageEnv\t{base}",
											"findPackageEnv"
										],
										[
											".getNamespace\t{base}",
											".getNamespace"
										],
										[
											".find.package\t{base}",
											".find.package"
										],
										[
											"socketConnection\t{base}",
											"socketConnection"
										],
										[
											"rowsum\t{base}",
											"rowsum"
										],
										[
											"file.copy\t{base}",
											"file.copy"
										],
										[
											".POSIXlt\t{base}",
											".POSIXlt"
										],
										[
											"comment\t{base}",
											"comment"
										],
										[
											"print.NativeRoutineList\t{base}",
											"print.NativeRoutineList"
										],
										[
											"closeAllConnections\t{base}",
											"closeAllConnections"
										],
										[
											"character\t{base}",
											"character"
										],
										[
											".F_dqrcf\t{base}",
											".F_dqrcf"
										],
										[
											"sQuote\t{base}",
											"sQuote"
										],
										[
											"lgamma\t{base}",
											"lgamma"
										],
										[
											"getAllConnections\t{base}",
											"getAllConnections"
										],
										[
											".signalSimpleWarning\t{base}",
											".signalSimpleWarning"
										],
										[
											"regmatches\t{base}",
											"regmatches"
										],
										[
											"untracemem\t{base}",
											"untracemem"
										],
										[
											"unique.matrix\t{base}",
											"unique.matrix"
										],
										[
											"addTaskCallback\t{base}",
											"addTaskCallback"
										],
										[
											"as.POSIXlt.date\t{base}",
											"as.POSIXlt.date"
										],
										[
											"anyDuplicated.matrix\t{base}",
											"anyDuplicated.matrix"
										],
										[
											"dirname\t{base}",
											"dirname"
										],
										[
											"getHook\t{base}",
											"getHook"
										],
										[
											"match.arg\t{base}",
											"match.arg"
										],
										[
											"as.data.frame.matrix\t{base}",
											"as.data.frame.matrix"
										],
										[
											"xtfrm.numeric_version\t{base}",
											"xtfrm.numeric_version"
										],
										[
											"loadNamespace\t{base}",
											"loadNamespace"
										],
										[
											".getRequiredPackages\t{base}",
											".getRequiredPackages"
										],
										[
											"return\t{base}",
											"return"
										],
										[
											"eval.parent\t{base}",
											"eval.parent"
										],
										[
											"getOption\t{base}",
											"getOption"
										],
										[
											"duplicated.warnings\t{base}",
											"duplicated.warnings"
										],
										[
											"forceAndCall\t{base}",
											"forceAndCall"
										],
										[
											"charToRaw\t{base}",
											"charToRaw"
										],
										[
											"Position\t{base}",
											"Position"
										],
										[
											"prmatrix\t{base}",
											"prmatrix"
										],
										[
											"strrep\t{base}",
											"strrep"
										],
										[
											"sys.call\t{base}",
											"sys.call"
										],
										[
											"zapsmall\t{base}",
											"zapsmall"
										],
										[
											"as.data.frame.logical\t{base}",
											"as.data.frame.logical"
										],
										[
											"is.vector\t{base}",
											"is.vector"
										],
										[
											"getLoadedDLLs\t{base}",
											"getLoadedDLLs"
										],
										[
											"apply\t{base}",
											"apply"
										],
										[
											"library.dynam\t{base}",
											"library.dynam"
										],
										[
											"within.data.frame\t{base}",
											"within.data.frame"
										],
										[
											".colSums\t{base}",
											".colSums"
										],
										[
											"format.AsIs\t{base}",
											"format.AsIs"
										],
										[
											"print.function\t{base}",
											"print.function"
										],
										[
											"duplicated.array\t{base}",
											"duplicated.array"
										],
										[
											"package_version\t{base}",
											"package_version"
										],
										[
											"lazyLoadDBfetch\t{base}",
											"lazyLoadDBfetch"
										],
										[
											"print.octmode\t{base}",
											"print.octmode"
										],
										[
											"labels\t{base}",
											"labels"
										],
										[
											".amatch_bounds\t{base}",
											".amatch_bounds"
										],
										[
											"intToBits\t{base}",
											"intToBits"
										],
										[
											"packBits\t{base}",
											"packBits"
										],
										[
											"dimnames.data.frame\t{base}",
											"dimnames.data.frame"
										],
										[
											"factorial\t{base}",
											"factorial"
										],
										[
											"grouping\t{base}",
											"grouping"
										],
										[
											"namespaceExport\t{base}",
											"namespaceExport"
										],
										[
											"match.call\t{base}",
											"match.call"
										],
										[
											"icuGetCollate\t{base}",
											"icuGetCollate"
										],
										[
											"toupper\t{base}",
											"toupper"
										],
										[
											"weekdays.Date\t{base}",
											"weekdays.Date"
										],
										[
											"getDLLRegisteredRoutines.character\t{base}",
											"getDLLRegisteredRoutines.character"
										],
										[
											"cut.POSIXt\t{base}",
											"cut.POSIXt"
										],
										[
											"cospi\t{base}",
											"cospi"
										],
										[
											"nargs\t{base}",
											"nargs"
										],
										[
											"unserialize\t{base}",
											"unserialize"
										],
										[
											"proc.time\t{base}",
											"proc.time"
										],
										[
											".GlobalEnv\t{base}",
											".GlobalEnv"
										],
										[
											"attr\t{base}",
											"attr"
										],
										[
											"all.names\t{base}",
											"all.names"
										],
										[
											"curlGetHeaders\t{base}",
											"curlGetHeaders"
										],
										[
											"textConnectionValue\t{base}",
											"textConnectionValue"
										],
										[
											"require\t{base}",
											"require"
										],
										[
											"writeBin\t{base}",
											"writeBin"
										],
										[
											"acosh\t{base}",
											"acosh"
										],
										[
											"RNGversion\t{base}",
											"RNGversion"
										],
										[
											"atan2\t{base}",
											"atan2"
										],
										[
											"all.equal.factor\t{base}",
											"all.equal.factor"
										],
										[
											"getTaskCallbackNames\t{base}",
											"getTaskCallbackNames"
										],
										[
											"file.size\t{base}",
											"file.size"
										],
										[
											"summary.proc_time\t{base}",
											"summary.proc_time"
										],
										[
											"is.matrix\t{base}",
											"is.matrix"
										],
										[
											"next\t{base}",
											"next"
										],
										[
											"weekdays.POSIXt\t{base}",
											"weekdays.POSIXt"
										],
										[
											"droplevels.factor\t{base}",
											"droplevels.factor"
										],
										[
											"rapply\t{base}",
											"rapply"
										],
										[
											"pos.to.env\t{base}",
											"pos.to.env"
										],
										[
											"as.logical\t{base}",
											"as.logical"
										],
										[
											"weekdays\t{base}",
											"weekdays"
										],
										[
											"as.array\t{base}",
											"as.array"
										],
										[
											"xtfrm.Surv\t{base}",
											"xtfrm.Surv"
										],
										[
											"as.matrix.POSIXlt\t{base}",
											"as.matrix.POSIXlt"
										],
										[
											"options\t{base}",
											"options"
										],
										[
											"dump\t{base}",
											"dump"
										],
										[
											"get0\t{base}",
											"get0"
										],
										[
											"readBin\t{base}",
											"readBin"
										],
										[
											"isSymmetric.matrix\t{base}",
											"isSymmetric.matrix"
										],
										[
											"chkDots\t{base}",
											"chkDots"
										],
										[
											"as.ordered\t{base}",
											"as.ordered"
										],
										[
											"atanh\t{base}",
											"atanh"
										],
										[
											"log\t{base}",
											"log"
										],
										[
											"xtfrm.factor\t{base}",
											"xtfrm.factor"
										],
										[
											"deparse\t{base}",
											"deparse"
										],
										[
											".bincode\t{base}",
											".bincode"
										],
										[
											"dir.exists\t{base}",
											"dir.exists"
										],
										[
											"cut.Date\t{base}",
											"cut.Date"
										],
										[
											"eval\t{base}",
											"eval"
										],
										[
											"nzchar\t{base}",
											"nzchar"
										],
										[
											"close.connection\t{base}",
											"close.connection"
										],
										[
											"all.vars\t{base}",
											"all.vars"
										],
										[
											"standardGeneric\t{base}",
											"standardGeneric"
										],
										[
											"sort.default\t{base}",
											"sort.default"
										],
										[
											"subset\t{base}",
											"subset"
										],
										[
											"max\t{base}",
											"max"
										],
										[
											"by.default\t{base}",
											"by.default"
										],
										[
											"array\t{base}",
											"array"
										],
										[
											"Map\t{base}",
											"Map"
										],
										[
											"simpleWarning\t{base}",
											"simpleWarning"
										],
										[
											"kronecker\t{base}",
											"kronecker"
										],
										[
											"validUTF8\t{base}",
											"validUTF8"
										],
										[
											"names.POSIXlt\t{base}",
											"names.POSIXlt"
										],
										[
											"as.matrix.data.frame\t{base}",
											"as.matrix.data.frame"
										],
										[
											"polyroot\t{base}",
											"polyroot"
										],
										[
											"R.version.string\t{base}",
											"R.version.string"
										],
										[
											"colMeans\t{base}",
											"colMeans"
										],
										[
											".C\t{base}",
											".C"
										],
										[
											"as.matrix.default\t{base}",
											"as.matrix.default"
										],
										[
											"as.table.default\t{base}",
											"as.table.default"
										],
										[
											"new.env\t{base}",
											"new.env"
										],
										[
											"withVisible\t{base}",
											"withVisible"
										],
										[
											"readChar\t{base}",
											"readChar"
										],
										[
											"callCC\t{base}",
											"callCC"
										],
										[
											"R.version\t{base}",
											"R.version"
										],
										[
											"is.logical\t{base}",
											"is.logical"
										],
										[
											"paste0\t{base}",
											"paste0"
										],
										[
											"beta\t{base}",
											"beta"
										],
										[
											"ngettext\t{base}",
											"ngettext"
										],
										[
											".set_row_names\t{base}",
											".set_row_names"
										],
										[
											"all.equal.numeric\t{base}",
											"all.equal.numeric"
										],
										[
											"within.list\t{base}",
											"within.list"
										],
										[
											"format.pval\t{base}",
											"format.pval"
										],
										[
											"merge\t{base}",
											"merge"
										],
										[
											"check_tzones\t{base}",
											"check_tzones"
										],
										[
											".BaseNamespaceEnv\t{base}",
											".BaseNamespaceEnv"
										],
										[
											"min\t{base}",
											"min"
										],
										[
											"rowSums\t{base}",
											"rowSums"
										],
										[
											"getCallingDLL\t{base}",
											"getCallingDLL"
										],
										[
											"requireNamespace\t{base}",
											"requireNamespace"
										],
										[
											".Platform\t{base}",
											".Platform"
										],
										[
											"eigen\t{base}",
											"eigen"
										],
										[
											"NextMethod\t{base}",
											"NextMethod"
										],
										[
											"julian.POSIXt\t{base}",
											"julian.POSIXt"
										],
										[
											"chartr\t{base}",
											"chartr"
										],
										[
											"unique.POSIXlt\t{base}",
											"unique.POSIXlt"
										],
										[
											"difftime\t{base}",
											"difftime"
										],
										[
											"mget\t{base}",
											"mget"
										],
										[
											"shQuote\t{base}",
											"shQuote"
										],
										[
											"by.data.frame\t{base}",
											"by.data.frame"
										],
										[
											"as.function\t{base}",
											"as.function"
										],
										[
											"extSoftVersion\t{base}",
											"extSoftVersion"
										],
										[
											"prop.table\t{base}",
											"prop.table"
										],
										[
											"is.single\t{base}",
											"is.single"
										],
										[
											"print.Date\t{base}",
											"print.Date"
										],
										[
											"dimnames\t{base}",
											"dimnames"
										],
										[
											"browserText\t{base}",
											"browserText"
										],
										[
											"write.dcf\t{base}",
											"write.dcf"
										],
										[
											"strtrim\t{base}",
											"strtrim"
										],
										[
											"open.connection\t{base}",
											"open.connection"
										],
										[
											"R.Version\t{base}",
											"R.Version"
										],
										[
											"substring\t{base}",
											"substring"
										],
										[
											"summary.table\t{base}",
											"summary.table"
										],
										[
											"as.POSIXct.POSIXlt\t{base}",
											"as.POSIXct.POSIXlt"
										],
										[
											"strwrap\t{base}",
											"strwrap"
										],
										[
											"sys.parents\t{base}",
											"sys.parents"
										],
										[
											"provideDimnames\t{base}",
											"provideDimnames"
										],
										[
											"basename\t{base}",
											"basename"
										],
										[
											"substr\t{base}",
											"substr"
										],
										[
											"system2\t{base}",
											"system2"
										],
										[
											"path.package\t{base}",
											"path.package"
										],
										[
											"backsolve\t{base}",
											"backsolve"
										],
										[
											"Summary.difftime\t{base}",
											"Summary.difftime"
										],
										[
											"pmatch\t{base}",
											"pmatch"
										],
										[
											"duplicated.POSIXlt\t{base}",
											"duplicated.POSIXlt"
										],
										[
											"t.default\t{base}",
											"t.default"
										],
										[
											".Options\t{base}",
											".Options"
										],
										[
											"agrepl\t{base}",
											"agrepl"
										],
										[
											"Mod\t{base}",
											"Mod"
										],
										[
											"sequence\t{base}",
											"sequence"
										],
										[
											"file.append\t{base}",
											"file.append"
										],
										[
											"all.equal.formula\t{base}",
											"all.equal.formula"
										],
										[
											"rbind\t{base}",
											"rbind"
										],
										[
											"file.remove\t{base}",
											"file.remove"
										],
										[
											"licence\t{base}",
											"licence"
										],
										[
											"split\t{base}",
											"split"
										],
										[
											"suppressPackageStartupMessages\t{base}",
											"suppressPackageStartupMessages"
										],
										[
											"is.array\t{base}",
											"is.array"
										],
										[
											"print.rle\t{base}",
											"print.rle"
										],
										[
											"duplicated.default\t{base}",
											"duplicated.default"
										],
										[
											"as.POSIXlt.POSIXct\t{base}",
											"as.POSIXlt.POSIXct"
										],
										[
											"as.POSIXct.date\t{base}",
											"as.POSIXct.date"
										],
										[
											"as.character.error\t{base}",
											"as.character.error"
										],
										[
											"print.DLLInfoList\t{base}",
											"print.DLLInfoList"
										],
										[
											"gettext\t{base}",
											"gettext"
										],
										[
											"as.double\t{base}",
											"as.double"
										],
										[
											"is.na.POSIXlt\t{base}",
											"is.na.POSIXlt"
										],
										[
											"expand.grid\t{base}",
											"expand.grid"
										],
										[
											".TAOCP1997init\t{base}",
											".TAOCP1997init"
										],
										[
											"agrep\t{base}",
											"agrep"
										],
										[
											"dget\t{base}",
											"dget"
										],
										[
											"as.numeric_version\t{base}",
											"as.numeric_version"
										],
										[
											"is.primitive\t{base}",
											"is.primitive"
										],
										[
											"gzfile\t{base}",
											"gzfile"
										],
										[
											"all.equal\t{base}",
											"all.equal"
										],
										[
											"determinant.matrix\t{base}",
											"determinant.matrix"
										],
										[
											"split.default\t{base}",
											"split.default"
										],
										[
											"registerS3methods\t{base}",
											"registerS3methods"
										],
										[
											"list.files\t{base}",
											"list.files"
										],
										[
											"browser\t{base}",
											"browser"
										],
										[
											"as.Date.character\t{base}",
											"as.Date.character"
										],
										[
											"strtoi\t{base}",
											"strtoi"
										],
										[
											"row.names.data.frame\t{base}",
											"row.names.data.frame"
										],
										[
											"open.srcfile\t{base}",
											"open.srcfile"
										],
										[
											"restartFormals\t{base}",
											"restartFormals"
										],
										[
											"levels.default\t{base}",
											"levels.default"
										],
										[
											".mergeExportMethods\t{base}",
											".mergeExportMethods"
										],
										[
											"is.na.numeric_version\t{base}",
											"is.na.numeric_version"
										],
										[
											".Call.graphics\t{base}",
											".Call.graphics"
										],
										[
											"is.na\t{base}",
											"is.na"
										],
										[
											"local\t{base}",
											"local"
										],
										[
											"is.package_version\t{base}",
											"is.package_version"
										],
										[
											".gt\t{base}",
											".gt"
										],
										[
											"break\t{base}",
											"break"
										],
										[
											"format.Date\t{base}",
											"format.Date"
										],
										[
											".F_dchdc\t{base}",
											".F_dchdc"
										],
										[
											"format.numeric_version\t{base}",
											"format.numeric_version"
										],
										[
											"as.POSIXct.numeric\t{base}",
											"as.POSIXct.numeric"
										],
										[
											"tracingState\t{base}",
											"tracingState"
										],
										[
											"months\t{base}",
											"months"
										],
										[
											"bindtextdomain\t{base}",
											"bindtextdomain"
										],
										[
											"tapply\t{base}",
											"tapply"
										],
										[
											"packageStartupMessage\t{base}",
											"packageStartupMessage"
										],
										[
											"unlink\t{base}",
											"unlink"
										],
										[
											"is.atomic\t{base}",
											"is.atomic"
										],
										[
											"as.raw\t{base}",
											"as.raw"
										],
										[
											"solve\t{base}",
											"solve"
										],
										[
											".isOpen\t{base}",
											".isOpen"
										],
										[
											".mergeImportMethods\t{base}",
											".mergeImportMethods"
										],
										[
											"is.qr\t{base}",
											"is.qr"
										],
										[
											"summary.Date\t{base}",
											"summary.Date"
										],
										[
											"solve.default\t{base}",
											"solve.default"
										],
										[
											"match.fun\t{base}",
											"match.fun"
										],
										[
											"mapply\t{base}",
											"mapply"
										],
										[
											".libPaths\t{base}",
											".libPaths"
										],
										[
											"cumprod\t{base}",
											"cumprod"
										],
										[
											"all.equal.character\t{base}",
											"all.equal.character"
										],
										[
											"as.data.frame.list\t{base}",
											"as.data.frame.list"
										],
										[
											"addNA\t{base}",
											"addNA"
										],
										[
											"license\t{base}",
											"license"
										],
										[
											"Im\t{base}",
											"Im"
										],
										[
											"summary\t{base}",
											"summary"
										],
										[
											"sign\t{base}",
											"sign"
										],
										[
											"loadedNamespaces\t{base}",
											"loadedNamespaces"
										],
										[
											"attributes\t{base}",
											"attributes"
										],
										[
											"droplevels\t{base}",
											"droplevels"
										],
										[
											"format.difftime\t{base}",
											"format.difftime"
										],
										[
											"open.srcfilealias\t{base}",
											"open.srcfilealias"
										],
										[
											"colSums\t{base}",
											"colSums"
										],
										[
											"kappa\t{base}",
											"kappa"
										],
										[
											"make.names\t{base}",
											"make.names"
										],
										[
											"mean.default\t{base}",
											"mean.default"
										],
										[
											"lengths\t{base}",
											"lengths"
										],
										[
											"unlist\t{base}",
											"unlist"
										],
										[
											"data.class\t{base}",
											"data.class"
										],
										[
											".standard_regexps\t{base}",
											".standard_regexps"
										],
										[
											"isNamespaceLoaded\t{base}",
											"isNamespaceLoaded"
										],
										[
											"all.equal.raw\t{base}",
											"all.equal.raw"
										],
										[
											"as.data.frame.POSIXct\t{base}",
											"as.data.frame.POSIXct"
										],
										[
											"c.noquote\t{base}",
											"c.noquote"
										],
										[
											"print.connection\t{base}",
											"print.connection"
										],
										[
											".Machine\t{base}",
											".Machine"
										],
										[
											"determinant\t{base}",
											"determinant"
										],
										[
											"as.POSIXct\t{base}",
											"as.POSIXct"
										],
										[
											"log10\t{base}",
											"log10"
										],
										[
											".colMeans\t{base}",
											".colMeans"
										],
										[
											"sinh\t{base}",
											"sinh"
										],
										[
											"sink\t{base}",
											"sink"
										],
										[
											"with\t{base}",
											"with"
										],
										[
											"dyn.load\t{base}",
											"dyn.load"
										],
										[
											"all.equal.environment\t{base}",
											"all.equal.environment"
										],
										[
											"print\t{base}",
											"print"
										],
										[
											"sort.list\t{base}",
											"sort.list"
										],
										[
											"removeTaskCallback\t{base}",
											"removeTaskCallback"
										],
										[
											"match\t{base}",
											"match"
										],
										[
											"as.POSIXlt.numeric\t{base}",
											"as.POSIXlt.numeric"
										],
										[
											"sink.number\t{base}",
											"sink.number"
										],
										[
											".difftime\t{base}",
											".difftime"
										],
										[
											"Re\t{base}",
											"Re"
										],
										[
											"as.environment\t{base}",
											"as.environment"
										],
										[
											"as.POSIXlt.default\t{base}",
											"as.POSIXlt.default"
										],
										[
											"as.data.frame.array\t{base}",
											"as.data.frame.array"
										],
										[
											"is.factor\t{base}",
											"is.factor"
										],
										[
											"getRversion\t{base}",
											"getRversion"
										],
										[
											"emptyenv\t{base}",
											"emptyenv"
										],
										[
											"is.integer\t{base}",
											"is.integer"
										],
										[
											"julian\t{base}",
											"julian"
										],
										[
											"log1p\t{base}",
											"log1p"
										],
										[
											"month.name\t{base}",
											"month.name"
										],
										[
											"encodeString\t{base}",
											"encodeString"
										],
										[
											"print.simple.list\t{base}",
											"print.simple.list"
										],
										[
											"print.factor\t{base}",
											"print.factor"
										],
										[
											"setTimeLimit\t{base}",
											"setTimeLimit"
										],
										[
											".primTrace\t{base}",
											".primTrace"
										],
										[
											"strftime\t{base}",
											"strftime"
										],
										[
											"Sys.getlocale\t{base}",
											"Sys.getlocale"
										],
										[
											"as.data.frame.default\t{base}",
											"as.data.frame.default"
										],
										[
											"as.data.frame.POSIXlt\t{base}",
											"as.data.frame.POSIXlt"
										],
										[
											"units.difftime\t{base}",
											"units.difftime"
										],
										[
											"format.POSIXct\t{base}",
											"format.POSIXct"
										],
										[
											"pipe\t{base}",
											"pipe"
										],
										[
											"format.libraryIQR\t{base}",
											"format.libraryIQR"
										],
										[
											"as.POSIXlt\t{base}",
											"as.POSIXlt"
										],
										[
											".deparseOpts\t{base}",
											".deparseOpts"
										],
										[
											"scale.default\t{base}",
											"scale.default"
										],
										[
											"as.octmode\t{base}",
											"as.octmode"
										],
										[
											".External.graphics\t{base}",
											".External.graphics"
										],
										[
											"iconvlist\t{base}",
											"iconvlist"
										],
										[
											"chol\t{base}",
											"chol"
										],
										[
											"diag\t{base}",
											"diag"
										],
										[
											"mean.POSIXct\t{base}",
											"mean.POSIXct"
										],
										[
											"memDecompress\t{base}",
											"memDecompress"
										],
										[
											"file.exists\t{base}",
											"file.exists"
										],
										[
											"topenv\t{base}",
											"topenv"
										],
										[
											"Sys.readlink\t{base}",
											"Sys.readlink"
										],
										[
											"sys.load.image\t{base}",
											"sys.load.image"
										],
										[
											"srcref\t{base}",
											"srcref"
										],
										[
											"substitute\t{base}",
											"substitute"
										],
										[
											"assign\t{base}",
											"assign"
										],
										[
											"is.element\t{base}",
											"is.element"
										],
										[
											"fifo\t{base}",
											"fifo"
										],
										[
											"sample.int\t{base}",
											"sample.int"
										],
										[
											".__H__.cbind\t{base}",
											".__H__.cbind"
										],
										[
											"as.list.Date\t{base}",
											"as.list.Date"
										],
										[
											"is.object\t{base}",
											"is.object"
										],
										[
											"objects\t{base}",
											"objects"
										],
										[
											"print.srcref\t{base}",
											"print.srcref"
										],
										[
											"setSessionTimeLimit\t{base}",
											"setSessionTimeLimit"
										],
										[
											"tolower\t{base}",
											"tolower"
										],
										[
											"format.octmode\t{base}",
											"format.octmode"
										],
										[
											"save.image\t{base}",
											"save.image"
										],
										[
											"writeLines\t{base}",
											"writeLines"
										],
										[
											"print.table\t{base}",
											"print.table"
										],
										[
											"is.numeric.difftime\t{base}",
											"is.numeric.difftime"
										],
										[
											"diff\t{base}",
											"diff"
										],
										[
											"print.noquote\t{base}",
											"print.noquote"
										],
										[
											"tanpi\t{base}",
											"tanpi"
										],
										[
											"Math.factor\t{base}",
											"Math.factor"
										],
										[
											".kappa_tri\t{base}",
											".kappa_tri"
										],
										[
											"as.data.frame.vector\t{base}",
											"as.data.frame.vector"
										],
										[
											"endsWith\t{base}",
											"endsWith"
										],
										[
											"matrix\t{base}",
											"matrix"
										],
										[
											"l10n_info\t{base}",
											"l10n_info"
										],
										[
											"rowMeans\t{base}",
											"rowMeans"
										],
										[
											"mean.POSIXlt\t{base}",
											"mean.POSIXlt"
										],
										[
											"list\t{base}",
											"list"
										],
										[
											"libcurlVersion\t{base}",
											"libcurlVersion"
										],
										[
											"file.rename\t{base}",
											"file.rename"
										],
										[
											"Sys.localeconv\t{base}",
											"Sys.localeconv"
										],
										[
											"casefold\t{base}",
											"casefold"
										],
										[
											"file.symlink\t{base}",
											"file.symlink"
										],
										[
											"length.POSIXlt\t{base}",
											"length.POSIXlt"
										],
										[
											"file\t{base}",
											"file"
										],
										[
											"tracemem\t{base}",
											"tracemem"
										],
										[
											"OlsonNames\t{base}",
											"OlsonNames"
										],
										[
											".OptRequireMethods\t{base}",
											".OptRequireMethods"
										],
										[
											"nlevels\t{base}",
											"nlevels"
										],
										[
											"Negate\t{base}",
											"Negate"
										],
										[
											".C_R_removeTaskCallback\t{base}",
											".C_R_removeTaskCallback"
										],
										[
											"getNamespaceExports\t{base}",
											"getNamespaceExports"
										],
										[
											"getDLLRegisteredRoutines.DLLInfo\t{base}",
											"getDLLRegisteredRoutines.DLLInfo"
										],
										[
											"invisible\t{base}",
											"invisible"
										],
										[
											"anyDuplicated.array\t{base}",
											"anyDuplicated.array"
										],
										[
											"isRestart\t{base}",
											"isRestart"
										],
										[
											"close.srcfile\t{base}",
											"close.srcfile"
										],
										[
											"by\t{base}",
											"by"
										],
										[
											"ifelse\t{base}",
											"ifelse"
										],
										[
											"bzfile\t{base}",
											"bzfile"
										],
										[
											"ISOdate\t{base}",
											"ISOdate"
										],
										[
											".Primitive\t{base}",
											".Primitive"
										],
										[
											"vector\t{base}",
											"vector"
										],
										[
											"colnames\t{base}",
											"colnames"
										],
										[
											"warning\t{base}",
											"warning"
										],
										[
											"bitwNot\t{base}",
											"bitwNot"
										],
										[
											"dontCheck\t{base}",
											"dontCheck"
										],
										[
											"aperm.default\t{base}",
											"aperm.default"
										],
										[
											"iconv\t{base}",
											"iconv"
										],
										[
											"as.data.frame.ts\t{base}",
											"as.data.frame.ts"
										],
										[
											"parseNamespaceFile\t{base}",
											"parseNamespaceFile"
										],
										[
											"gc\t{base}",
											"gc"
										],
										[
											"gl\t{base}",
											"gl"
										],
										[
											"icuSetCollate\t{base}",
											"icuSetCollate"
										],
										[
											"suppressMessages\t{base}",
											"suppressMessages"
										],
										[
											".noGenerics\t{base}",
											".noGenerics"
										],
										[
											"if\t{base}",
											"if"
										],
										[
											".decode_numeric_version\t{base}",
											".decode_numeric_version"
										],
										[
											"is.na.data.frame\t{base}",
											"is.na.data.frame"
										],
										[
											"row.names\t{base}",
											"row.names"
										],
										[
											"stderr\t{base}",
											"stderr"
										],
										[
											"sinpi\t{base}",
											"sinpi"
										],
										[
											"enc2native\t{base}",
											"enc2native"
										],
										[
											"importIntoEnv\t{base}",
											"importIntoEnv"
										],
										[
											"abs\t{base}",
											"abs"
										],
										[
											"trace\t{base}",
											"trace"
										],
										[
											"append\t{base}",
											"append"
										],
										[
											"duplicated.numeric_version\t{base}",
											"duplicated.numeric_version"
										],
										[
											"R.home\t{base}",
											"R.home"
										],
										[
											"xtfrm\t{base}",
											"xtfrm"
										],
										[
											"vapply\t{base}",
											"vapply"
										],
										[
											"lazyLoadDBexec\t{base}",
											"lazyLoadDBexec"
										],
										[
											"gettextf\t{base}",
											"gettextf"
										],
										[
											"as.character.condition\t{base}",
											"as.character.condition"
										],
										[
											"lchoose\t{base}",
											"lchoose"
										],
										[
											"ls\t{base}",
											"ls"
										],
										[
											"as.list.factor\t{base}",
											"as.list.factor"
										],
										[
											".S3PrimitiveGenerics\t{base}",
											".S3PrimitiveGenerics"
										],
										[
											"as.matrix.noquote\t{base}",
											"as.matrix.noquote"
										],
										[
											"tempdir\t{base}",
											"tempdir"
										],
										[
											"clearPushBack\t{base}",
											"clearPushBack"
										],
										[
											"aperm\t{base}",
											"aperm"
										],
										[
											"format.POSIXlt\t{base}",
											"format.POSIXlt"
										],
										[
											"as.Date.POSIXct\t{base}",
											"as.Date.POSIXct"
										],
										[
											"pi\t{base}",
											"pi"
										],
										[
											"single\t{base}",
											"single"
										],
										[
											"dynGet\t{base}",
											"dynGet"
										],
										[
											"interaction\t{base}",
											"interaction"
										],
										[
											"strptime\t{base}",
											"strptime"
										],
										[
											"droplevels.data.frame\t{base}",
											"droplevels.data.frame"
										],
										[
											"computeRestarts\t{base}",
											"computeRestarts"
										],
										[
											"namespaceImportFrom\t{base}",
											"namespaceImportFrom"
										],
										[
											"anyNA.numeric_version\t{base}",
											"anyNA.numeric_version"
										],
										[
											"qr\t{base}",
											"qr"
										],
										[
											"sys.parent\t{base}",
											"sys.parent"
										],
										[
											"unclass\t{base}",
											"unclass"
										],
										[
											"is.name\t{base}",
											"is.name"
										],
										[
											"rm\t{base}",
											"rm"
										],
										[
											"is.symbol\t{base}",
											"is.symbol"
										],
										[
											"simpleError\t{base}",
											"simpleError"
										],
										[
											"as.function.default\t{base}",
											"as.function.default"
										],
										[
											".kronecker\t{base}",
											".kronecker"
										],
										[
											"dyn.unload\t{base}",
											"dyn.unload"
										],
										[
											"subset.default\t{base}",
											"subset.default"
										],
										[
											"as.POSIXct.default\t{base}",
											"as.POSIXct.default"
										],
										[
											"all\t{base}",
											"all"
										],
										[
											"print.default\t{base}",
											"print.default"
										],
										[
											"range.default\t{base}",
											"range.default"
										],
										[
											"lockEnvironment\t{base}",
											"lockEnvironment"
										],
										[
											"tcrossprod\t{base}",
											"tcrossprod"
										],
										[
											"complex\t{base}",
											"complex"
										],
										[
											"undebug\t{base}",
											"undebug"
										],
										[
											"gamma\t{base}",
											"gamma"
										],
										[
											"typeof\t{base}",
											"typeof"
										],
										[
											"rep_len\t{base}",
											"rep_len"
										],
										[
											"as.data.frame.Date\t{base}",
											"as.data.frame.Date"
										],
										[
											"flush.connection\t{base}",
											"flush.connection"
										],
										[
											"conditionMessage\t{base}",
											"conditionMessage"
										],
										[
											".encode_numeric_version\t{base}",
											".encode_numeric_version"
										],
										[
											".NotYetUsed\t{base}",
											".NotYetUsed"
										],
										[
											"file.create\t{base}",
											"file.create"
										],
										[
											"as.integer\t{base}",
											"as.integer"
										],
										[
											"formatDL\t{base}",
											"formatDL"
										],
										[
											"baseenv\t{base}",
											"baseenv"
										],
										[
											"any\t{base}",
											"any"
										],
										[
											"as.Date.POSIXlt\t{base}",
											"as.Date.POSIXlt"
										],
										[
											"LETTERS\t{base}",
											"LETTERS"
										],
										[
											"nchar\t{base}",
											"nchar"
										],
										[
											"format.data.frame\t{base}",
											"format.data.frame"
										],
										[
											"registerS3method\t{base}",
											"registerS3method"
										],
										[
											"raw\t{base}",
											"raw"
										],
										[
											"transform.data.frame\t{base}",
											"transform.data.frame"
										],
										[
											"print.Dlist\t{base}",
											"print.Dlist"
										],
										[
											"unique.array\t{base}",
											"unique.array"
										],
										[
											"print.proc_time\t{base}",
											"print.proc_time"
										],
										[
											"Encoding\t{base}",
											"Encoding"
										],
										[
											"c.Date\t{base}",
											"c.Date"
										],
										[
											"getExportedValue\t{base}",
											"getExportedValue"
										],
										[
											"solve.qr\t{base}",
											"solve.qr"
										],
										[
											"as.name\t{base}",
											"as.name"
										],
										[
											"slice.index\t{base}",
											"slice.index"
										],
										[
											"transform.default\t{base}",
											"transform.default"
										],
										[
											".maskedMsg\t{base}",
											".maskedMsg"
										],
										[
											"data.matrix\t{base}",
											"data.matrix"
										],
										[
											"parent.env\t{base}",
											"parent.env"
										],
										[
											"rep\t{base}",
											"rep"
										],
										[
											"c.difftime\t{base}",
											"c.difftime"
										],
										[
											".path.package\t{base}",
											".path.package"
										],
										[
											"rev\t{base}",
											"rev"
										],
										[
											"serialize\t{base}",
											"serialize"
										],
										[
											"sys.on.exit\t{base}",
											"sys.on.exit"
										],
										[
											"as.expression\t{base}",
											"as.expression"
										],
										[
											"Arg\t{base}",
											"Arg"
										],
										[
											"as.data.frame.integer\t{base}",
											"as.data.frame.integer"
										],
										[
											"as.POSIXlt.character\t{base}",
											"as.POSIXlt.character"
										],
										[
											"rawShift\t{base}",
											"rawShift"
										],
										[
											"autoload\t{base}",
											"autoload"
										],
										[
											"readRenviron\t{base}",
											"readRenviron"
										],
										[
											"pmax.int\t{base}",
											"pmax.int"
										],
										[
											"withCallingHandlers\t{base}",
											"withCallingHandlers"
										],
										[
											"print.warnings\t{base}",
											"print.warnings"
										],
										[
											"split.Date\t{base}",
											"split.Date"
										],
										[
											"searchpaths\t{base}",
											"searchpaths"
										],
										[
											"all.equal.list\t{base}",
											"all.equal.list"
										],
										[
											"seq_len\t{base}",
											"seq_len"
										],
										[
											"is.character\t{base}",
											"is.character"
										],
										[
											"packageEvent\t{base}",
											"packageEvent"
										],
										[
											"library\t{base}",
											"library"
										],
										[
											"xtfrm.POSIXct\t{base}",
											"xtfrm.POSIXct"
										],
										[
											"unique.data.frame\t{base}",
											"unique.data.frame"
										],
										[
											"bindingIsActive\t{base}",
											"bindingIsActive"
										],
										[
											"dir.create\t{base}",
											"dir.create"
										],
										[
											"environmentName\t{base}",
											"environmentName"
										],
										[
											"with.default\t{base}",
											"with.default"
										],
										[
											"split.data.frame\t{base}",
											"split.data.frame"
										],
										[
											"rle\t{base}",
											"rle"
										],
										[
											"function\t{base}",
											"function"
										],
										[
											"qr.qty\t{base}",
											"qr.qty"
										],
										[
											"autoloader\t{base}",
											"autoloader"
										],
										[
											"truncate\t{base}",
											"truncate"
										],
										[
											"sys.nframe\t{base}",
											"sys.nframe"
										],
										[
											"seq.Date\t{base}",
											"seq.Date"
										],
										[
											"range\t{base}",
											"range"
										],
										[
											"source\t{base}",
											"source"
										],
										[
											"is.call\t{base}",
											"is.call"
										],
										[
											"Sys.getpid\t{base}",
											"Sys.getpid"
										],
										[
											"dQuote\t{base}",
											"dQuote"
										],
										[
											"bquote\t{base}",
											"bquote"
										],
										[
											"Summary.POSIXct\t{base}",
											"Summary.POSIXct"
										],
										[
											"qr.default\t{base}",
											"qr.default"
										],
										[
											".rowMeans\t{base}",
											".rowMeans"
										],
										[
											"version\t{base}",
											"version"
										],
										[
											"is.expression\t{base}",
											"is.expression"
										],
										[
											"returnValue\t{base}",
											"returnValue"
										],
										[
											"Sys.glob\t{base}",
											"Sys.glob"
										],
										[
											"search\t{base}",
											"search"
										],
										[
											"is.unsorted\t{base}",
											"is.unsorted"
										],
										[
											"tryCatch\t{base}",
											"tryCatch"
										],
										[
											"as.Date.dates\t{base}",
											"as.Date.dates"
										],
										[
											"ISOdatetime\t{base}",
											"ISOdatetime"
										],
										[
											"row\t{base}",
											"row"
										],
										[
											"system.file\t{base}",
											"system.file"
										],
										[
											"print.numeric_version\t{base}",
											"print.numeric_version"
										],
										[
											"simpleCondition\t{base}",
											"simpleCondition"
										],
										[
											"is.pairlist\t{base}",
											"is.pairlist"
										],
										[
											"summary.POSIXct\t{base}",
											"summary.POSIXct"
										],
										[
											"xor.octmode\t{base}",
											"xor.octmode"
										],
										[
											"summary.factor\t{base}",
											"summary.factor"
										],
										[
											"as.data.frame.raw\t{base}",
											"as.data.frame.raw"
										],
										[
											"summary.data.frame\t{base}",
											"summary.data.frame"
										],
										[
											"logical\t{base}",
											"logical"
										],
										[
											"pmax\t{base}",
											"pmax"
										],
										[
											"file.access\t{base}",
											"file.access"
										],
										[
											"lbeta\t{base}",
											"lbeta"
										],
										[
											"unique.default\t{base}",
											"unique.default"
										],
										[
											"xtfrm.POSIXlt\t{base}",
											"xtfrm.POSIXlt"
										],
										[
											"file.link\t{base}",
											"file.link"
										],
										[
											".primUntrace\t{base}",
											".primUntrace"
										],
										[
											"cat\t{base}",
											"cat"
										],
										[
											"months.POSIXt\t{base}",
											"months.POSIXt"
										],
										[
											"summary.srcref\t{base}",
											"summary.srcref"
										],
										[
											"as.call\t{base}",
											"as.call"
										],
										[
											"anyNA\t{base}",
											"anyNA"
										],
										[
											"as.array.default\t{base}",
											"as.array.default"
										],
										[
											"taskCallbackManager\t{base}",
											"taskCallbackManager"
										],
										[
											"unlockBinding\t{base}",
											"unlockBinding"
										],
										[
											"file.show\t{base}",
											"file.show"
										],
										[
											".detach\t{base}",
											".detach"
										],
										[
											"seq\t{base}",
											"seq"
										],
										[
											"as.POSIXlt.Date\t{base}",
											"as.POSIXlt.Date"
										],
										[
											"subset.data.frame\t{base}",
											"subset.data.frame"
										],
										[
											"t.data.frame\t{base}",
											"t.data.frame"
										],
										[
											"isOpen\t{base}",
											"isOpen"
										],
										[
											"trunc.Date\t{base}",
											"trunc.Date"
										],
										[
											"is.numeric_version\t{base}",
											"is.numeric_version"
										],
										[
											"read.dcf\t{base}",
											"read.dcf"
										],
										[
											"diff.Date\t{base}",
											"diff.Date"
										],
										[
											"findInterval\t{base}",
											"findInterval"
										],
										[
											"conditionCall.condition\t{base}",
											"conditionCall.condition"
										],
										[
											"max.col\t{base}",
											"max.col"
										],
										[
											"print.libraryIQR\t{base}",
											"print.libraryIQR"
										],
										[
											"missing\t{base}",
											"missing"
										],
										[
											"readLines\t{base}",
											"readLines"
										],
										[
											"as.Date.date\t{base}",
											"as.Date.date"
										],
										[
											"makeActiveBinding\t{base}",
											"makeActiveBinding"
										],
										[
											"is.loaded\t{base}",
											"is.loaded"
										],
										[
											"restartDescription\t{base}",
											"restartDescription"
										],
										[
											"as.data.frame.noquote\t{base}",
											"as.data.frame.noquote"
										],
										[
											"sin\t{base}",
											"sin"
										],
										[
											"Filter\t{base}",
											"Filter"
										],
										[
											"pmin\t{base}",
											"pmin"
										],
										[
											"browserCondition\t{base}",
											"browserCondition"
										],
										[
											"cbind\t{base}",
											"cbind"
										],
										[
											"Find\t{base}",
											"Find"
										],
										[
											"rep.int\t{base}",
											"rep.int"
										],
										[
											"setHook\t{base}",
											"setHook"
										],
										[
											"unique.numeric_version\t{base}",
											"unique.numeric_version"
										],
										[
											"as.data.frame.ordered\t{base}",
											"as.data.frame.ordered"
										],
										[
											"month.abb\t{base}",
											"month.abb"
										],
										[
											"xtfrm.AsIs\t{base}",
											"xtfrm.AsIs"
										],
										[
											"as.Date.factor\t{base}",
											"as.Date.factor"
										],
										[
											".Script\t{base}",
											".Script"
										],
										[
											".Library.site\t{base}",
											".Library.site"
										],
										[
											"gcinfo\t{base}",
											"gcinfo"
										],
										[
											"summary.matrix\t{base}",
											"summary.matrix"
										],
										[
											"qr.qy\t{base}",
											"qr.qy"
										],
										[
											"isBaseNamespace\t{base}",
											"isBaseNamespace"
										],
										[
											"as.Date.numeric\t{base}",
											"as.Date.numeric"
										],
										[
											"as.data.frame.character\t{base}",
											"as.data.frame.character"
										],
										[
											"as.POSIXct.dates\t{base}",
											"as.POSIXct.dates"
										],
										[
											"print.summary.table\t{base}",
											"print.summary.table"
										],
										[
											"is.language\t{base}",
											"is.language"
										],
										[
											"getCallingDLLe\t{base}",
											"getCallingDLLe"
										],
										[
											".popath\t{base}",
											".popath"
										],
										[
											"cummax\t{base}",
											"cummax"
										],
										[
											"arrayInd\t{base}",
											"arrayInd"
										],
										[
											"lazyLoad\t{base}",
											"lazyLoad"
										],
										[
											"lfactorial\t{base}",
											"lfactorial"
										],
										[
											"isTRUE\t{base}",
											"isTRUE"
										],
										[
											"gc.time\t{base}",
											"gc.time"
										],
										[
											"forwardsolve\t{base}",
											"forwardsolve"
										],
										[
											"format.info\t{base}",
											"format.info"
										],
										[
											".GenericArgsEnv\t{base}",
											".GenericArgsEnv"
										],
										[
											"Sys.setlocale\t{base}",
											"Sys.setlocale"
										],
										[
											"col\t{base}",
											"col"
										],
										[
											"dim.data.frame\t{base}",
											"dim.data.frame"
										],
										[
											"qr.resid\t{base}",
											"qr.resid"
										],
										[
											"lower.tri\t{base}",
											"lower.tri"
										],
										[
											"cos\t{base}",
											"cos"
										],
										[
											"rcond\t{base}",
											"rcond"
										],
										[
											"tan\t{base}",
											"tan"
										],
										[
											"print.DLLRegisteredRoutines\t{base}",
											"print.DLLRegisteredRoutines"
										],
										[
											"bitwOr\t{base}",
											"bitwOr"
										],
										[
											"namespaceImport\t{base}",
											"namespaceImport"
										],
										[
											"is.nan\t{base}",
											"is.nan"
										],
										[
											"pushBack\t{base}",
											"pushBack"
										],
										[
											"bitwAnd\t{base}",
											"bitwAnd"
										],
										[
											"getConnection\t{base}",
											"getConnection"
										],
										[
											"as.data.frame.complex\t{base}",
											"as.data.frame.complex"
										],
										[
											".gtn\t{base}",
											".gtn"
										],
										[
											"as.data.frame.factor\t{base}",
											"as.data.frame.factor"
										],
										[
											"kappa.qr\t{base}",
											"kappa.qr"
										],
										[
											"validEnc\t{base}",
											"validEnc"
										],
										[
											"rownames\t{base}",
											"rownames"
										],
										[
											"quote\t{base}",
											"quote"
										],
										[
											"seq.int\t{base}",
											"seq.int"
										],
										[
											"sub\t{base}",
											"sub"
										],
										[
											"as.vector\t{base}",
											"as.vector"
										],
										[
											"Summary.POSIXlt\t{base}",
											"Summary.POSIXlt"
										],
										[
											"rawConnectionValue\t{base}",
											"rawConnectionValue"
										],
										[
											"sys.frame\t{base}",
											"sys.frame"
										],
										[
											"sum\t{base}",
											"sum"
										],
										[
											"is.recursive\t{base}",
											"is.recursive"
										],
										[
											"table\t{base}",
											"table"
										],
										[
											"cummin\t{base}",
											"cummin"
										],
										[
											"svd\t{base}",
											"svd"
										],
										[
											"all.equal.language\t{base}",
											"all.equal.language"
										],
										[
											"xtfrm.difftime\t{base}",
											"xtfrm.difftime"
										],
										[
											"margin.table\t{base}",
											"margin.table"
										],
										[
											"namespaceImportMethods\t{base}",
											"namespaceImportMethods"
										],
										[
											"det\t{base}",
											"det"
										],
										[
											"cut\t{base}",
											"cut"
										],
										[
											"summary.default\t{base}",
											"summary.default"
										],
										[
											"Sys.time\t{base}",
											"Sys.time"
										],
										[
											".Last.value\t{base}",
											".Last.value"
										],
										[
											"summary.POSIXlt\t{base}",
											"summary.POSIXlt"
										],
										[
											"char.expand\t{base}",
											"char.expand"
										],
										[
											"getSrcLines\t{base}",
											"getSrcLines"
										],
										[
											"floor\t{base}",
											"floor"
										],
										[
											"factor\t{base}",
											"factor"
										],
										[
											"as.data.frame.model.matrix\t{base}",
											"as.data.frame.model.matrix"
										],
										[
											".amatch_costs\t{base}",
											".amatch_costs"
										],
										[
											"scale\t{base}",
											"scale"
										],
										[
											"replicate\t{base}",
											"replicate"
										],
										[
											".subset2\t{base}",
											".subset2"
										],
										[
											"seek.connection\t{base}",
											"seek.connection"
										],
										[
											"geterrmessage\t{base}",
											"geterrmessage"
										],
										[
											"dim\t{base}",
											"dim"
										],
										[
											"system.time\t{base}",
											"system.time"
										],
										[
											"dir\t{base}",
											"dir"
										],
										[
											".Devices\t{base}",
											".Devices"
										],
										[
											"qr.Q\t{base}",
											"qr.Q"
										],
										[
											"qr.R\t{base}",
											"qr.R"
										],
										[
											"as.matrix\t{base}",
											"as.matrix"
										],
										[
											"qr.X\t{base}",
											"qr.X"
										],
										[
											"upper.tri\t{base}",
											"upper.tri"
										],
										[
											"as.character.POSIXt\t{base}",
											"as.character.POSIXt"
										],
										[
											"as.double.POSIXlt\t{base}",
											"as.double.POSIXlt"
										],
										[
											"isdebugged\t{base}",
											"isdebugged"
										],
										[
											"levels\t{base}",
											"levels"
										],
										[
											"as.null.default\t{base}",
											"as.null.default"
										],
										[
											"all.equal.envRefClass\t{base}",
											"all.equal.envRefClass"
										],
										[
											"file.mtime\t{base}",
											"file.mtime"
										],
										[
											"do.call\t{base}",
											"do.call"
										],
										[
											"as.table\t{base}",
											"as.table"
										],
										[
											"duplicated.matrix\t{base}",
											"duplicated.matrix"
										],
										[
											"sys.save.image\t{base}",
											"sys.save.image"
										],
										[
											"getNamespaceUsers\t{base}",
											"getNamespaceUsers"
										],
										[
											"interactive\t{base}",
											"interactive"
										],
										[
											"storage.mode\t{base}",
											"storage.mode"
										],
										[
											"gregexpr\t{base}",
											"gregexpr"
										],
										[
											"asinh\t{base}",
											"asinh"
										],
										[
											"getNamespaceImports\t{base}",
											"getNamespaceImports"
										],
										[
											"as.data.frame.numeric\t{base}",
											"as.data.frame.numeric"
										],
										[
											"getNativeSymbolInfo\t{base}",
											"getNativeSymbolInfo"
										],
										[
											".Internal\t{base}",
											".Internal"
										],
										[
											"Summary.factor\t{base}",
											"Summary.factor"
										],
										[
											"trimws\t{base}",
											"trimws"
										],
										[
											"unsplit\t{base}",
											"unsplit"
										],
										[
											"namespaceImportClasses\t{base}",
											"namespaceImportClasses"
										],
										[
											"startsWith\t{base}",
											"startsWith"
										],
										[
											".F_dqrdc2\t{base}",
											".F_dqrdc2"
										],
										[
											"Cstack_info\t{base}",
											"Cstack_info"
										],
										[
											"chol.default\t{base}",
											"chol.default"
										],
										[
											"Recall\t{base}",
											"Recall"
										],
										[
											"try\t{base}",
											"try"
										],
										[
											"Ops.numeric_version\t{base}",
											"Ops.numeric_version"
										],
										[
											"is.complex\t{base}",
											"is.complex"
										],
										[
											"numeric\t{base}",
											"numeric"
										],
										[
											"intToUtf8\t{base}",
											"intToUtf8"
										],
										[
											"retracemem\t{base}",
											"retracemem"
										],
										[
											"seq.default\t{base}",
											"seq.default"
										],
										[
											"as.logical.factor\t{base}",
											"as.logical.factor"
										],
										[
											"Sys.which\t{base}",
											"Sys.which"
										],
										[
											"as.character.factor\t{base}",
											"as.character.factor"
										],
										[
											"as.POSIXlt.dates\t{base}",
											"as.POSIXlt.dates"
										],
										[
											"rowsum.data.frame\t{base}",
											"rowsum.data.frame"
										],
										[
											"as.vector.factor\t{base}",
											"as.vector.factor"
										],
										[
											"-.Date\t{base}",
											"-.Date"
										],
										[
											"pairlist\t{base}",
											"pairlist"
										],
										[
											".Library\t{base}",
											".Library"
										],
										[
											"as.pairlist\t{base}",
											"as.pairlist"
										],
										[
											"print.difftime\t{base}",
											"print.difftime"
										],
										[
											"is.table\t{base}",
											"is.table"
										],
										[
											"is.infinite\t{base}",
											"is.infinite"
										],
										[
											"load\t{base}",
											"load"
										],
										[
											"contributors\t{base}",
											"contributors"
										],
										[
											"besselI\t{base}",
											"besselI"
										],
										[
											"as.character.Date\t{base}",
											"as.character.Date"
										],
										[
											"besselJ\t{base}",
											"besselJ"
										],
										[
											"besselK\t{base}",
											"besselK"
										],
										[
											"expm1\t{base}",
											"expm1"
										],
										[
											"mode\t{base}",
											"mode"
										],
										[
											".userHooksEnv\t{base}",
											".userHooksEnv"
										],
										[
											"row.names.default\t{base}",
											"row.names.default"
										],
										[
											"besselY\t{base}",
											"besselY"
										],
										[
											"log2\t{base}",
											"log2"
										],
										[
											"noquote\t{base}",
											"noquote"
										],
										[
											"-.POSIXt\t{base}",
											"-.POSIXt"
										],
										[
											"commandArgs\t{base}",
											"commandArgs"
										],
										[
											".External2\t{base}",
											".External2"
										],
										[
											"subset.matrix\t{base}",
											"subset.matrix"
										],
										[
											"Ops.data.frame\t{base}",
											"Ops.data.frame"
										],
										[
											"as.list.default\t{base}",
											"as.list.default"
										],
										[
											"is.null\t{base}",
											"is.null"
										],
										[
											"logb\t{base}",
											"logb"
										],
										[
											"as.POSIXct.Date\t{base}",
											"as.POSIXct.Date"
										],
										[
											"traceback\t{base}",
											"traceback"
										],
										[
											".isMethodsDispatchOn\t{base}",
											".isMethodsDispatchOn"
										],
										[
											"trigamma\t{base}",
											"trigamma"
										],
										[
											"parent.frame\t{base}",
											"parent.frame"
										],
										[
											"trunc\t{base}",
											"trunc"
										],
										[
											"which\t{base}",
											"which"
										],
										[
											"srcfilecopy\t{base}",
											"srcfilecopy"
										],
										[
											"as.single\t{base}",
											"as.single"
										],
										[
											"file.path\t{base}",
											"file.path"
										],
										[
											"kappa.lm\t{base}",
											"kappa.lm"
										],
										[
											"Sys.setenv\t{base}",
											"Sys.setenv"
										],
										[
											".makeMessage\t{base}",
											".makeMessage"
										],
										[
											"as.complex\t{base}",
											"as.complex"
										],
										[
											"gzcon\t{base}",
											"gzcon"
										],
										[
											"stdin\t{base}",
											"stdin"
										],
										[
											"sort\t{base}",
											"sort"
										],
										[
											"replace\t{base}",
											"replace"
										],
										[
											"unz\t{base}",
											"unz"
										],
										[
											"sapply\t{base}",
											"sapply"
										],
										[
											".NotYetImplemented\t{base}",
											".NotYetImplemented"
										],
										[
											"as.character.hexmode\t{base}",
											"as.character.hexmode"
										],
										[
											"alist\t{base}",
											"alist"
										],
										[
											"rep.numeric_version\t{base}",
											"rep.numeric_version"
										],
										[
											"write\t{base}",
											"write"
										],
										[
											"invokeRestartInteractively\t{base}",
											"invokeRestartInteractively"
										],
										[
											"lapply\t{base}",
											"lapply"
										],
										[
											"as.list.POSIXct\t{base}",
											"as.list.POSIXct"
										],
										[
											"print.packageInfo\t{base}",
											"print.packageInfo"
										],
										[
											"as.list.data.frame\t{base}",
											"as.list.data.frame"
										],
										[
											"memory.profile\t{base}",
											"memory.profile"
										],
										[
											"Sys.sleep\t{base}",
											"Sys.sleep"
										],
										[
											"Ops.POSIXt\t{base}",
											"Ops.POSIXt"
										],
										[
											"as.null\t{base}",
											"as.null"
										],
										[
											"url\t{base}",
											"url"
										],
										[
											"sample\t{base}",
											"sample"
										],
										[
											"eapply\t{base}",
											"eapply"
										],
										[
											"Sys.umask\t{base}",
											"Sys.umask"
										],
										[
											"bitwShiftR\t{base}",
											"bitwShiftR"
										],
										[
											"sys.frames\t{base}",
											"sys.frames"
										],
										[
											"is.environment\t{base}",
											"is.environment"
										],
										[
											".getRequiredPackages2\t{base}",
											".getRequiredPackages2"
										],
										[
											"integer\t{base}",
											"integer"
										],
										[
											"bitwShiftL\t{base}",
											"bitwShiftL"
										],
										[
											"Summary.data.frame\t{base}",
											"Summary.data.frame"
										],
										[
											"conflicts\t{base}",
											"conflicts"
										],
										[
											".format.zeros\t{base}",
											".format.zeros"
										],
										[
											"testPlatformEquivalence\t{base}",
											"testPlatformEquivalence"
										],
										[
											"norm\t{base}",
											"norm"
										],
										[
											"getNamespaceVersion\t{base}",
											"getNamespaceVersion"
										],
										[
											"while\t{base}",
											"while"
										],
										[
											"sweep\t{base}",
											"sweep"
										],
										[
											"is.R\t{base}",
											"is.R"
										],
										[
											"open\t{base}",
											"open"
										],
										[
											"as.Date\t{base}",
											"as.Date"
										],
										[
											"Sys.chmod\t{base}",
											"Sys.chmod"
										],
										[
											"force\t{base}",
											"force"
										],
										[
											"within\t{base}",
											"within"
										],
										[
											"is.double\t{base}",
											"is.double"
										],
										[
											"mem.limits\t{base}",
											"mem.limits"
										],
										[
											"message\t{base}",
											"message"
										],
										[
											"format.packageInfo\t{base}",
											"format.packageInfo"
										],
										[
											"attach\t{base}",
											"attach"
										],
										[
											"body\t{base}",
											"body"
										],
										[
											"merge.data.frame\t{base}",
											"merge.data.frame"
										],
										[
											"stopifnot\t{base}",
											"stopifnot"
										],
										[
											"socketSelect\t{base}",
											"socketSelect"
										],
										[
											"exp\t{base}",
											"exp"
										],
										[
											"default.stringsAsFactors\t{base}",
											"default.stringsAsFactors"
										],
										[
											"environmentIsLocked\t{base}",
											"environmentIsLocked"
										],
										[
											"format.factor\t{base}",
											"format.factor"
										],
										[
											"sys.source\t{base}",
											"sys.source"
										],
										[
											"print.restart\t{base}",
											"print.restart"
										],
										[
											"toString.default\t{base}",
											"toString.default"
										],
										[
											"isatty\t{base}",
											"isatty"
										],
										[
											"RNGkind\t{base}",
											"RNGkind"
										],
										[
											".First.sys\t{base}",
											".First.sys"
										],
										[
											"getNamespace\t{base}",
											"getNamespace"
										],
										[
											"unname\t{base}",
											"unname"
										],
										[
											"system\t{base}",
											"system"
										],
										[
											"c.POSIXct\t{base}",
											"c.POSIXct"
										],
										[
											"formals\t{base}",
											"formals"
										],
										[
											"remove\t{base}",
											"remove"
										],
										[
											"print.hexmode\t{base}",
											"print.hexmode"
										],
										[
											"isSeekable\t{base}",
											"isSeekable"
										],
										[
											"is.numeric.Date\t{base}",
											"is.numeric.Date"
										],
										[
											"attachNamespace\t{base}",
											"attachNamespace"
										],
										[
											"rawConnection\t{base}",
											"rawConnection"
										],
										[
											"close.srcfilealias\t{base}",
											"close.srcfilealias"
										],
										[
											"set.seed\t{base}",
											"set.seed"
										],
										[
											"evalq\t{base}",
											"evalq"
										],
										[
											"inverse.rle\t{base}",
											"inverse.rle"
										],
										[
											".Device\t{base}",
											".Device"
										],
										[
											"Vectorize\t{base}",
											"Vectorize"
										],
										[
											"as.list.function\t{base}",
											"as.list.function"
										],
										[
											"as.data.frame.difftime\t{base}",
											"as.data.frame.difftime"
										],
										[
											".F_dqrqty\t{base}",
											".F_dqrqty"
										],
										[
											"findRestart\t{base}",
											"findRestart"
										],
										[
											"for\t{base}",
											"for"
										],
										[
											".Defunct\t{base}",
											".Defunct"
										],
										[
											"print.data.frame\t{base}",
											"print.data.frame"
										],
										[
											"rep.factor\t{base}",
											"rep.factor"
										],
										[
											"quarters\t{base}",
											"quarters"
										],
										[
											"cbind.data.frame\t{base}",
											"cbind.data.frame"
										],
										[
											"Summary.numeric_version\t{base}",
											"Summary.numeric_version"
										],
										[
											"toString\t{base}",
											"toString"
										],
										[
											"crossprod\t{base}",
											"crossprod"
										],
										[
											"Ops.difftime\t{base}",
											"Ops.difftime"
										],
										[
											"summary.connection\t{base}",
											"summary.connection"
										],
										[
											"tempfile\t{base}",
											"tempfile"
										],
										[
											"Math.data.frame\t{base}",
											"Math.data.frame"
										],
										[
											"c.POSIXlt\t{base}",
											"c.POSIXlt"
										],
										[
											"isIncomplete\t{base}",
											"isIncomplete"
										],
										[
											"grepRaw\t{base}",
											"grepRaw"
										],
										[
											".leap.seconds\t{base}",
											".leap.seconds"
										],
										[
											".cache_class\t{base}",
											".cache_class"
										],
										[
											"find.package\t{base}",
											"find.package"
										],
										[
											"split.POSIXct\t{base}",
											"split.POSIXct"
										],
										[
											"cosh\t{base}",
											"cosh"
										],
										[
											"format\t{base}",
											"format"
										],
										[
											"detach\t{base}",
											"detach"
										],
										[
											"transform\t{base}",
											"transform"
										],
										[
											"as.character.octmode\t{base}",
											"as.character.octmode"
										],
										[
											"get\t{base}",
											"get"
										],
										[
											"delayedAssign\t{base}",
											"delayedAssign"
										],
										[
											"format.hexmode\t{base}",
											"format.hexmode"
										],
										[
											"formatC\t{base}",
											"formatC"
										],
										[
											"as.character\t{base}",
											"as.character"
										],
										[
											"duplicated.data.frame\t{base}",
											"duplicated.data.frame"
										],
										[
											"names\t{base}",
											"names"
										],
										[
											"qr.coef\t{base}",
											"qr.coef"
										],
										[
											"writeChar\t{base}",
											"writeChar"
										],
										[
											"mean.difftime\t{base}",
											"mean.difftime"
										],
										[
											"La_version\t{base}",
											"La_version"
										],
										[
											"data.frame\t{base}",
											"data.frame"
										],
										[
											"enc2utf8\t{base}",
											"enc2utf8"
										],
										[
											"qr.solve\t{base}",
											"qr.solve"
										],
										[
											"tanh\t{base}",
											"tanh"
										],
										[
											"xtfrm.Date\t{base}",
											"xtfrm.Date"
										],
										[
											"psigamma\t{base}",
											"psigamma"
										],
										[
											"path.expand\t{base}",
											"path.expand"
										],
										[
											"sprintf\t{base}",
											"sprintf"
										],
										[
											"pretty\t{base}",
											"pretty"
										],
										[
											"unique\t{base}",
											"unique"
										],
										[
											"months.Date\t{base}",
											"months.Date"
										],
										[
											"seq_along\t{base}",
											"seq_along"
										],
										[
											"rawToChar\t{base}",
											"rawToChar"
										],
										[
											"all.equal.default\t{base}",
											"all.equal.default"
										],
										[
											"rank\t{base}",
											"rank"
										],
										[
											"rep.POSIXct\t{base}",
											"rep.POSIXct"
										],
										[
											"expression\t{base}",
											"expression"
										],
										[
											".row_names_info\t{base}",
											".row_names_info"
										],
										[
											".F_dqrrsd\t{base}",
											".F_dqrrsd"
										],
										[
											"sqrt\t{base}",
											"sqrt"
										],
										[
											".rmpkg\t{base}",
											".rmpkg"
										],
										[
											"all.equal.POSIXt\t{base}",
											"all.equal.POSIXt"
										],
										[
											"as.factor\t{base}",
											"as.factor"
										],
										[
											"as.data.frame.table\t{base}",
											"as.data.frame.table"
										],
										[
											"print.summaryDefault\t{base}",
											"print.summaryDefault"
										],
										[
											"length\t{base}",
											"length"
										],
										[
											"untrace\t{base}",
											"untrace"
										],
										[
											"structure\t{base}",
											"structure"
										],
										[
											"inherits\t{base}",
											"inherits"
										],
										[
											"setwd\t{base}",
											"setwd"
										],
										[
											"print.POSIXct\t{base}",
											"print.POSIXct"
										],
										[
											"Sys.setFileTime\t{base}",
											"Sys.setFileTime"
										],
										[
											".__H__.rbind\t{base}",
											".__H__.rbind"
										],
										[
											"capabilities\t{base}",
											"capabilities"
										],
										[
											"xtfrm.default\t{base}",
											"xtfrm.default"
										],
										[
											"is.raw\t{base}",
											"is.raw"
										],
										[
											"letters\t{base}",
											"letters"
										],
										[
											"globalenv\t{base}",
											"globalenv"
										],
										[
											"list2env\t{base}",
											"list2env"
										],
										[
											"save\t{base}",
											"save"
										],
										[
											"make.unique\t{base}",
											"make.unique"
										],
										[
											"setNamespaceInfo\t{base}",
											"setNamespaceInfo"
										],
										[
											"print.DLLInfo\t{base}",
											"print.DLLInfo"
										],
										[
											"bindingIsLocked\t{base}",
											"bindingIsLocked"
										],
										[
											"rep.POSIXlt\t{base}",
											"rep.POSIXlt"
										],
										[
											"gctorture2\t{base}",
											"gctorture2"
										],
										[
											"utf8ToInt\t{base}",
											"utf8ToInt"
										],
										[
											"sort.int\t{base}",
											"sort.int"
										],
										[
											"identical\t{base}",
											"identical"
										],
										[
											"sys.calls\t{base}",
											"sys.calls"
										],
										[
											"on.exit\t{base}",
											"on.exit"
										],
										[
											"srcfilealias\t{base}",
											"srcfilealias"
										],
										[
											"file.mode\t{base}",
											"file.mode"
										],
										[
											"duplicated\t{base}",
											"duplicated"
										],
										[
											"Sys.getenv\t{base}",
											"Sys.getenv"
										],
										[
											"isNamespace\t{base}",
											"isNamespace"
										],
										[
											"aperm.table\t{base}",
											"aperm.table"
										],
										[
											"Reduce\t{base}",
											"Reduce"
										],
										[
											"tabulate\t{base}",
											"tabulate"
										],
										[
											"debuggingState\t{base}",
											"debuggingState"
										],
										[
											"dput\t{base}",
											"dput"
										],
										[
											"builtins\t{base}",
											"builtins"
										],
										[
											"summary.srcfile\t{base}",
											"summary.srcfile"
										],
										[
											"is.data.frame\t{base}",
											"is.data.frame"
										],
										[
											".ArgsEnv\t{base}",
											".ArgsEnv"
										],
										[
											"reg.finalizer\t{base}",
											"reg.finalizer"
										],
										[
											"sys.status\t{base}",
											"sys.status"
										],
										[
											"print.POSIXlt\t{base}",
											"print.POSIXlt"
										],
										[
											"c.numeric_version\t{base}",
											"c.numeric_version"
										],
										[
											"Sys.timezone\t{base}",
											"Sys.timezone"
										],
										[
											"unloadNamespace\t{base}",
											"unloadNamespace"
										],
										[
											"pushBackLength\t{base}",
											"pushBackLength"
										],
										[
											"isS4\t{base}",
											"isS4"
										],
										[
											"oldClass\t{base}",
											"oldClass"
										],
										[
											"labels.default\t{base}",
											"labels.default"
										],
										[
											"grepl\t{base}",
											"grepl"
										],
										[
											"as.difftime\t{base}",
											"as.difftime"
										],
										[
											"getElement\t{base}",
											"getElement"
										],
										[
											"rbind.data.frame\t{base}",
											"rbind.data.frame"
										],
										[
											"digamma\t{base}",
											"digamma"
										],
										[
											"..getNamespace\t{base}",
											"..getNamespace"
										],
										[
											"quarters.Date\t{base}",
											"quarters.Date"
										],
										[
											"as.package_version\t{base}",
											"as.package_version"
										],
										[
											"memCompress\t{base}",
											"memCompress"
										],
										[
											".External\t{base}",
											".External"
										],
										[
											"prettyNum\t{base}",
											"prettyNum"
										],
										[
											"print.by\t{base}",
											"print.by"
										],
										[
											"as.double.difftime\t{base}",
											"as.double.difftime"
										],
										[
											"browserSetDebug\t{base}",
											"browserSetDebug"
										],
										[
											"warnings\t{base}",
											"warnings"
										],
										[
											"scan\t{base}",
											"scan"
										],
										[
											"round.POSIXt\t{base}",
											"round.POSIXt"
										],
										[
											"prod\t{base}",
											"prod"
										],
										[
											"union\t{base}",
											"union"
										],
										[
											"xor\t{base}",
											"xor"
										],
										[
											"xor.hexmode\t{base}",
											"xor.hexmode"
										],
										[
											"round\t{base}",
											"round"
										],
										[
											"ordered\t{base}",
											"ordered"
										],
										[
											"as.data.frame\t{base}",
											"as.data.frame"
										],
										[
											"call\t{base}",
											"call"
										],
										[
											"close\t{base}",
											"close"
										],
										[
											"format.summaryDefault\t{base}",
											"format.summaryDefault"
										],
										[
											"signif\t{base}",
											"signif"
										],
										[
											"open.srcfilecopy\t{base}",
											"open.srcfilecopy"
										],
										[
											"as.numeric\t{base}",
											"as.numeric"
										],
										[
											"grep\t{base}",
											"grep"
										],
										[
											"getwd\t{base}",
											"getwd"
										],
										[
											"nrow\t{base}",
											"nrow"
										],
										[
											"julian.Date\t{base}",
											"julian.Date"
										],
										[
											"lockBinding\t{base}",
											"lockBinding"
										],
										[
											"setequal\t{base}",
											"setequal"
										],
										[
											".subset\t{base}",
											".subset"
										],
										[
											"which.min\t{base}",
											"which.min"
										],
										[
											".Fortran\t{base}",
											".Fortran"
										],
										[
											"file.choose\t{base}",
											"file.choose"
										],
										[
											"units\t{base}",
											"units"
										],
										[
											"round.Date\t{base}",
											"round.Date"
										],
										[
											"getNamespaceName\t{base}",
											"getNamespaceName"
										],
										[
											"getNamespaceInfo\t{base}",
											"getNamespaceInfo"
										],
										[
											"asS3\t{base}",
											"asS3"
										],
										[
											"asS4\t{base}",
											"asS4"
										],
										[
											"choose\t{base}",
											"choose"
										],
										[
											"exists\t{base}",
											"exists"
										],
										[
											"Ops.Date\t{base}",
											"Ops.Date"
										],
										[
											"anyDuplicated.default\t{base}",
											"anyDuplicated.default"
										],
										[
											"date\t{base}",
											"date"
										],
										[
											"print.srcfile\t{base}",
											"print.srcfile"
										],
										[
											"normalizePath\t{base}",
											"normalizePath"
										],
										[
											"truncate.connection\t{base}",
											"truncate.connection"
										],
										[
											"abbreviate\t{base}",
											"abbreviate"
										],
										[
											"diff.POSIXt\t{base}",
											"diff.POSIXt"
										],
										[
											".saveRDS\t{base}",
											".saveRDS"
										],
										[
											"packageHasNamespace\t{base}",
											"packageHasNamespace"
										],
										[
											"which.max\t{base}",
											"which.max"
										],
										[
											"isSymmetric\t{base}",
											"isSymmetric"
										],
										[
											"as.character.srcref\t{base}",
											"as.character.srcref"
										],
										[
											"is.finite\t{base}",
											"is.finite"
										],
										[
											"rep.Date\t{base}",
											"rep.Date"
										],
										[
											"as.character.default\t{base}",
											"as.character.default"
										],
										[
											"as.list.environment\t{base}",
											"as.list.environment"
										],
										[
											".AutoloadEnv\t{base}",
											".AutoloadEnv"
										],
										[
											"as.Date.default\t{base}",
											"as.Date.default"
										],
										[
											"xzfile\t{base}",
											"xzfile"
										],
										[
											"rev.default\t{base}",
											"rev.default"
										],
										[
											"as.symbol\t{base}",
											"as.symbol"
										],
										[
											".doTrace\t{base}",
											".doTrace"
										],
										[
											"showConnections\t{base}",
											"showConnections"
										],
										[
											"rawToBits\t{base}",
											"rawToBits"
										],
										[
											"pmin.int\t{base}",
											"pmin.int"
										],
										[
											"mat.or.vec\t{base}",
											"mat.or.vec"
										],
										[
											"Sys.unsetenv\t{base}",
											"Sys.unsetenv"
										],
										[
											"as.list.numeric_version\t{base}",
											"as.list.numeric_version"
										],
										[
											"args\t{base}",
											"args"
										],
										[
											"is.numeric\t{base}",
											"is.numeric"
										],
										[
											"Conj\t{base}",
											"Conj"
										],
										[
											"cut.default\t{base}",
											"cut.default"
										],
										[
											"Ops.ordered\t{base}",
											"Ops.ordered"
										],
										[
											"textConnection\t{base}",
											"textConnection"
										],
										[
											"as.character.numeric_version\t{base}",
											"as.character.numeric_version"
										],
										[
											".handleSimpleError\t{base}",
											".handleSimpleError"
										],
										[
											"Summary.ordered\t{base}",
											"Summary.ordered"
										],
										[
											"anyDuplicated.data.frame\t{base}",
											"anyDuplicated.data.frame"
										],
										[
											"Ops.factor\t{base}",
											"Ops.factor"
										],
										[
											"drop\t{base}",
											"drop"
										],
										[
											".readRDS\t{base}",
											".readRDS"
										],
										[
											"Math.difftime\t{base}",
											"Math.difftime"
										],
										[
											".__S3MethodsTable__.\t{base}",
											".__S3MethodsTable__."
										],
										[
											"NROW\t{base}",
											"NROW"
										],
										[
											"Math.Date\t{base}",
											"Math.Date"
										],
										[
											".Call\t{base}",
											".Call"
										],
										[
											"intersect\t{base}",
											"intersect"
										],
										[
											"regexec\t{base}",
											"regexec"
										],
										[
											"srcfile\t{base}",
											"srcfile"
										],
										[
											"simpleMessage\t{base}",
											"simpleMessage"
										],
										[
											"ceiling\t{base}",
											"ceiling"
										],
										[
											"sort.POSIXlt\t{base}",
											"sort.POSIXlt"
										],
										[
											"ncol\t{base}",
											"ncol"
										],
										[
											".traceback\t{base}",
											".traceback"
										],
										[
											".C_R_getTaskCallbackNames\t{base}",
											".C_R_getTaskCallbackNames"
										],
										[
											".knownS3Generics\t{base}",
											".knownS3Generics"
										],
										[
											"sql_set_op\t{dplyr}",
											"sql_set_op"
										],
										[
											"first\t{dplyr}",
											"first"
										],
										[
											"eval_tbls\t{dplyr}",
											"eval_tbls"
										],
										[
											"partial_eval\t{dplyr}",
											"partial_eval"
										],
										[
											"row_number\t{dplyr}",
											"row_number"
										],
										[
											"named_commas\t{dplyr}",
											"named_commas"
										],
										[
											"sql_infix\t{dplyr}",
											"sql_infix"
										],
										[
											"lahman_sqlite\t{dplyr}",
											"lahman_sqlite"
										],
										[
											"mutate_at\t{dplyr}",
											"mutate_at"
										],
										[
											"do_\t{dplyr}",
											"do_"
										],
										[
											"rename_vars_\t{dplyr}",
											"rename_vars_"
										],
										[
											"slice\t{dplyr}",
											"slice"
										],
										[
											"explain\t{dplyr}",
											"explain"
										],
										[
											"sql_escape_ident\t{dplyr}",
											"sql_escape_ident"
										],
										[
											"semi_join_query\t{dplyr}",
											"semi_join_query"
										],
										[
											"add_rownames\t{dplyr}",
											"add_rownames"
										],
										[
											"db_query_rows\t{dplyr}",
											"db_query_rows"
										],
										[
											"matches\t{dplyr}",
											"matches"
										],
										[
											"summarize_each_\t{dplyr}",
											"summarize_each_"
										],
										[
											"everything\t{dplyr}",
											"everything"
										],
										[
											"src_tbls\t{dplyr}",
											"src_tbls"
										],
										[
											"between\t{dplyr}",
											"between"
										],
										[
											"test_load\t{dplyr}",
											"test_load"
										],
										[
											"tbl_cube\t{dplyr}",
											"tbl_cube"
										],
										[
											"mutate\t{dplyr}",
											"mutate"
										],
										[
											"n_groups\t{dplyr}",
											"n_groups"
										],
										[
											"src_sqlite\t{dplyr}",
											"src_sqlite"
										],
										[
											"mutate_\t{dplyr}",
											"mutate_"
										],
										[
											"coalesce\t{dplyr}",
											"coalesce"
										],
										[
											"group_by_prepare\t{dplyr}",
											"group_by_prepare"
										],
										[
											"percent_rank\t{dplyr}",
											"percent_rank"
										],
										[
											"grouped_df\t{dplyr}",
											"grouped_df"
										],
										[
											"rename_vars\t{dplyr}",
											"rename_vars"
										],
										[
											"summarize_each\t{dplyr}",
											"summarize_each"
										],
										[
											"cumall\t{dplyr}",
											"cumall"
										],
										[
											"count_\t{dplyr}",
											"count_"
										],
										[
											"base_scalar\t{dplyr}",
											"base_scalar"
										],
										[
											"sql_translator\t{dplyr}",
											"sql_translator"
										],
										[
											"op_double\t{dplyr}",
											"op_double"
										],
										[
											"sql_select\t{dplyr}",
											"sql_select"
										],
										[
											"dim_desc\t{dplyr}",
											"dim_desc"
										],
										[
											"lead\t{dplyr}",
											"lead"
										],
										[
											"db_insert_into\t{dplyr}",
											"db_insert_into"
										],
										[
											"with_order\t{dplyr}",
											"with_order"
										],
										[
											"join_query\t{dplyr}",
											"join_query"
										],
										[
											"src_local\t{dplyr}",
											"src_local"
										],
										[
											"base_agg\t{dplyr}",
											"base_agg"
										],
										[
											"anti_join\t{dplyr}",
											"anti_join"
										],
										[
											"changes\t{dplyr}",
											"changes"
										],
										[
											"transmute_\t{dplyr}",
											"transmute_"
										],
										[
											"src_memdb\t{dplyr}",
											"src_memdb"
										],
										[
											"summarise_all\t{dplyr}",
											"summarise_all"
										],
										[
											"summarize\t{dplyr}",
											"summarize"
										],
										[
											"filter\t{dplyr}",
											"filter"
										],
										[
											"compare_tbls\t{dplyr}",
											"compare_tbls"
										],
										[
											"lahman_postgres\t{dplyr}",
											"lahman_postgres"
										],
										[
											"cummean\t{dplyr}",
											"cummean"
										],
										[
											"lag\t{dplyr}",
											"lag"
										],
										[
											"set_op_query\t{dplyr}",
											"set_op_query"
										],
										[
											"translate_sql\t{dplyr}",
											"translate_sql"
										],
										[
											"collapse\t{dplyr}",
											"collapse"
										],
										[
											"data_frame_\t{dplyr}",
											"data_frame_"
										],
										[
											"src_postgres\t{dplyr}",
											"src_postgres"
										],
										[
											"contains\t{dplyr}",
											"contains"
										],
										[
											"transmute\t{dplyr}",
											"transmute"
										],
										[
											"tbl_sql\t{dplyr}",
											"tbl_sql"
										],
										[
											"select_vars_\t{dplyr}",
											"select_vars_"
										],
										[
											"vars\t{dplyr}",
											"vars"
										],
										[
											"arrange\t{dplyr}",
											"arrange"
										],
										[
											"left_join\t{dplyr}",
											"left_join"
										],
										[
											"progress_estimated\t{dplyr}",
											"progress_estimated"
										],
										[
											"groups\t{dplyr}",
											"groups"
										],
										[
											"failwith\t{dplyr}",
											"failwith"
										],
										[
											"copy_to\t{dplyr}",
											"copy_to"
										],
										[
											"base_no_win\t{dplyr}",
											"base_no_win"
										],
										[
											"is.grouped_df\t{dplyr}",
											"is.grouped_df"
										],
										[
											"nycflights13_sqlite\t{dplyr}",
											"nycflights13_sqlite"
										],
										[
											"db_analyze\t{dplyr}",
											"db_analyze"
										],
										[
											"db_commit\t{dplyr}",
											"db_commit"
										],
										[
											"sample_n\t{dplyr}",
											"sample_n"
										],
										[
											"compute\t{dplyr}",
											"compute"
										],
										[
											"src_sql\t{dplyr}",
											"src_sql"
										],
										[
											"summarise_\t{dplyr}",
											"summarise_"
										],
										[
											"nth\t{dplyr}",
											"nth"
										],
										[
											"current_vars\t{dplyr}",
											"current_vars"
										],
										[
											"group_indices\t{dplyr}",
											"group_indices"
										],
										[
											"add_op_single\t{dplyr}",
											"add_op_single"
										],
										[
											"test_register_src\t{dplyr}",
											"test_register_src"
										],
										[
											"intersect\t{dplyr}",
											"intersect"
										],
										[
											"cumany\t{dplyr}",
											"cumany"
										],
										[
											"summarize_if\t{dplyr}",
											"summarize_if"
										],
										[
											"common_by\t{dplyr}",
											"common_by"
										],
										[
											"summarise\t{dplyr}",
											"summarise"
										],
										[
											"funs\t{dplyr}",
											"funs"
										],
										[
											"ends_with\t{dplyr}",
											"ends_with"
										],
										[
											"trunc_mat\t{dplyr}",
											"trunc_mat"
										],
										[
											"has_nycflights13\t{dplyr}",
											"has_nycflights13"
										],
										[
											"select_\t{dplyr}",
											"select_"
										],
										[
											"sql_quote\t{dplyr}",
											"sql_quote"
										],
										[
											"escape\t{dplyr}",
											"escape"
										],
										[
											"sql_prefix\t{dplyr}",
											"sql_prefix"
										],
										[
											"has_lahman\t{dplyr}",
											"has_lahman"
										],
										[
											"select\t{dplyr}",
											"select"
										],
										[
											"near\t{dplyr}",
											"near"
										],
										[
											"summarize_all\t{dplyr}",
											"summarize_all"
										],
										[
											"filter_\t{dplyr}",
											"filter_"
										],
										[
											"select_if\t{dplyr}",
											"select_if"
										],
										[
											"slice_\t{dplyr}",
											"slice_"
										],
										[
											"sql_not_supported\t{dplyr}",
											"sql_not_supported"
										],
										[
											"op_vars\t{dplyr}",
											"op_vars"
										],
										[
											"db_create_table\t{dplyr}",
											"db_create_table"
										],
										[
											"op_grps\t{dplyr}",
											"op_grps"
										],
										[
											"summarise_at\t{dplyr}",
											"summarise_at"
										],
										[
											"lahman_dt\t{dplyr}",
											"lahman_dt"
										],
										[
											"memdb_frame\t{dplyr}",
											"memdb_frame"
										],
										[
											"is.ident\t{dplyr}",
											"is.ident"
										],
										[
											"sql_subquery\t{dplyr}",
											"sql_subquery"
										],
										[
											"db_query_fields\t{dplyr}",
											"db_query_fields"
										],
										[
											"mutate_all\t{dplyr}",
											"mutate_all"
										],
										[
											"op_single\t{dplyr}",
											"op_single"
										],
										[
											"summarise_each_q\t{dplyr}",
											"summarise_each_q"
										],
										[
											"select_query\t{dplyr}",
											"select_query"
										],
										[
											"sql_semi_join\t{dplyr}",
											"sql_semi_join"
										],
										[
											"select_vars\t{dplyr}",
											"select_vars"
										],
										[
											"tbl_vars\t{dplyr}",
											"tbl_vars"
										],
										[
											"sql_variant\t{dplyr}",
											"sql_variant"
										],
										[
											"build_sql\t{dplyr}",
											"build_sql"
										],
										[
											"distinct\t{dplyr}",
											"distinct"
										],
										[
											"rbind_list\t{dplyr}",
											"rbind_list"
										],
										[
											"same_src\t{dplyr}",
											"same_src"
										],
										[
											"sql_vector\t{dplyr}",
											"sql_vector"
										],
										[
											"data_frame\t{dplyr}",
											"data_frame"
										],
										[
											"recode_factor\t{dplyr}",
											"recode_factor"
										],
										[
											"one_of\t{dplyr}",
											"one_of"
										],
										[
											"n\t{dplyr}",
											"n"
										],
										[
											"lahman_df\t{dplyr}",
											"lahman_df"
										],
										[
											"frame_data\t{dplyr}",
											"frame_data"
										],
										[
											"sql\t{dplyr}",
											"sql"
										],
										[
											"last\t{dplyr}",
											"last"
										],
										[
											"show_query\t{dplyr}",
											"show_query"
										],
										[
											"starts_with\t{dplyr}",
											"starts_with"
										],
										[
											"as_data_frame\t{dplyr}",
											"as_data_frame"
										],
										[
											"setdiff\t{dplyr}",
											"setdiff"
										],
										[
											"db_list_tables\t{dplyr}",
											"db_list_tables"
										],
										[
											"mutate_each\t{dplyr}",
											"mutate_each"
										],
										[
											"do\t{dplyr}",
											"do"
										],
										[
											"src\t{dplyr}",
											"src"
										],
										[
											"db_create_indexes\t{dplyr}",
											"db_create_indexes"
										],
										[
											"rename_\t{dplyr}",
											"rename_"
										],
										[
											"order_by\t{dplyr}",
											"order_by"
										],
										[
											"semi_join\t{dplyr}",
											"semi_join"
										],
										[
											"sql_render\t{dplyr}",
											"sql_render"
										],
										[
											"db_has_table\t{dplyr}",
											"db_has_table"
										],
										[
											"na_if\t{dplyr}",
											"na_if"
										],
										[
											"tbl\t{dplyr}",
											"tbl"
										],
										[
											"group_indices_\t{dplyr}",
											"group_indices_"
										],
										[
											"tally\t{dplyr}",
											"tally"
										],
										[
											"mutate_each_\t{dplyr}",
											"mutate_each_"
										],
										[
											"bind_cols\t{dplyr}",
											"bind_cols"
										],
										[
											"sql_translate_env\t{dplyr}",
											"sql_translate_env"
										],
										[
											"all_equal\t{dplyr}",
											"all_equal"
										],
										[
											"sample_frac\t{dplyr}",
											"sample_frac"
										],
										[
											"is.sql\t{dplyr}",
											"is.sql"
										],
										[
											"db_data_type\t{dplyr}",
											"db_data_type"
										],
										[
											"location\t{dplyr}",
											"location"
										],
										[
											"lst_\t{dplyr}",
											"lst_"
										],
										[
											"lahman_srcs\t{dplyr}",
											"lahman_srcs"
										],
										[
											"if_else\t{dplyr}",
											"if_else"
										],
										[
											"arrange_\t{dplyr}",
											"arrange_"
										],
										[
											"src_df\t{dplyr}",
											"src_df"
										],
										[
											"op_sort\t{dplyr}",
											"op_sort"
										],
										[
											"db_begin\t{dplyr}",
											"db_begin"
										],
										[
											"is.src\t{dplyr}",
											"is.src"
										],
										[
											"case_when\t{dplyr}",
											"case_when"
										],
										[
											"ungroup\t{dplyr}",
											"ungroup"
										],
										[
											"inner_join\t{dplyr}",
											"inner_join"
										],
										[
											"funs_\t{dplyr}",
											"funs_"
										],
										[
											"lst\t{dplyr}",
											"lst"
										],
										[
											"is.tbl\t{dplyr}",
											"is.tbl"
										],
										[
											"group_by_\t{dplyr}",
											"group_by_"
										],
										[
											"db_create_index\t{dplyr}",
											"db_create_index"
										],
										[
											"dense_rank\t{dplyr}",
											"dense_rank"
										],
										[
											"db_rollback\t{dplyr}",
											"db_rollback"
										],
										[
											"lahman_mysql\t{dplyr}",
											"lahman_mysql"
										],
										[
											"type_sum\t{dplyr}",
											"type_sum"
										],
										[
											"num_range\t{dplyr}",
											"num_range"
										],
										[
											"op_base\t{dplyr}",
											"op_base"
										],
										[
											"rowwise\t{dplyr}",
											"rowwise"
										],
										[
											"group_by\t{dplyr}",
											"group_by"
										],
										[
											"group_size\t{dplyr}",
											"group_size"
										],
										[
											"as.tbl_cube\t{dplyr}",
											"as.tbl_cube"
										],
										[
											"ntile\t{dplyr}",
											"ntile"
										],
										[
											"query\t{dplyr}",
											"query"
										],
										[
											"recode\t{dplyr}",
											"recode"
										],
										[
											"collect\t{dplyr}",
											"collect"
										],
										[
											"auto_copy\t{dplyr}",
											"auto_copy"
										],
										[
											"sql_build\t{dplyr}",
											"sql_build"
										],
										[
											"src_desc\t{dplyr}",
											"src_desc"
										],
										[
											"right_join\t{dplyr}",
											"right_join"
										],
										[
											"base_win\t{dplyr}",
											"base_win"
										],
										[
											"regroup\t{dplyr}",
											"regroup"
										],
										[
											"top_n\t{dplyr}",
											"top_n"
										],
										[
											"rbind_all\t{dplyr}",
											"rbind_all"
										],
										[
											"sql_escape_string\t{dplyr}",
											"sql_escape_string"
										],
										[
											"min_rank\t{dplyr}",
											"min_rank"
										],
										[
											"summarise_if\t{dplyr}",
											"summarise_if"
										],
										[
											"bind_rows\t{dplyr}",
											"bind_rows"
										],
										[
											"setequal\t{dplyr}",
											"setequal"
										],
										[
											"union_all\t{dplyr}",
											"union_all"
										],
										[
											"union\t{dplyr}",
											"union"
										],
										[
											"n_distinct\t{dplyr}",
											"n_distinct"
										],
										[
											"summarise_each\t{dplyr}",
											"summarise_each"
										],
										[
											"src_mysql\t{dplyr}",
											"src_mysql"
										],
										[
											"db_drop_table\t{dplyr}",
											"db_drop_table"
										],
										[
											"glimpse\t{dplyr}",
											"glimpse"
										],
										[
											"bench_tbls\t{dplyr}",
											"bench_tbls"
										],
										[
											"tibble\t{dplyr}",
											"tibble"
										],
										[
											"distinct_\t{dplyr}",
											"distinct_"
										],
										[
											"cume_dist\t{dplyr}",
											"cume_dist"
										],
										[
											"test_frame\t{dplyr}",
											"test_frame"
										],
										[
											"make_tbl\t{dplyr}",
											"make_tbl"
										],
										[
											"copy_nycflights13\t{dplyr}",
											"copy_nycflights13"
										],
										[
											"summarize_\t{dplyr}",
											"summarize_"
										],
										[
											"summarise_each_\t{dplyr}",
											"summarise_each_"
										],
										[
											"id\t{dplyr}",
											"id"
										],
										[
											"rename\t{dplyr}",
											"rename"
										],
										[
											"ident\t{dplyr}",
											"ident"
										],
										[
											"combine\t{dplyr}",
											"combine"
										],
										[
											"full_join\t{dplyr}",
											"full_join"
										],
										[
											"db_save_query\t{dplyr}",
											"db_save_query"
										],
										[
											"tbl_df\t{dplyr}",
											"tbl_df"
										],
										[
											"as.tbl\t{dplyr}",
											"as.tbl"
										],
										[
											"desc\t{dplyr}",
											"desc"
										],
										[
											"copy_lahman\t{dplyr}",
											"copy_lahman"
										],
										[
											"add_row\t{dplyr}",
											"add_row"
										],
										[
											"summarize_at\t{dplyr}",
											"summarize_at"
										],
										[
											"mutate_each_q\t{dplyr}",
											"mutate_each_q"
										],
										[
											"db_explain\t{dplyr}",
											"db_explain"
										],
										[
											"mutate_if\t{dplyr}",
											"mutate_if"
										],
										[
											"nycflights13_postgres\t{dplyr}",
											"nycflights13_postgres"
										],
										[
											"count\t{dplyr}",
											"count"
										],
										[
											"sql_join\t{dplyr}",
											"sql_join"
										],
										[
											"translate_sql_\t{dplyr}",
											"translate_sql_"
										],
										[
											"read_delim_chunked\t{readr}",
											"read_delim_chunked"
										],
										[
											"parse_logical\t{readr}",
											"parse_logical"
										],
										[
											"col_date\t{readr}",
											"col_date"
										],
										[
											"fwf_widths\t{readr}",
											"fwf_widths"
										],
										[
											"readr_example\t{readr}",
											"readr_example"
										],
										[
											"parse_datetime\t{readr}",
											"parse_datetime"
										],
										[
											"write_csv\t{readr}",
											"write_csv"
										],
										[
											"write_rds\t{readr}",
											"write_rds"
										],
										[
											"problems\t{readr}",
											"problems"
										],
										[
											"count_fields\t{readr}",
											"count_fields"
										],
										[
											"SideEffectChunkCallback\t{readr}",
											"SideEffectChunkCallback"
										],
										[
											"write_file\t{readr}",
											"write_file"
										],
										[
											"format_delim\t{readr}",
											"format_delim"
										],
										[
											"tokenizer_delim\t{readr}",
											"tokenizer_delim"
										],
										[
											"col_numeric\t{readr}",
											"col_numeric"
										],
										[
											"col_double\t{readr}",
											"col_double"
										],
										[
											"fwf_empty\t{readr}",
											"fwf_empty"
										],
										[
											"parse_factor\t{readr}",
											"parse_factor"
										],
										[
											"DataFrameCallback\t{readr}",
											"DataFrameCallback"
										],
										[
											"parse_numeric\t{readr}",
											"parse_numeric"
										],
										[
											"type_convert\t{readr}",
											"type_convert"
										],
										[
											"format_csv\t{readr}",
											"format_csv"
										],
										[
											"parse_character\t{readr}",
											"parse_character"
										],
										[
											"parse_vector\t{readr}",
											"parse_vector"
										],
										[
											"tokenizer_csv\t{readr}",
											"tokenizer_csv"
										],
										[
											"output_column\t{readr}",
											"output_column"
										],
										[
											"spec_csv\t{readr}",
											"spec_csv"
										],
										[
											"cols\t{readr}",
											"cols"
										],
										[
											"parse_guess\t{readr}",
											"parse_guess"
										],
										[
											"col_logical\t{readr}",
											"col_logical"
										],
										[
											"tokenizer_line\t{readr}",
											"tokenizer_line"
										],
										[
											"cols_condense\t{readr}",
											"cols_condense"
										],
										[
											"col_factor\t{readr}",
											"col_factor"
										],
										[
											"read_rds\t{readr}",
											"read_rds"
										],
										[
											"fwf_positions\t{readr}",
											"fwf_positions"
										],
										[
											"read_tsv_chunked\t{readr}",
											"read_tsv_chunked"
										],
										[
											"read_csv\t{readr}",
											"read_csv"
										],
										[
											"parse_integer\t{readr}",
											"parse_integer"
										],
										[
											"read_lines_raw\t{readr}",
											"read_lines_raw"
										],
										[
											"read_file\t{readr}",
											"read_file"
										],
										[
											"col_character\t{readr}",
											"col_character"
										],
										[
											"write_lines\t{readr}",
											"write_lines"
										],
										[
											"col_skip\t{readr}",
											"col_skip"
										],
										[
											"col_euro_double\t{readr}",
											"col_euro_double"
										],
										[
											"parse_double\t{readr}",
											"parse_double"
										],
										[
											"ChunkCallback\t{readr}",
											"ChunkCallback"
										],
										[
											"read_file_raw\t{readr}",
											"read_file_raw"
										],
										[
											"date_names\t{readr}",
											"date_names"
										],
										[
											"write_delim\t{readr}",
											"write_delim"
										],
										[
											"stop_for_problems\t{readr}",
											"stop_for_problems"
										],
										[
											"guess_encoding\t{readr}",
											"guess_encoding"
										],
										[
											"parse_time\t{readr}",
											"parse_time"
										],
										[
											"parse_date\t{readr}",
											"parse_date"
										],
										[
											"write_tsv\t{readr}",
											"write_tsv"
										],
										[
											"col_integer\t{readr}",
											"col_integer"
										],
										[
											"tokenizer_fwf\t{readr}",
											"tokenizer_fwf"
										],
										[
											"col_number\t{readr}",
											"col_number"
										],
										[
											"read_csv2\t{readr}",
											"read_csv2"
										],
										[
											"datasource\t{readr}",
											"datasource"
										],
										[
											"read_delim\t{readr}",
											"read_delim"
										],
										[
											"spec_delim\t{readr}",
											"spec_delim"
										],
										[
											"locale\t{readr}",
											"locale"
										],
										[
											"write_excel_csv\t{readr}",
											"write_excel_csv"
										],
										[
											"cols_only\t{readr}",
											"cols_only"
										],
										[
											"format_tsv\t{readr}",
											"format_tsv"
										],
										[
											"tokenizer_tsv\t{readr}",
											"tokenizer_tsv"
										],
										[
											"spec_tsv\t{readr}",
											"spec_tsv"
										],
										[
											"tokenizer_log\t{readr}",
											"tokenizer_log"
										],
										[
											"date_names_langs\t{readr}",
											"date_names_langs"
										],
										[
											"read_fwf\t{readr}",
											"read_fwf"
										],
										[
											"read_csv_chunked\t{readr}",
											"read_csv_chunked"
										],
										[
											"read_table\t{readr}",
											"read_table"
										],
										[
											"col_time\t{readr}",
											"col_time"
										],
										[
											"col_datetime\t{readr}",
											"col_datetime"
										],
										[
											"parse_euro_double\t{readr}",
											"parse_euro_double"
										],
										[
											"parse_number\t{readr}",
											"parse_number"
										],
										[
											"read_tsv\t{readr}",
											"read_tsv"
										],
										[
											"guess_parser\t{readr}",
											"guess_parser"
										],
										[
											"read_lines\t{readr}",
											"read_lines"
										],
										[
											"date_names_lang\t{readr}",
											"date_names_lang"
										],
										[
											"read_log\t{readr}",
											"read_log"
										],
										[
											"read_lines_chunked\t{readr}",
											"read_lines_chunked"
										],
										[
											"default_locale\t{readr}",
											"default_locale"
										],
										[
											"spec\t{readr}",
											"spec"
										],
										[
											"col_guess\t{readr}",
											"col_guess"
										],
										[
											"read_csv2_chunked\t{readr}",
											"read_csv2_chunked"
										],
										[
											"spec_table\t{readr}",
											"spec_table"
										],
										[
											"tokenize\t{readr}",
											"tokenize"
										],
										[
											"spec_csv2\t{readr}",
											"spec_csv2"
										],
										[
											"confint.default\t{stats}",
											"confint.default"
										],
										[
											"mahalanobis\t{stats}",
											"mahalanobis"
										],
										[
											"optimize\t{stats}",
											"optimize"
										],
										[
											"hat\t{stats}",
											"hat"
										],
										[
											"Box.test\t{stats}",
											"Box.test"
										],
										[
											"reorder\t{stats}",
											"reorder"
										],
										[
											"phyper\t{stats}",
											"phyper"
										],
										[
											"ar.mle\t{stats}",
											"ar.mle"
										],
										[
											"rhyper\t{stats}",
											"rhyper"
										],
										[
											"contr.SAS\t{stats}",
											"contr.SAS"
										],
										[
											"na.exclude\t{stats}",
											"na.exclude"
										],
										[
											"qgeom\t{stats}",
											"qgeom"
										],
										[
											"is.ts\t{stats}",
											"is.ts"
										],
										[
											"plogis\t{stats}",
											"plogis"
										],
										[
											"drop.terms\t{stats}",
											"drop.terms"
										],
										[
											"rlogis\t{stats}",
											"rlogis"
										],
										[
											"convolve\t{stats}",
											"convolve"
										],
										[
											"ts.intersect\t{stats}",
											"ts.intersect"
										],
										[
											"KalmanSmooth\t{stats}",
											"KalmanSmooth"
										],
										[
											"ts.union\t{stats}",
											"ts.union"
										],
										[
											"smoothEnds\t{stats}",
											"smoothEnds"
										],
										[
											"is.tskernel\t{stats}",
											"is.tskernel"
										],
										[
											"as.formula\t{stats}",
											"as.formula"
										],
										[
											"dexp\t{stats}",
											"dexp"
										],
										[
											"inverse.gaussian\t{stats}",
											"inverse.gaussian"
										],
										[
											"na.contiguous\t{stats}",
											"na.contiguous"
										],
										[
											"line\t{stats}",
											"line"
										],
										[
											"dgeom\t{stats}",
											"dgeom"
										],
										[
											"qbirthday\t{stats}",
											"qbirthday"
										],
										[
											"confint.lm\t{stats}",
											"confint.lm"
										],
										[
											"cophenetic\t{stats}",
											"cophenetic"
										],
										[
											"var.test\t{stats}",
											"var.test"
										],
										[
											"diffinv\t{stats}",
											"diffinv"
										],
										[
											"ar\t{stats}",
											"ar"
										],
										[
											"dummy.coef\t{stats}",
											"dummy.coef"
										],
										[
											"cooks.distance\t{stats}",
											"cooks.distance"
										],
										[
											"density\t{stats}",
											"density"
										],
										[
											"ptukey\t{stats}",
											"ptukey"
										],
										[
											"as.dist\t{stats}",
											"as.dist"
										],
										[
											"drop1\t{stats}",
											"drop1"
										],
										[
											"rbeta\t{stats}",
											"rbeta"
										],
										[
											"fligner.test\t{stats}",
											"fligner.test"
										],
										[
											"naprint\t{stats}",
											"naprint"
										],
										[
											"qqnorm\t{stats}",
											"qqnorm"
										],
										[
											"is.stepfun\t{stats}",
											"is.stepfun"
										],
										[
											"lsfit\t{stats}",
											"lsfit"
										],
										[
											"mad\t{stats}",
											"mad"
										],
										[
											"shapiro.test\t{stats}",
											"shapiro.test"
										],
										[
											"qqplot\t{stats}",
											"qqplot"
										],
										[
											"eff.aovlist\t{stats}",
											"eff.aovlist"
										],
										[
											"runif\t{stats}",
											"runif"
										],
										[
											"isoreg\t{stats}",
											"isoreg"
										],
										[
											"profile\t{stats}",
											"profile"
										],
										[
											"is.leaf\t{stats}",
											"is.leaf"
										],
										[
											"dchisq\t{stats}",
											"dchisq"
										],
										[
											"contr.poly\t{stats}",
											"contr.poly"
										],
										[
											"stepfun\t{stats}",
											"stepfun"
										],
										[
											"quasipoisson\t{stats}",
											"quasipoisson"
										],
										[
											"na.omit\t{stats}",
											"na.omit"
										],
										[
											"pnbinom\t{stats}",
											"pnbinom"
										],
										[
											"ppois\t{stats}",
											"ppois"
										],
										[
											"model.matrix.default\t{stats}",
											"model.matrix.default"
										],
										[
											"family\t{stats}",
											"family"
										],
										[
											"plot.ecdf\t{stats}",
											"plot.ecdf"
										],
										[
											"cor.test\t{stats}",
											"cor.test"
										],
										[
											"pchisq\t{stats}",
											"pchisq"
										],
										[
											"rchisq\t{stats}",
											"rchisq"
										],
										[
											"na.fail\t{stats}",
											"na.fail"
										],
										[
											"heatmap\t{stats}",
											"heatmap"
										],
										[
											"rmultinom\t{stats}",
											"rmultinom"
										],
										[
											"qweibull\t{stats}",
											"qweibull"
										],
										[
											"power.t.test\t{stats}",
											"power.t.test"
										],
										[
											"complete.cases\t{stats}",
											"complete.cases"
										],
										[
											"loess.control\t{stats}",
											"loess.control"
										],
										[
											"qnbinom\t{stats}",
											"qnbinom"
										],
										[
											"df\t{stats}",
											"df"
										],
										[
											"rnorm\t{stats}",
											"rnorm"
										],
										[
											"addmargins\t{stats}",
											"addmargins"
										],
										[
											"asOneSidedFormula\t{stats}",
											"asOneSidedFormula"
										],
										[
											"nlm\t{stats}",
											"nlm"
										],
										[
											"covratio\t{stats}",
											"covratio"
										],
										[
											"C\t{stats}",
											"C"
										],
										[
											"as.stepfun\t{stats}",
											"as.stepfun"
										],
										[
											"D\t{stats}",
											"D"
										],
										[
											"ar.burg\t{stats}",
											"ar.burg"
										],
										[
											"cov2cor\t{stats}",
											"cov2cor"
										],
										[
											"pgeom\t{stats}",
											"pgeom"
										],
										[
											"chisq.test\t{stats}",
											"chisq.test"
										],
										[
											"p.adjust\t{stats}",
											"p.adjust"
										],
										[
											"nls\t{stats}",
											"nls"
										],
										[
											"integrate\t{stats}",
											"integrate"
										],
										[
											"fivenum\t{stats}",
											"fivenum"
										],
										[
											"weighted.mean\t{stats}",
											"weighted.mean"
										],
										[
											"rweibull\t{stats}",
											"rweibull"
										],
										[
											"qqline\t{stats}",
											"qqline"
										],
										[
											"as.dendrogram\t{stats}",
											"as.dendrogram"
										],
										[
											"runmed\t{stats}",
											"runmed"
										],
										[
											"aov\t{stats}",
											"aov"
										],
										[
											"dt\t{stats}",
											"dt"
										],
										[
											"influence\t{stats}",
											"influence"
										],
										[
											"rnbinom\t{stats}",
											"rnbinom"
										],
										[
											"coefficients\t{stats}",
											"coefficients"
										],
										[
											"tsp\t{stats}",
											"tsp"
										],
										[
											"dfbeta\t{stats}",
											"dfbeta"
										],
										[
											"hasTsp\t{stats}",
											"hasTsp"
										],
										[
											"dbinom\t{stats}",
											"dbinom"
										],
										[
											"wilcox.test\t{stats}",
											"wilcox.test"
										],
										[
											"scatter.smooth\t{stats}",
											"scatter.smooth"
										],
										[
											"start\t{stats}",
											"start"
										],
										[
											"delete.response\t{stats}",
											"delete.response"
										],
										[
											"qsignrank\t{stats}",
											"qsignrank"
										],
										[
											"is.mts\t{stats}",
											"is.mts"
										],
										[
											".getXlevels\t{stats}",
											".getXlevels"
										],
										[
											"BIC\t{stats}",
											"BIC"
										],
										[
											"ks.test\t{stats}",
											"ks.test"
										],
										[
											".nknots.smspl\t{stats}",
											".nknots.smspl"
										],
										[
											"order.dendrogram\t{stats}",
											"order.dendrogram"
										],
										[
											"SSD\t{stats}",
											"SSD"
										],
										[
											"HoltWinters\t{stats}",
											"HoltWinters"
										],
										[
											"qbeta\t{stats}",
											"qbeta"
										],
										[
											"pbinom\t{stats}",
											"pbinom"
										],
										[
											"effects\t{stats}",
											"effects"
										],
										[
											"rbinom\t{stats}",
											"rbinom"
										],
										[
											"monthplot\t{stats}",
											"monthplot"
										],
										[
											"acf2AR\t{stats}",
											"acf2AR"
										],
										[
											"splinefunH\t{stats}",
											"splinefunH"
										],
										[
											"splinefun\t{stats}",
											"splinefun"
										],
										[
											"qunif\t{stats}",
											"qunif"
										],
										[
											"nls.control\t{stats}",
											"nls.control"
										],
										[
											"dbeta\t{stats}",
											"dbeta"
										],
										[
											"influence.measures\t{stats}",
											"influence.measures"
										],
										[
											"as.ts\t{stats}",
											"as.ts"
										],
										[
											"prop.trend.test\t{stats}",
											"prop.trend.test"
										],
										[
											"summary.glm\t{stats}",
											"summary.glm"
										],
										[
											"get_all_vars\t{stats}",
											"get_all_vars"
										],
										[
											"preplot\t{stats}",
											"preplot"
										],
										[
											"mood.test\t{stats}",
											"mood.test"
										],
										[
											"dunif\t{stats}",
											"dunif"
										],
										[
											"vcov\t{stats}",
											"vcov"
										],
										[
											"glm.control\t{stats}",
											"glm.control"
										],
										[
											"ar.ols\t{stats}",
											"ar.ols"
										],
										[
											"qgamma\t{stats}",
											"qgamma"
										],
										[
											"dendrapply\t{stats}",
											"dendrapply"
										],
										[
											"arima0.diag\t{stats}",
											"arima0.diag"
										],
										[
											"dnbinom\t{stats}",
											"dnbinom"
										],
										[
											"qnorm\t{stats}",
											"qnorm"
										],
										[
											"SSbiexp\t{stats}",
											"SSbiexp"
										],
										[
											"poisson.test\t{stats}",
											"poisson.test"
										],
										[
											"add.scope\t{stats}",
											"add.scope"
										],
										[
											"plot.spec.phase\t{stats}",
											"plot.spec.phase"
										],
										[
											"dlnorm\t{stats}",
											"dlnorm"
										],
										[
											"makeARIMA\t{stats}",
											"makeARIMA"
										],
										[
											"tsSmooth\t{stats}",
											"tsSmooth"
										],
										[
											"dnorm\t{stats}",
											"dnorm"
										],
										[
											"nobs\t{stats}",
											"nobs"
										],
										[
											"knots\t{stats}",
											"knots"
										],
										[
											"fitted\t{stats}",
											"fitted"
										],
										[
											"spline\t{stats}",
											"spline"
										],
										[
											"symnum\t{stats}",
											"symnum"
										],
										[
											"prcomp\t{stats}",
											"prcomp"
										],
										[
											"friedman.test\t{stats}",
											"friedman.test"
										],
										[
											"KalmanForecast\t{stats}",
											"KalmanForecast"
										],
										[
											"aggregate.data.frame\t{stats}",
											"aggregate.data.frame"
										],
										[
											"plot.spec.coherency\t{stats}",
											"plot.spec.coherency"
										],
										[
											"frequency\t{stats}",
											"frequency"
										],
										[
											"decompose\t{stats}",
											"decompose"
										],
										[
											"dsignrank\t{stats}",
											"dsignrank"
										],
										[
											"pcauchy\t{stats}",
											"pcauchy"
										],
										[
											"dist\t{stats}",
											"dist"
										],
										[
											"SSmicmen\t{stats}",
											"SSmicmen"
										],
										[
											"predict\t{stats}",
											"predict"
										],
										[
											"lag.plot\t{stats}",
											"lag.plot"
										],
										[
											"plnorm\t{stats}",
											"plnorm"
										],
										[
											"write.ftable\t{stats}",
											"write.ftable"
										],
										[
											"factanal\t{stats}",
											"factanal"
										],
										[
											"resid\t{stats}",
											"resid"
										],
										[
											"rlnorm\t{stats}",
											"rlnorm"
										],
										[
											"rstandard\t{stats}",
											"rstandard"
										],
										[
											"plot.ts\t{stats}",
											"plot.ts"
										],
										[
											"optim\t{stats}",
											"optim"
										],
										[
											"glm.fit\t{stats}",
											"glm.fit"
										],
										[
											"predict.lm\t{stats}",
											"predict.lm"
										],
										[
											"dmultinom\t{stats}",
											"dmultinom"
										],
										[
											"getCall\t{stats}",
											"getCall"
										],
										[
											"ansari.test\t{stats}",
											"ansari.test"
										],
										[
											"loadings\t{stats}",
											"loadings"
										],
										[
											"NLSstAsymptotic\t{stats}",
											"NLSstAsymptotic"
										],
										[
											"residuals.glm\t{stats}",
											"residuals.glm"
										],
										[
											"window\t{stats}",
											"window"
										],
										[
											"pbeta\t{stats}",
											"pbeta"
										],
										[
											"pairwise.t.test\t{stats}",
											"pairwise.t.test"
										],
										[
											"mantelhaen.test\t{stats}",
											"mantelhaen.test"
										],
										[
											"aggregate\t{stats}",
											"aggregate"
										],
										[
											"qcauchy\t{stats}",
											"qcauchy"
										],
										[
											"loess.smooth\t{stats}",
											"loess.smooth"
										],
										[
											"predict.glm\t{stats}",
											"predict.glm"
										],
										[
											"extractAIC\t{stats}",
											"extractAIC"
										],
										[
											"punif\t{stats}",
											"punif"
										],
										[
											"approxfun\t{stats}",
											"approxfun"
										],
										[
											"napredict\t{stats}",
											"napredict"
										],
										[
											"weights\t{stats}",
											"weights"
										],
										[
											"quasibinomial\t{stats}",
											"quasibinomial"
										],
										[
											"SSweibull\t{stats}",
											"SSweibull"
										],
										[
											"ave\t{stats}",
											"ave"
										],
										[
											"ARMAacf\t{stats}",
											"ARMAacf"
										],
										[
											"bw.ucv\t{stats}",
											"bw.ucv"
										],
										[
											"estVar\t{stats}",
											"estVar"
										],
										[
											"cor\t{stats}",
											"cor"
										],
										[
											"update.formula\t{stats}",
											"update.formula"
										],
										[
											"pbirthday\t{stats}",
											"pbirthday"
										],
										[
											"se.contrast\t{stats}",
											"se.contrast"
										],
										[
											"alias\t{stats}",
											"alias"
										],
										[
											"rcauchy\t{stats}",
											"rcauchy"
										],
										[
											"cov\t{stats}",
											"cov"
										],
										[
											"case.names\t{stats}",
											"case.names"
										],
										[
											"ls.print\t{stats}",
											"ls.print"
										],
										[
											"nlminb\t{stats}",
											"nlminb"
										],
										[
											"TukeyHSD\t{stats}",
											"TukeyHSD"
										],
										[
											"hatvalues\t{stats}",
											"hatvalues"
										],
										[
											"contr.sum\t{stats}",
											"contr.sum"
										],
										[
											"ppoints\t{stats}",
											"ppoints"
										],
										[
											"filter\t{stats}",
											"filter"
										],
										[
											"deviance\t{stats}",
											"deviance"
										],
										[
											"KalmanRun\t{stats}",
											"KalmanRun"
										],
										[
											"pnorm\t{stats}",
											"pnorm"
										],
										[
											"lag\t{stats}",
											"lag"
										],
										[
											"ar.yw\t{stats}",
											"ar.yw"
										],
										[
											"lm\t{stats}",
											"lm"
										],
										[
											"r2dtable\t{stats}",
											"r2dtable"
										],
										[
											"cpgram\t{stats}",
											"cpgram"
										],
										[
											"mcnemar.test\t{stats}",
											"mcnemar.test"
										],
										[
											"NLSstClosestX\t{stats}",
											"NLSstClosestX"
										],
										[
											"makepredictcall\t{stats}",
											"makepredictcall"
										],
										[
											"NLSstLfAsymptote\t{stats}",
											"NLSstLfAsymptote"
										],
										[
											"simulate\t{stats}",
											"simulate"
										],
										[
											"toeplitz\t{stats}",
											"toeplitz"
										],
										[
											"SSasympOrig\t{stats}",
											"SSasympOrig"
										],
										[
											"summary.manova\t{stats}",
											"summary.manova"
										],
										[
											"model.extract\t{stats}",
											"model.extract"
										],
										[
											"qhyper\t{stats}",
											"qhyper"
										],
										[
											"model.tables\t{stats}",
											"model.tables"
										],
										[
											"add1\t{stats}",
											"add1"
										],
										[
											"SSfol\t{stats}",
											"SSfol"
										],
										[
											"SSasymp\t{stats}",
											"SSasymp"
										],
										[
											"ts.plot\t{stats}",
											"ts.plot"
										],
										[
											"Gamma\t{stats}",
											"Gamma"
										],
										[
											"plot.stepfun\t{stats}",
											"plot.stepfun"
										],
										[
											"termplot\t{stats}",
											"termplot"
										],
										[
											"bartlett.test\t{stats}",
											"bartlett.test"
										],
										[
											"oneway.test\t{stats}",
											"oneway.test"
										],
										[
											"step\t{stats}",
											"step"
										],
										[
											"qlogis\t{stats}",
											"qlogis"
										],
										[
											"df.kernel\t{stats}",
											"df.kernel"
										],
										[
											"quasi\t{stats}",
											"quasi"
										],
										[
											"coef\t{stats}",
											"coef"
										],
										[
											"promax\t{stats}",
											"promax"
										],
										[
											"factor.scope\t{stats}",
											"factor.scope"
										],
										[
											"poisson\t{stats}",
											"poisson"
										],
										[
											"embed\t{stats}",
											"embed"
										],
										[
											"dcauchy\t{stats}",
											"dcauchy"
										],
										[
											"na.action\t{stats}",
											"na.action"
										],
										[
											"rect.hclust\t{stats}",
											"rect.hclust"
										],
										[
											"SSfpl\t{stats}",
											"SSfpl"
										],
										[
											"bw.bcv\t{stats}",
											"bw.bcv"
										],
										[
											"as.hclust\t{stats}",
											"as.hclust"
										],
										[
											"varimax\t{stats}",
											"varimax"
										],
										[
											"model.offset\t{stats}",
											"model.offset"
										],
										[
											"df.residual\t{stats}",
											"df.residual"
										],
										[
											"nextn\t{stats}",
											"nextn"
										],
										[
											"hclust\t{stats}",
											"hclust"
										],
										[
											"smooth.spline\t{stats}",
											"smooth.spline"
										],
										[
											"qtukey\t{stats}",
											"qtukey"
										],
										[
											"bw.nrd0\t{stats}",
											"bw.nrd0"
										],
										[
											"ppr\t{stats}",
											"ppr"
										],
										[
											"pacf\t{stats}",
											"pacf"
										],
										[
											"power.prop.test\t{stats}",
											"power.prop.test"
										],
										[
											"pwilcox\t{stats}",
											"pwilcox"
										],
										[
											"bw.nrd\t{stats}",
											"bw.nrd"
										],
										[
											"rsignrank\t{stats}",
											"rsignrank"
										],
										[
											"quantile\t{stats}",
											"quantile"
										],
										[
											"stl\t{stats}",
											"stl"
										],
										[
											"AIC\t{stats}",
											"AIC"
										],
										[
											"end\t{stats}",
											"end"
										],
										[
											"sortedXyData\t{stats}",
											"sortedXyData"
										],
										[
											"lowess\t{stats}",
											"lowess"
										],
										[
											"lm.wfit\t{stats}",
											"lm.wfit"
										],
										[
											"pf\t{stats}",
											"pf"
										],
										[
											"princomp\t{stats}",
											"princomp"
										],
										[
											"terms\t{stats}",
											"terms"
										],
										[
											"lm.influence\t{stats}",
											"lm.influence"
										],
										[
											"model.frame\t{stats}",
											"model.frame"
										],
										[
											"qwilcox\t{stats}",
											"qwilcox"
										],
										[
											"stat.anova\t{stats}",
											"stat.anova"
										],
										[
											"qchisq\t{stats}",
											"qchisq"
										],
										[
											"update.default\t{stats}",
											"update.default"
										],
										[
											"model.response\t{stats}",
											"model.response"
										],
										[
											"drop.scope\t{stats}",
											"drop.scope"
										],
										[
											"residuals\t{stats}",
											"residuals"
										],
										[
											"median\t{stats}",
											"median"
										],
										[
											"cycle\t{stats}",
											"cycle"
										],
										[
											"constrOptim\t{stats}",
											"constrOptim"
										],
										[
											"pt\t{stats}",
											"pt"
										],
										[
											"deriv3\t{stats}",
											"deriv3"
										],
										[
											"variable.names\t{stats}",
											"variable.names"
										],
										[
											"qf\t{stats}",
											"qf"
										],
										[
											"summary.aov\t{stats}",
											"summary.aov"
										],
										[
											"update\t{stats}",
											"update"
										],
										[
											"rwilcox\t{stats}",
											"rwilcox"
										],
										[
											"pairwise.table\t{stats}",
											"pairwise.table"
										],
										[
											"model.matrix.lm\t{stats}",
											"model.matrix.lm"
										],
										[
											"expand.model.frame\t{stats}",
											"expand.model.frame"
										],
										[
											"acf\t{stats}",
											"acf"
										],
										[
											"proj\t{stats}",
											"proj"
										],
										[
											"bw.SJ\t{stats}",
											"bw.SJ"
										],
										[
											"numericDeriv\t{stats}",
											"numericDeriv"
										],
										[
											"uniroot\t{stats}",
											"uniroot"
										],
										[
											"ARMAtoMA\t{stats}",
											"ARMAtoMA"
										],
										[
											"ksmooth\t{stats}",
											"ksmooth"
										],
										[
											"qt\t{stats}",
											"qt"
										],
										[
											"dffits\t{stats}",
											"dffits"
										],
										[
											".checkMFClasses\t{stats}",
											".checkMFClasses"
										],
										[
											"rstudent\t{stats}",
											"rstudent"
										],
										[
											"rf\t{stats}",
											"rf"
										],
										[
											"plclust\t{stats}",
											"plclust"
										],
										[
											"manova\t{stats}",
											"manova"
										],
										[
											"dwilcox\t{stats}",
											"dwilcox"
										],
										[
											"kernapply\t{stats}",
											"kernapply"
										],
										[
											".MFclass\t{stats}",
											".MFclass"
										],
										[
											"cutree\t{stats}",
											"cutree"
										],
										[
											"spec.ar\t{stats}",
											"spec.ar"
										],
										[
											"cmdscale\t{stats}",
											"cmdscale"
										],
										[
											"poly\t{stats}",
											"poly"
										],
										[
											"dweibull\t{stats}",
											"dweibull"
										],
										[
											"optimise\t{stats}",
											"optimise"
										],
										[
											"formula\t{stats}",
											"formula"
										],
										[
											"sd\t{stats}",
											"sd"
										],
										[
											"rt\t{stats}",
											"rt"
										],
										[
											"loglin\t{stats}",
											"loglin"
										],
										[
											"qbinom\t{stats}",
											"qbinom"
										],
										[
											"median.default\t{stats}",
											"median.default"
										],
										[
											"gaussian\t{stats}",
											"gaussian"
										],
										[
											"model.matrix\t{stats}",
											"model.matrix"
										],
										[
											"fitted.values\t{stats}",
											"fitted.values"
										],
										[
											"var\t{stats}",
											"var"
										],
										[
											"binomial\t{stats}",
											"binomial"
										],
										[
											"arima.sim\t{stats}",
											"arima.sim"
										],
										[
											"logLik\t{stats}",
											"logLik"
										],
										[
											"selfStart\t{stats}",
											"selfStart"
										],
										[
											"reformulate\t{stats}",
											"reformulate"
										],
										[
											"naresid\t{stats}",
											"naresid"
										],
										[
											"StructTS\t{stats}",
											"StructTS"
										],
										[
											"interaction.plot\t{stats}",
											"interaction.plot"
										],
										[
											"SSlogis\t{stats}",
											"SSlogis"
										],
										[
											"terms.formula\t{stats}",
											"terms.formula"
										],
										[
											"supsmu\t{stats}",
											"supsmu"
										],
										[
											"dgamma\t{stats}",
											"dgamma"
										],
										[
											"weighted.residuals\t{stats}",
											"weighted.residuals"
										],
										[
											"smooth\t{stats}",
											"smooth"
										],
										[
											"kernel\t{stats}",
											"kernel"
										],
										[
											"confint\t{stats}",
											"confint"
										],
										[
											"mvfft\t{stats}",
											"mvfft"
										],
										[
											"kruskal.test\t{stats}",
											"kruskal.test"
										],
										[
											"spec.pgram\t{stats}",
											"spec.pgram"
										],
										[
											"glm\t{stats}",
											"glm"
										],
										[
											"ls.diag\t{stats}",
											"ls.diag"
										],
										[
											"pairwise.wilcox.test\t{stats}",
											"pairwise.wilcox.test"
										],
										[
											"NLSstRtAsymptote\t{stats}",
											"NLSstRtAsymptote"
										],
										[
											"pgamma\t{stats}",
											"pgamma"
										],
										[
											"rpois\t{stats}",
											"rpois"
										],
										[
											"arima\t{stats}",
											"arima"
										],
										[
											"rgamma\t{stats}",
											"rgamma"
										],
										[
											"t.test\t{stats}",
											"t.test"
										],
										[
											"biplot\t{stats}",
											"biplot"
										],
										[
											"xtabs\t{stats}",
											"xtabs"
										],
										[
											"ts\t{stats}",
											"ts"
										],
										[
											"SSasympOff\t{stats}",
											"SSasympOff"
										],
										[
											"is.empty.model\t{stats}",
											"is.empty.model"
										],
										[
											"summary.lm\t{stats}",
											"summary.lm"
										],
										[
											"dummy.coef.lm\t{stats}",
											"dummy.coef.lm"
										],
										[
											"binom.test\t{stats}",
											"binom.test"
										],
										[
											"sigma\t{stats}",
											"sigma"
										],
										[
											"prop.test\t{stats}",
											"prop.test"
										],
										[
											"na.pass\t{stats}",
											"na.pass"
										],
										[
											"make.link\t{stats}",
											"make.link"
										],
										[
											"summary.stepfun\t{stats}",
											"summary.stepfun"
										],
										[
											"reshape\t{stats}",
											"reshape"
										],
										[
											"ftable\t{stats}",
											"ftable"
										],
										[
											"density.default\t{stats}",
											"density.default"
										],
										[
											"dfbetas\t{stats}",
											"dfbetas"
										],
										[
											"contrasts\t{stats}",
											"contrasts"
										],
										[
											"psignrank\t{stats}",
											"psignrank"
										],
										[
											"polym\t{stats}",
											"polym"
										],
										[
											"model.frame.default\t{stats}",
											"model.frame.default"
										],
										[
											"rgeom\t{stats}",
											"rgeom"
										],
										[
											"contr.treatment\t{stats}",
											"contr.treatment"
										],
										[
											"qlnorm\t{stats}",
											"qlnorm"
										],
										[
											"lm.fit\t{stats}",
											"lm.fit"
										],
										[
											"arima0\t{stats}",
											"arima0"
										],
										[
											"offset\t{stats}",
											"offset"
										],
										[
											"power.anova.test\t{stats}",
											"power.anova.test"
										],
										[
											"loess\t{stats}",
											"loess"
										],
										[
											"pairwise.prop.test\t{stats}",
											"pairwise.prop.test"
										],
										[
											"kmeans\t{stats}",
											"kmeans"
										],
										[
											"aggregate.ts\t{stats}",
											"aggregate.ts"
										],
										[
											"relevel\t{stats}",
											"relevel"
										],
										[
											"spectrum\t{stats}",
											"spectrum"
										],
										[
											"model.weights\t{stats}",
											"model.weights"
										],
										[
											"rexp\t{stats}",
											"rexp"
										],
										[
											".lm.fit\t{stats}",
											".lm.fit"
										],
										[
											"printCoefmat\t{stats}",
											"printCoefmat"
										],
										[
											"PP.test\t{stats}",
											"PP.test"
										],
										[
											"cov.wt\t{stats}",
											"cov.wt"
										],
										[
											"residuals.lm\t{stats}",
											"residuals.lm"
										],
										[
											"replications\t{stats}",
											"replications"
										],
										[
											"fisher.test\t{stats}",
											"fisher.test"
										],
										[
											"qexp\t{stats}",
											"qexp"
										],
										[
											"screeplot\t{stats}",
											"screeplot"
										],
										[
											"contr.helmert\t{stats}",
											"contr.helmert"
										],
										[
											"deltat\t{stats}",
											"deltat"
										],
										[
											"medpolish\t{stats}",
											"medpolish"
										],
										[
											"pexp\t{stats}",
											"pexp"
										],
										[
											"rWishart\t{stats}",
											"rWishart"
										],
										[
											"ccf\t{stats}",
											"ccf"
										],
										[
											"time\t{stats}",
											"time"
										],
										[
											"anova\t{stats}",
											"anova"
										],
										[
											"IQR\t{stats}",
											"IQR"
										],
										[
											"KalmanLike\t{stats}",
											"KalmanLike"
										],
										[
											"optimHess\t{stats}",
											"optimHess"
										],
										[
											"pweibull\t{stats}",
											"pweibull"
										],
										[
											"p.adjust.methods\t{stats}",
											"p.adjust.methods"
										],
										[
											"read.ftable\t{stats}",
											"read.ftable"
										],
										[
											"cancor\t{stats}",
											"cancor"
										],
										[
											"fft\t{stats}",
											"fft"
										],
										[
											"qpois\t{stats}",
											"qpois"
										],
										[
											"tsdiag\t{stats}",
											"tsdiag"
										],
										[
											"power\t{stats}",
											"power"
										],
										[
											"getInitial\t{stats}",
											"getInitial"
										],
										[
											"SSgompertz\t{stats}",
											"SSgompertz"
										],
										[
											"bandwidth.kernel\t{stats}",
											"bandwidth.kernel"
										],
										[
											"quade.test\t{stats}",
											"quade.test"
										],
										[
											"mauchly.test\t{stats}",
											"mauchly.test"
										],
										[
											"approx\t{stats}",
											"approx"
										],
										[
											".preformat.ts\t{stats}",
											".preformat.ts"
										],
										[
											"deriv\t{stats}",
											"deriv"
										],
										[
											"spec.taper\t{stats}",
											"spec.taper"
										],
										[
											"ecdf\t{stats}",
											"ecdf"
										],
										[
											"dhyper\t{stats}",
											"dhyper"
										],
										[
											"dpois\t{stats}",
											"dpois"
										],
										[
											"setNames\t{stats}",
											"setNames"
										],
										[
											"dlogis\t{stats}",
											"dlogis"
										],
										[
											"str_length\t{stringr}",
											"str_length"
										],
										[
											"invert_match\t{stringr}",
											"invert_match"
										],
										[
											"str_to_upper\t{stringr}",
											"str_to_upper"
										],
										[
											"word\t{stringr}",
											"word"
										],
										[
											"str_extract_all\t{stringr}",
											"str_extract_all"
										],
										[
											"str_count\t{stringr}",
											"str_count"
										],
										[
											"str_detect\t{stringr}",
											"str_detect"
										],
										[
											"str_to_title\t{stringr}",
											"str_to_title"
										],
										[
											"str_wrap\t{stringr}",
											"str_wrap"
										],
										[
											"str_which\t{stringr}",
											"str_which"
										],
										[
											"str_interp\t{stringr}",
											"str_interp"
										],
										[
											"str_dup\t{stringr}",
											"str_dup"
										],
										[
											"str_replace_na\t{stringr}",
											"str_replace_na"
										],
										[
											"str_trunc\t{stringr}",
											"str_trunc"
										],
										[
											"str_c\t{stringr}",
											"str_c"
										],
										[
											"str_split_fixed\t{stringr}",
											"str_split_fixed"
										],
										[
											"str_pad\t{stringr}",
											"str_pad"
										],
										[
											"str_split\t{stringr}",
											"str_split"
										],
										[
											"perl\t{stringr}",
											"perl"
										],
										[
											"str_replace\t{stringr}",
											"str_replace"
										],
										[
											"ignore.case\t{stringr}",
											"ignore.case"
										],
										[
											"str_join\t{stringr}",
											"str_join"
										],
										[
											"str_view\t{stringr}",
											"str_view"
										],
										[
											"regex\t{stringr}",
											"regex"
										],
										[
											"boundary\t{stringr}",
											"boundary"
										],
										[
											"str_view_all\t{stringr}",
											"str_view_all"
										],
										[
											"str_sort\t{stringr}",
											"str_sort"
										],
										[
											"fixed\t{stringr}",
											"fixed"
										],
										[
											"str_locate_all\t{stringr}",
											"str_locate_all"
										],
										[
											"str_extract\t{stringr}",
											"str_extract"
										],
										[
											"str_trim\t{stringr}",
											"str_trim"
										],
										[
											"str_locate\t{stringr}",
											"str_locate"
										],
										[
											"str_match\t{stringr}",
											"str_match"
										],
										[
											"str_to_lower\t{stringr}",
											"str_to_lower"
										],
										[
											"str_order\t{stringr}",
											"str_order"
										],
										[
											"str_sub\t{stringr}",
											"str_sub"
										],
										[
											"str_subset\t{stringr}",
											"str_subset"
										],
										[
											"str_match_all\t{stringr}",
											"str_match_all"
										],
										[
											"str_replace_all\t{stringr}",
											"str_replace_all"
										],
										[
											"coll\t{stringr}",
											"coll"
										],
										[
											"str_conv\t{stringr}",
											"str_conv"
										],
										[
											"extends\t{methods}",
											"extends"
										],
										[
											"makeMethodsList\t{methods}",
											"makeMethodsList"
										],
										[
											"assignMethodsMetaData\t{methods}",
											"assignMethodsMetaData"
										],
										[
											"Summary\t{methods}",
											"Summary"
										],
										[
											"setReplaceMethod\t{methods}",
											"setReplaceMethod"
										],
										[
											".__C__EmptyMethodsList\t{methods}",
											".__C__EmptyMethodsList"
										],
										[
											"methodSignatureMatrix\t{methods}",
											"methodSignatureMatrix"
										],
										[
											"el\t{methods}",
											"el"
										],
										[
											".__C__lm\t{methods}",
											".__C__lm"
										],
										[
											"completeClassDefinition\t{methods}",
											"completeClassDefinition"
										],
										[
											"newEmptyObject\t{methods}",
											"newEmptyObject"
										],
										[
											"isGrammarSymbol\t{methods}",
											"isGrammarSymbol"
										],
										[
											"findFunction\t{methods}",
											"findFunction"
										],
										[
											"hasMethods\t{methods}",
											"hasMethods"
										],
										[
											".__C__ObjectsWithPackage\t{methods}",
											".__C__ObjectsWithPackage"
										],
										[
											"sigToEnv\t{methods}",
											"sigToEnv"
										],
										[
											".__C__namedList\t{methods}",
											".__C__namedList"
										],
										[
											"SignatureMethod\t{methods}",
											"SignatureMethod"
										],
										[
											"allGenerics\t{methods}",
											"allGenerics"
										],
										[
											"method.skeleton\t{methods}",
											"method.skeleton"
										],
										[
											".hasSlot\t{methods}",
											".hasSlot"
										],
										[
											".__C__PossibleMethod\t{methods}",
											".__C__PossibleMethod"
										],
										[
											"selectMethod\t{methods}",
											"selectMethod"
										],
										[
											"metaNameUndo\t{methods}",
											"metaNameUndo"
										],
										[
											".__C__matrix\t{methods}",
											".__C__matrix"
										],
										[
											".__C__refObject\t{methods}",
											".__C__refObject"
										],
										[
											".__C__nonstandardGroupGenericFunction\t{methods}",
											".__C__nonstandardGroupGenericFunction"
										],
										[
											".__C__refMethodDefWithTrace\t{methods}",
											".__C__refMethodDefWithTrace"
										],
										[
											".__C__classGeneratorFunction\t{methods}",
											".__C__classGeneratorFunction"
										],
										[
											"findMethod\t{methods}",
											"findMethod"
										],
										[
											"showMethods\t{methods}",
											"showMethods"
										],
										[
											"possibleExtends\t{methods}",
											"possibleExtends"
										],
										[
											"findUnique\t{methods}",
											"findUnique"
										],
										[
											"initialize\t{methods}",
											"initialize"
										],
										[
											"formalArgs\t{methods}",
											"formalArgs"
										],
										[
											".__C__NULL\t{methods}",
											".__C__NULL"
										],
										[
											".__C__glm.null\t{methods}",
											".__C__glm.null"
										],
										[
											"initRefFields\t{methods}",
											"initRefFields"
										],
										[
											"className\t{methods}",
											"className"
										],
										[
											"S3Class\t{methods}",
											"S3Class"
										],
										[
											"setGenericImplicit\t{methods}",
											"setGenericImplicit"
										],
										[
											"makeClassRepresentation\t{methods}",
											"makeClassRepresentation"
										],
										[
											"hasMethod\t{methods}",
											"hasMethod"
										],
										[
											"MethodAddCoerce\t{methods}",
											"MethodAddCoerce"
										],
										[
											"getGeneric\t{methods}",
											"getGeneric"
										],
										[
											".__C__list\t{methods}",
											".__C__list"
										],
										[
											"evalqOnLoad\t{methods}",
											"evalqOnLoad"
										],
										[
											"resetGeneric\t{methods}",
											"resetGeneric"
										],
										[
											"makePrototypeFromClassDef\t{methods}",
											"makePrototypeFromClassDef"
										],
										[
											".__C__functionWithTrace\t{methods}",
											".__C__functionWithTrace"
										],
										[
											".__C__MethodDefinitionWithTrace\t{methods}",
											".__C__MethodDefinitionWithTrace"
										],
										[
											"slotNames\t{methods}",
											"slotNames"
										],
										[
											"setLoadActions\t{methods}",
											"setLoadActions"
										],
										[
											".__C__OptionalFunction\t{methods}",
											".__C__OptionalFunction"
										],
										[
											".__C__derivedDefaultMethod\t{methods}",
											".__C__derivedDefaultMethod"
										],
										[
											"checkAtAssignment\t{methods}",
											"checkAtAssignment"
										],
										[
											".__C__traceable\t{methods}",
											".__C__traceable"
										],
										[
											"setOldClass\t{methods}",
											"setOldClass"
										],
										[
											"substituteDirect\t{methods}",
											"substituteDirect"
										],
										[
											"requireMethods\t{methods}",
											"requireMethods"
										],
										[
											"Complex\t{methods}",
											"Complex"
										],
										[
											"setIs\t{methods}",
											"setIs"
										],
										[
											"methodsPackageMetaName\t{methods}",
											"methodsPackageMetaName"
										],
										[
											"linearizeMlist\t{methods}",
											"linearizeMlist"
										],
										[
											"isSealedClass\t{methods}",
											"isSealedClass"
										],
										[
											"kronecker\t{methods}",
											"kronecker"
										],
										[
											"cbind2\t{methods}",
											"cbind2"
										],
										[
											".__C__builtin\t{methods}",
											".__C__builtin"
										],
										[
											".__C__ClassUnionRepresentation\t{methods}",
											".__C__ClassUnionRepresentation"
										],
										[
											"isGeneric\t{methods}",
											"isGeneric"
										],
										[
											".__C__refClassRepresentation\t{methods}",
											".__C__refClassRepresentation"
										],
										[
											"canCoerce\t{methods}",
											"canCoerce"
										],
										[
											"newBasic\t{methods}",
											"newBasic"
										],
										[
											".__C__.environment\t{methods}",
											".__C__.environment"
										],
										[
											".__C__refClass\t{methods}",
											".__C__refClass"
										],
										[
											"completeSubclasses\t{methods}",
											"completeSubclasses"
										],
										[
											".__C__table\t{methods}",
											".__C__table"
										],
										[
											"getLoadActions\t{methods}",
											"getLoadActions"
										],
										[
											"getClassDef\t{methods}",
											"getClassDef"
										],
										[
											"findClass\t{methods}",
											"findClass"
										],
										[
											".__C__language\t{methods}",
											".__C__language"
										],
										[
											".__C__anova.glm.null\t{methods}",
											".__C__anova.glm.null"
										],
										[
											"registerImplicitGenerics\t{methods}",
											"registerImplicitGenerics"
										],
										[
											"isClassDef\t{methods}",
											"isClassDef"
										],
										[
											"getPrototype\t{methods}",
											"getPrototype"
										],
										[
											"setValidity\t{methods}",
											"setValidity"
										],
										[
											"setPrimitiveMethods\t{methods}",
											"setPrimitiveMethods"
										],
										[
											"is\t{methods}",
											"is"
										],
										[
											"Logic\t{methods}",
											"Logic"
										],
										[
											".S4methods\t{methods}",
											".S4methods"
										],
										[
											".__C__socket\t{methods}",
											".__C__socket"
										],
										[
											"cacheMethod\t{methods}",
											"cacheMethod"
										],
										[
											"asMethodDefinition\t{methods}",
											"asMethodDefinition"
										],
										[
											".__C__special\t{methods}",
											".__C__special"
										],
										[
											"representation\t{methods}",
											"representation"
										],
										[
											".__C__SealedMethodDefinition\t{methods}",
											".__C__SealedMethodDefinition"
										],
										[
											"isSealedMethod\t{methods}",
											"isSealedMethod"
										],
										[
											".__C__raw\t{methods}",
											".__C__raw"
										],
										[
											"S3Part\t{methods}",
											"S3Part"
										],
										[
											".__C__environment\t{methods}",
											".__C__environment"
										],
										[
											".__C__integer\t{methods}",
											".__C__integer"
										],
										[
											"listFromMlist\t{methods}",
											"listFromMlist"
										],
										[
											".__C__mts\t{methods}",
											".__C__mts"
										],
										[
											".doTracePrint\t{methods}",
											".doTracePrint"
										],
										[
											".OldClassesList\t{methods}",
											".OldClassesList"
										],
										[
											".__C__standardGeneric\t{methods}",
											".__C__standardGeneric"
										],
										[
											".__C__MethodsList\t{methods}",
											".__C__MethodsList"
										],
										[
											"promptMethods\t{methods}",
											"promptMethods"
										],
										[
											"setPackageName\t{methods}",
											"setPackageName"
										],
										[
											".__C__groupGenericFunction\t{methods}",
											".__C__groupGenericFunction"
										],
										[
											"tryNew\t{methods}",
											"tryNew"
										],
										[
											"getSubclasses\t{methods}",
											"getSubclasses"
										],
										[
											".classEnv\t{methods}",
											".classEnv"
										],
										[
											"Arith\t{methods}",
											"Arith"
										],
										[
											".__C__LinearMethodsList\t{methods}",
											".__C__LinearMethodsList"
										],
										[
											".__C__formula\t{methods}",
											".__C__formula"
										],
										[
											"assignClassDef\t{methods}",
											"assignClassDef"
										],
										[
											".__C__ordered\t{methods}",
											".__C__ordered"
										],
										[
											"seemsS4Object\t{methods}",
											"seemsS4Object"
										],
										[
											"setMethod\t{methods}",
											"setMethod"
										],
										[
											".__C__SClassExtension\t{methods}",
											".__C__SClassExtension"
										],
										[
											".__C__expression\t{methods}",
											".__C__expression"
										],
										[
											".__C__classRepresentation\t{methods}",
											".__C__classRepresentation"
										],
										[
											"setRefClass\t{methods}",
											"setRefClass"
										],
										[
											".__C__numeric\t{methods}",
											".__C__numeric"
										],
										[
											"evalSource\t{methods}",
											"evalSource"
										],
										[
											"rbind2\t{methods}",
											"rbind2"
										],
										[
											"balanceMethodsList\t{methods}",
											"balanceMethodsList"
										],
										[
											".__C__VIRTUAL\t{methods}",
											".__C__VIRTUAL"
										],
										[
											"conformMethod\t{methods}",
											"conformMethod"
										],
										[
											"getClassPackage\t{methods}",
											"getClassPackage"
										],
										[
											"getClass\t{methods}",
											"getClass"
										],
										[
											".__C__complex\t{methods}",
											".__C__complex"
										],
										[
											"getMethod\t{methods}",
											"getMethod"
										],
										[
											"getGenerics\t{methods}",
											"getGenerics"
										],
										[
											"finalDefaultMethod\t{methods}",
											"finalDefaultMethod"
										],
										[
											"showClass\t{methods}",
											"showClass"
										],
										[
											".__C__name\t{methods}",
											".__C__name"
										],
										[
											".__C__nonstandardGeneric\t{methods}",
											".__C__nonstandardGeneric"
										],
										[
											".__C__POSIXct\t{methods}",
											".__C__POSIXct"
										],
										[
											".__C__factor\t{methods}",
											".__C__factor"
										],
										[
											".__C__libraryIQR\t{methods}",
											".__C__libraryIQR"
										],
										[
											"empty.dump\t{methods}",
											"empty.dump"
										],
										[
											"validSlotNames\t{methods}",
											"validSlotNames"
										],
										[
											"new\t{methods}",
											"new"
										],
										[
											".__C__listOfMethods\t{methods}",
											".__C__listOfMethods"
										],
										[
											"existsFunction\t{methods}",
											"existsFunction"
										],
										[
											".__C__.externalptr\t{methods}",
											".__C__.externalptr"
										],
										[
											".__C__classPrototypeDef\t{methods}",
											".__C__classPrototypeDef"
										],
										[
											"getClasses\t{methods}",
											"getClasses"
										],
										[
											"isVirtualClass\t{methods}",
											"isVirtualClass"
										],
										[
											"elNamed\t{methods}",
											"elNamed"
										],
										[
											"getDataPart\t{methods}",
											"getDataPart"
										],
										[
											".__C__mtable\t{methods}",
											".__C__mtable"
										],
										[
											".__C__anova\t{methods}",
											".__C__anova"
										],
										[
											"sealClass\t{methods}",
											"sealClass"
										],
										[
											".selectSuperClasses\t{methods}",
											".selectSuperClasses"
										],
										[
											"getMethodsMetaData\t{methods}",
											"getMethodsMetaData"
										],
										[
											".__C__maov\t{methods}",
											".__C__maov"
										],
										[
											"isClassUnion\t{methods}",
											"isClassUnion"
										],
										[
											"getClassName\t{methods}",
											"getClassName"
										],
										[
											"matchSignature\t{methods}",
											"matchSignature"
										],
										[
											".EmptyPrimitiveSkeletons\t{methods}",
											".EmptyPrimitiveSkeletons"
										],
										[
											"signature\t{methods}",
											"signature"
										],
										[
											"loadMethod\t{methods}",
											"loadMethod"
										],
										[
											".__C__packageInfo\t{methods}",
											".__C__packageInfo"
										],
										[
											"evalOnLoad\t{methods}",
											"evalOnLoad"
										],
										[
											".__C__MethodWithNextWithTrace\t{methods}",
											".__C__MethodWithNextWithTrace"
										],
										[
											".__C__dump.frames\t{methods}",
											".__C__dump.frames"
										],
										[
											"fixPre1.8\t{methods}",
											"fixPre1.8"
										],
										[
											"getMethodsForDispatch\t{methods}",
											"getMethodsForDispatch"
										],
										[
											"setLoadAction\t{methods}",
											"setLoadAction"
										],
										[
											".TraceWithMethods\t{methods}",
											".TraceWithMethods"
										],
										[
											"missingArg\t{methods}",
											"missingArg"
										],
										[
											"externalRefMethod\t{methods}",
											"externalRefMethod"
										],
										[
											".__C__function\t{methods}",
											".__C__function"
										],
										[
											".__C__envRefClass\t{methods}",
											".__C__envRefClass"
										],
										[
											"defaultPrototype\t{methods}",
											"defaultPrototype"
										],
										[
											".__C__glm\t{methods}",
											".__C__glm"
										],
										[
											"insertSource\t{methods}",
											"insertSource"
										],
										[
											"dumpMethod\t{methods}",
											"dumpMethod"
										],
										[
											".__C__if\t{methods}",
											".__C__if"
										],
										[
											".__C__oldClass\t{methods}",
											".__C__oldClass"
										],
										[
											"coerce\t{methods}",
											"coerce"
										],
										[
											"hasArg\t{methods}",
											"hasArg"
										],
										[
											".__C__refGeneratorSlot\t{methods}",
											".__C__refGeneratorSlot"
										],
										[
											"testInheritedMethods\t{methods}",
											"testInheritedMethods"
										],
										[
											"insertClassMethods\t{methods}",
											"insertClassMethods"
										],
										[
											".__C__call\t{methods}",
											".__C__call"
										],
										[
											".__C__data.frame\t{methods}",
											".__C__data.frame"
										],
										[
											"Math\t{methods}",
											"Math"
										],
										[
											".__C__for\t{methods}",
											".__C__for"
										],
										[
											"removeMethods\t{methods}",
											"removeMethods"
										],
										[
											".__C__array\t{methods}",
											".__C__array"
										],
										[
											"getPackageName\t{methods}",
											"getPackageName"
										],
										[
											".__C__MethodDefinition\t{methods}",
											".__C__MethodDefinition"
										],
										[
											".__C__nonstandardGenericWithTrace\t{methods}",
											".__C__nonstandardGenericWithTrace"
										],
										[
											"rematchDefinition\t{methods}",
											"rematchDefinition"
										],
										[
											"insertMethod\t{methods}",
											"insertMethod"
										],
										[
											"findMethods\t{methods}",
											"findMethods"
										],
										[
											"mergeMethods\t{methods}",
											"mergeMethods"
										],
										[
											".__C__POSIXt\t{methods}",
											".__C__POSIXt"
										],
										[
											"unRematchDefinition\t{methods}",
											"unRematchDefinition"
										],
										[
											".__C__refObjectGenerator\t{methods}",
											".__C__refObjectGenerator"
										],
										[
											".__C__Date\t{methods}",
											".__C__Date"
										],
										[
											".__C__missing\t{methods}",
											".__C__missing"
										],
										[
											"callGeneric\t{methods}",
											"callGeneric"
										],
										[
											".__C__externalptr\t{methods}",
											".__C__externalptr"
										],
										[
											".__C__derivedDefaultMethodWithTrace\t{methods}",
											".__C__derivedDefaultMethodWithTrace"
										],
										[
											".__C__ANY\t{methods}",
											".__C__ANY"
										],
										[
											"mlistMetaName\t{methods}",
											"mlistMetaName"
										],
										[
											"existsMethod\t{methods}",
											"existsMethod"
										],
										[
											"showExtends\t{methods}",
											"showExtends"
										],
										[
											"showMlist\t{methods}",
											"showMlist"
										],
										[
											"MethodsList\t{methods}",
											"MethodsList"
										],
										[
											"getVirtual\t{methods}",
											"getVirtual"
										],
										[
											"makeStandardGeneric\t{methods}",
											"makeStandardGeneric"
										],
										[
											".__C__className\t{methods}",
											".__C__className"
										],
										[
											".__C__character\t{methods}",
											".__C__character"
										],
										[
											"initFieldArgs\t{methods}",
											"initFieldArgs"
										],
										[
											".__C__genericFunction\t{methods}",
											".__C__genericFunction"
										],
										[
											".__C__signature\t{methods}",
											".__C__signature"
										],
										[
											".__C__uninitializedField\t{methods}",
											".__C__uninitializedField"
										],
										[
											".untracedFunction\t{methods}",
											".untracedFunction"
										],
										[
											".__C__while\t{methods}",
											".__C__while"
										],
										[
											"validObject\t{methods}",
											"validObject"
										],
										[
											"resetClass\t{methods}",
											"resetClass"
										],
										[
											".__C__hsearch\t{methods}",
											".__C__hsearch"
										],
										[
											"isGroup\t{methods}",
											"isGroup"
										],
										[
											"substituteFunctionArgs\t{methods}",
											"substituteFunctionArgs"
										],
										[
											"multipleClasses\t{methods}",
											"multipleClasses"
										],
										[
											"cacheGenericsMetaData\t{methods}",
											"cacheGenericsMetaData"
										],
										[
											"dumpMethods\t{methods}",
											"dumpMethods"
										],
										[
											".__C__conditionalExtension\t{methods}",
											".__C__conditionalExtension"
										],
										[
											"prototype\t{methods}",
											"prototype"
										],
										[
											"packageSlot\t{methods}",
											"packageSlot"
										],
										[
											"setGeneric\t{methods}",
											"setGeneric"
										],
										[
											"testVirtual\t{methods}",
											"testVirtual"
										],
										[
											"prohibitGeneric\t{methods}",
											"prohibitGeneric"
										],
										[
											".__C__groupGenericFunctionWithTrace\t{methods}",
											".__C__groupGenericFunctionWithTrace"
										],
										[
											"selectSuperClasses\t{methods}",
											"selectSuperClasses"
										],
										[
											"slot\t{methods}",
											"slot"
										],
										[
											"doPrimitiveMethod\t{methods}",
											"doPrimitiveMethod"
										],
										[
											".__C__summaryDefault\t{methods}",
											".__C__summaryDefault"
										],
										[
											".__C__recordedplot\t{methods}",
											".__C__recordedplot"
										],
										[
											".ShortPrimitiveSkeletons\t{methods}",
											".ShortPrimitiveSkeletons"
										],
										[
											"show\t{methods}",
											"show"
										],
										[
											".__C__nonstandardGenericFunction\t{methods}",
											".__C__nonstandardGenericFunction"
										],
										[
											"cacheMetaData\t{methods}",
											"cacheMetaData"
										],
										[
											".__C__repeat\t{methods}",
											".__C__repeat"
										],
										[
											"Ops\t{methods}",
											"Ops"
										],
										[
											"superClassDepth\t{methods}",
											"superClassDepth"
										],
										[
											".__C__vector\t{methods}",
											".__C__vector"
										],
										[
											".__C__POSIXlt\t{methods}",
											".__C__POSIXlt"
										],
										[
											"makeExtends\t{methods}",
											"makeExtends"
										],
										[
											"getValidity\t{methods}",
											"getValidity"
										],
										[
											"functionBody\t{methods}",
											"functionBody"
										],
										[
											"completeExtends\t{methods}",
											"completeExtends"
										],
										[
											".__C__integrate\t{methods}",
											".__C__integrate"
										],
										[
											".__C__structure\t{methods}",
											".__C__structure"
										],
										[
											"slotsFromS3\t{methods}",
											"slotsFromS3"
										],
										[
											".__C__genericFunctionWithTrace\t{methods}",
											".__C__genericFunctionWithTrace"
										],
										[
											".__C__rle\t{methods}",
											".__C__rle"
										],
										[
											".__C__activeBindingFunction\t{methods}",
											".__C__activeBindingFunction"
										],
										[
											"Math2\t{methods}",
											"Math2"
										],
										[
											".__C__SuperClassMethod\t{methods}",
											".__C__SuperClassMethod"
										],
										[
											"promptClass\t{methods}",
											"promptClass"
										],
										[
											"Quote\t{methods}",
											"Quote"
										],
										[
											".__C__internalDispatchMethod\t{methods}",
											".__C__internalDispatchMethod"
										],
										[
											"getAllMethods\t{methods}",
											"getAllMethods"
										],
										[
											"setClassUnion\t{methods}",
											"setClassUnion"
										],
										[
											"removeMethod\t{methods}",
											"removeMethod"
										],
										[
											"newClassRepresentation\t{methods}",
											"newClassRepresentation"
										],
										[
											".__C__localRefClass\t{methods}",
											".__C__localRefClass"
										],
										[
											".__C__refMethodDef\t{methods}",
											".__C__refMethodDef"
										],
										[
											"generic.skeleton\t{methods}",
											"generic.skeleton"
										],
										[
											".__C__.name\t{methods}",
											".__C__.name"
										],
										[
											"hasLoadAction\t{methods}",
											"hasLoadAction"
										],
										[
											"setAs\t{methods}",
											"setAs"
										],
										[
											".__C__aov\t{methods}",
											".__C__aov"
										],
										[
											"listFromMethods\t{methods}",
											"listFromMethods"
										],
										[
											".__C__data.frameRowLabels\t{methods}",
											".__C__data.frameRowLabels"
										],
										[
											"classesToAM\t{methods}",
											"classesToAM"
										],
										[
											"getProperties\t{methods}",
											"getProperties"
										],
										[
											"traceOff\t{methods}",
											"traceOff"
										],
										[
											"classLabel\t{methods}",
											"classLabel"
										],
										[
											"removeMethodsObject\t{methods}",
											"removeMethodsObject"
										],
										[
											"allNames\t{methods}",
											"allNames"
										],
										[
											"getSlots\t{methods}",
											"getSlots"
										],
										[
											".__C__S3\t{methods}",
											".__C__S3"
										],
										[
											".__C__S4\t{methods}",
											".__C__S4"
										],
										[
											"inheritedSlotNames\t{methods}",
											"inheritedSlotNames"
										],
										[
											"showDefault\t{methods}",
											"showDefault"
										],
										[
											"reconcilePropertiesAndPrototype\t{methods}",
											"reconcilePropertiesAndPrototype"
										],
										[
											"removeGeneric\t{methods}",
											"removeGeneric"
										],
										[
											"getRefClass\t{methods}",
											"getRefClass"
										],
										[
											".__C__anova.glm\t{methods}",
											".__C__anova.glm"
										],
										[
											"addNextMethod\t{methods}",
											"addNextMethod"
										],
										[
											".__C__packageIQR\t{methods}",
											".__C__packageIQR"
										],
										[
											"Compare\t{methods}",
											"Compare"
										],
										[
											"MethodsListSelect\t{methods}",
											"MethodsListSelect"
										],
										[
											"as\t{methods}",
											"as"
										],
										[
											".__C__standardGenericWithTrace\t{methods}",
											".__C__standardGenericWithTrace"
										],
										[
											"isXS3Class\t{methods}",
											"isXS3Class"
										],
										[
											"languageEl\t{methods}",
											"languageEl"
										],
										[
											"removeClass\t{methods}",
											"removeClass"
										],
										[
											".__C__nonStructure\t{methods}",
											".__C__nonStructure"
										],
										[
											"callNextMethod\t{methods}",
											"callNextMethod"
										],
										[
											"defaultDumpName\t{methods}",
											"defaultDumpName"
										],
										[
											"makeGeneric\t{methods}",
											"makeGeneric"
										],
										[
											"isClass\t{methods}",
											"isClass"
										],
										[
											"getAccess\t{methods}",
											"getAccess"
										],
										[
											".__C__.NULL\t{methods}",
											".__C__.NULL"
										],
										[
											"getExtends\t{methods}",
											"getExtends"
										],
										[
											"setGroupGeneric\t{methods}",
											"setGroupGeneric"
										],
										[
											".__C__density\t{methods}",
											".__C__density"
										],
										[
											"getFunction\t{methods}",
											"getFunction"
										],
										[
											".__C__logLik\t{methods}",
											".__C__logLik"
										],
										[
											"classMetaName\t{methods}",
											"classMetaName"
										],
										[
											".__C__externalRefMethod\t{methods}",
											".__C__externalRefMethod"
										],
										[
											".__C__MethodSelectionReport\t{methods}",
											".__C__MethodSelectionReport"
										],
										[
											"setClass\t{methods}",
											"setClass"
										],
										[
											".valueClassTest\t{methods}",
											".valueClassTest"
										],
										[
											".__C__optionalMethod\t{methods}",
											".__C__optionalMethod"
										],
										[
											"getGroup\t{methods}",
											"getGroup"
										],
										[
											"checkSlotAssignment\t{methods}",
											"checkSlotAssignment"
										],
										[
											"implicitGeneric\t{methods}",
											"implicitGeneric"
										],
										[
											"getAllSuperClasses\t{methods}",
											"getAllSuperClasses"
										],
										[
											".__C__ts\t{methods}",
											".__C__ts"
										],
										[
											"getGroupMembers\t{methods}",
											"getGroupMembers"
										],
										[
											"traceOn\t{methods}",
											"traceOn"
										],
										[
											".__C__MethodWithNext\t{methods}",
											".__C__MethodWithNext"
										],
										[
											".__C__logical\t{methods}",
											".__C__logical"
										],
										[
											"setDataPart\t{methods}",
											"setDataPart"
										],
										[
											"getMethods\t{methods}",
											"getMethods"
										],
										[
											".__C__defaultBindingFunction\t{methods}",
											".__C__defaultBindingFunction"
										],
										[
											"findMethodSignatures\t{methods}",
											"findMethodSignatures"
										],
										[
											".__C__.Other\t{methods}",
											".__C__.Other"
										],
										[
											"emptyMethodsList\t{methods}",
											"emptyMethodsList"
										],
										[
											".__C__summary.table\t{methods}",
											".__C__summary.table"
										],
										[
											".slotNames\t{methods}",
											".slotNames"
										],
										[
											".__C__mlm\t{methods}",
											".__C__mlm"
										],
										[
											".__C__sourceEnvironment\t{methods}",
											".__C__sourceEnvironment"
										],
										[
											"knit_print.trunc_mat\t{tibble}",
											"knit_print.trunc_mat"
										],
										[
											"type_sum\t{tibble}",
											"type_sum"
										],
										[
											"obj_sum\t{tibble}",
											"obj_sum"
										],
										[
											"add_column\t{tibble}",
											"add_column"
										],
										[
											"lst_\t{tibble}",
											"lst_"
										],
										[
											"is.tibble\t{tibble}",
											"is.tibble"
										],
										[
											"trunc_mat\t{tibble}",
											"trunc_mat"
										],
										[
											"as_tibble\t{tibble}",
											"as_tibble"
										],
										[
											"rownames_to_column\t{tibble}",
											"rownames_to_column"
										],
										[
											"has_rownames\t{tibble}",
											"has_rownames"
										],
										[
											"tibble_\t{tibble}",
											"tibble_"
										],
										[
											"as_data_frame\t{tibble}",
											"as_data_frame"
										],
										[
											"as.tibble\t{tibble}",
											"as.tibble"
										],
										[
											"is_vector_s3\t{tibble}",
											"is_vector_s3"
										],
										[
											"add_row\t{tibble}",
											"add_row"
										],
										[
											"tribble\t{tibble}",
											"tribble"
										],
										[
											"column_to_rownames\t{tibble}",
											"column_to_rownames"
										],
										[
											"glimpse\t{tibble}",
											"glimpse"
										],
										[
											"frame_data\t{tibble}",
											"frame_data"
										],
										[
											"enframe\t{tibble}",
											"enframe"
										],
										[
											"data_frame\t{tibble}",
											"data_frame"
										],
										[
											"lst\t{tibble}",
											"lst"
										],
										[
											"tbl_sum\t{tibble}",
											"tbl_sum"
										],
										[
											"data_frame_\t{tibble}",
											"data_frame_"
										],
										[
											"has_name\t{tibble}",
											"has_name"
										],
										[
											"deframe\t{tibble}",
											"deframe"
										],
										[
											"remove_rownames\t{tibble}",
											"remove_rownames"
										],
										[
											"repair_names\t{tibble}",
											"repair_names"
										],
										[
											"frame_matrix\t{tibble}",
											"frame_matrix"
										],
										[
											"tibble\t{tibble}",
											"tibble"
										],
										[
											"is_tibble\t{tibble}",
											"is_tibble"
										],
										[
											"assocplot\t{graphics}",
											"assocplot"
										],
										[
											"title\t{graphics}",
											"title"
										],
										[
											"axis.Date\t{graphics}",
											"axis.Date"
										],
										[
											"points\t{graphics}",
											"points"
										],
										[
											"pairs.default\t{graphics}",
											"pairs.default"
										],
										[
											"strheight\t{graphics}",
											"strheight"
										],
										[
											"rect\t{graphics}",
											"rect"
										],
										[
											"frame\t{graphics}",
											"frame"
										],
										[
											"identify\t{graphics}",
											"identify"
										],
										[
											"plot.xy\t{graphics}",
											"plot.xy"
										],
										[
											"stem\t{graphics}",
											"stem"
										],
										[
											"par\t{graphics}",
											"par"
										],
										[
											"plot.default\t{graphics}",
											"plot.default"
										],
										[
											"fourfoldplot\t{graphics}",
											"fourfoldplot"
										],
										[
											"yinch\t{graphics}",
											"yinch"
										],
										[
											"layout\t{graphics}",
											"layout"
										],
										[
											"panel.smooth\t{graphics}",
											"panel.smooth"
										],
										[
											"split.screen\t{graphics}",
											"split.screen"
										],
										[
											"screen\t{graphics}",
											"screen"
										],
										[
											"rug\t{graphics}",
											"rug"
										],
										[
											"plot.new\t{graphics}",
											"plot.new"
										],
										[
											"image.default\t{graphics}",
											"image.default"
										],
										[
											"boxplot.matrix\t{graphics}",
											"boxplot.matrix"
										],
										[
											"clip\t{graphics}",
											"clip"
										],
										[
											"pairs\t{graphics}",
											"pairs"
										],
										[
											"points.default\t{graphics}",
											"points.default"
										],
										[
											"lines.default\t{graphics}",
											"lines.default"
										],
										[
											"strwidth\t{graphics}",
											"strwidth"
										],
										[
											"persp\t{graphics}",
											"persp"
										],
										[
											"plot.design\t{graphics}",
											"plot.design"
										],
										[
											"matpoints\t{graphics}",
											"matpoints"
										],
										[
											"dotchart\t{graphics}",
											"dotchart"
										],
										[
											"sunflowerplot\t{graphics}",
											"sunflowerplot"
										],
										[
											".filled.contour\t{graphics}",
											".filled.contour"
										],
										[
											"arrows\t{graphics}",
											"arrows"
										],
										[
											"symbols\t{graphics}",
											"symbols"
										],
										[
											"hist.default\t{graphics}",
											"hist.default"
										],
										[
											"stripchart\t{graphics}",
											"stripchart"
										],
										[
											"xyinch\t{graphics}",
											"xyinch"
										],
										[
											"xinch\t{graphics}",
											"xinch"
										],
										[
											"contour\t{graphics}",
											"contour"
										],
										[
											"erase.screen\t{graphics}",
											"erase.screen"
										],
										[
											"Axis\t{graphics}",
											"Axis"
										],
										[
											"text.default\t{graphics}",
											"text.default"
										],
										[
											"grconvertX\t{graphics}",
											"grconvertX"
										],
										[
											"legend\t{graphics}",
											"legend"
										],
										[
											"text\t{graphics}",
											"text"
										],
										[
											"grconvertY\t{graphics}",
											"grconvertY"
										],
										[
											"lcm\t{graphics}",
											"lcm"
										],
										[
											"cdplot\t{graphics}",
											"cdplot"
										],
										[
											"hist\t{graphics}",
											"hist"
										],
										[
											"smoothScatter\t{graphics}",
											"smoothScatter"
										],
										[
											"layout.show\t{graphics}",
											"layout.show"
										],
										[
											"grid\t{graphics}",
											"grid"
										],
										[
											"polypath\t{graphics}",
											"polypath"
										],
										[
											"close.screen\t{graphics}",
											"close.screen"
										],
										[
											"xspline\t{graphics}",
											"xspline"
										],
										[
											"curve\t{graphics}",
											"curve"
										],
										[
											"filled.contour\t{graphics}",
											"filled.contour"
										],
										[
											"co.intervals\t{graphics}",
											"co.intervals"
										],
										[
											"contour.default\t{graphics}",
											"contour.default"
										],
										[
											"boxplot.default\t{graphics}",
											"boxplot.default"
										],
										[
											"plot.function\t{graphics}",
											"plot.function"
										],
										[
											"spineplot\t{graphics}",
											"spineplot"
										],
										[
											"plot\t{graphics}",
											"plot"
										],
										[
											"boxplot\t{graphics}",
											"boxplot"
										],
										[
											"rasterImage\t{graphics}",
											"rasterImage"
										],
										[
											"axis.POSIXct\t{graphics}",
											"axis.POSIXct"
										],
										[
											"bxp\t{graphics}",
											"bxp"
										],
										[
											"box\t{graphics}",
											"box"
										],
										[
											"mtext\t{graphics}",
											"mtext"
										],
										[
											"matplot\t{graphics}",
											"matplot"
										],
										[
											"abline\t{graphics}",
											"abline"
										],
										[
											"pie\t{graphics}",
											"pie"
										],
										[
											"image\t{graphics}",
											"image"
										],
										[
											"matlines\t{graphics}",
											"matlines"
										],
										[
											"segments\t{graphics}",
											"segments"
										],
										[
											"lines\t{graphics}",
											"lines"
										],
										[
											"barplot.default\t{graphics}",
											"barplot.default"
										],
										[
											"barplot\t{graphics}",
											"barplot"
										],
										[
											"locator\t{graphics}",
											"locator"
										],
										[
											"stars\t{graphics}",
											"stars"
										],
										[
											"coplot\t{graphics}",
											"coplot"
										],
										[
											"mosaicplot\t{graphics}",
											"mosaicplot"
										],
										[
											"polygon\t{graphics}",
											"polygon"
										],
										[
											"plot.window\t{graphics}",
											"plot.window"
										],
										[
											"axis\t{graphics}",
											"axis"
										],
										[
											"axTicks\t{graphics}",
											"axTicks"
										],
										[
											"dev.size\t{grDevices}",
											"dev.size"
										],
										[
											"svg\t{grDevices}",
											"svg"
										],
										[
											"recordPlot\t{grDevices}",
											"recordPlot"
										],
										[
											"cairo_ps\t{grDevices}",
											"cairo_ps"
										],
										[
											"heat.colors\t{grDevices}",
											"heat.colors"
										],
										[
											"make.rgb\t{grDevices}",
											"make.rgb"
										],
										[
											"terrain.colors\t{grDevices}",
											"terrain.colors"
										],
										[
											"setEPS\t{grDevices}",
											"setEPS"
										],
										[
											"X11Font\t{grDevices}",
											"X11Font"
										],
										[
											"Type1Font\t{grDevices}",
											"Type1Font"
										],
										[
											"quartz.save\t{grDevices}",
											"quartz.save"
										],
										[
											"pdf\t{grDevices}",
											"pdf"
										],
										[
											"grey\t{grDevices}",
											"grey"
										],
										[
											"dev.list\t{grDevices}",
											"dev.list"
										],
										[
											"as.raster\t{grDevices}",
											"as.raster"
										],
										[
											"dev.copy2pdf\t{grDevices}",
											"dev.copy2pdf"
										],
										[
											"quartzFont\t{grDevices}",
											"quartzFont"
										],
										[
											"dev.print\t{grDevices}",
											"dev.print"
										],
										[
											"dev.prev\t{grDevices}",
											"dev.prev"
										],
										[
											"as.graphicsAnnot\t{grDevices}",
											"as.graphicsAnnot"
										],
										[
											"ps.options\t{grDevices}",
											"ps.options"
										],
										[
											"pdf.options\t{grDevices}",
											"pdf.options"
										],
										[
											"colorRamp\t{grDevices}",
											"colorRamp"
										],
										[
											"dev.flush\t{grDevices}",
											"dev.flush"
										],
										[
											"xyTable\t{grDevices}",
											"xyTable"
										],
										[
											"graphics.off\t{grDevices}",
											"graphics.off"
										],
										[
											"bitmap\t{grDevices}",
											"bitmap"
										],
										[
											"dev2bitmap\t{grDevices}",
											"dev2bitmap"
										],
										[
											"xy.coords\t{grDevices}",
											"xy.coords"
										],
										[
											"grey.colors\t{grDevices}",
											"grey.colors"
										],
										[
											"postscript\t{grDevices}",
											"postscript"
										],
										[
											"dev.cur\t{grDevices}",
											"dev.cur"
										],
										[
											"dev.hold\t{grDevices}",
											"dev.hold"
										],
										[
											"axisTicks\t{grDevices}",
											"axisTicks"
										],
										[
											"x11\t{grDevices}",
											"x11"
										],
										[
											"tiff\t{grDevices}",
											"tiff"
										],
										[
											"check.options\t{grDevices}",
											"check.options"
										],
										[
											"rainbow\t{grDevices}",
											"rainbow"
										],
										[
											"nclass.FD\t{grDevices}",
											"nclass.FD"
										],
										[
											"dev.copy2eps\t{grDevices}",
											"dev.copy2eps"
										],
										[
											"nclass.Sturges\t{grDevices}",
											"nclass.Sturges"
										],
										[
											"replayPlot\t{grDevices}",
											"replayPlot"
										],
										[
											"dev.off\t{grDevices}",
											"dev.off"
										],
										[
											"jpeg\t{grDevices}",
											"jpeg"
										],
										[
											"colors\t{grDevices}",
											"colors"
										],
										[
											"setGraphicsEventHandlers\t{grDevices}",
											"setGraphicsEventHandlers"
										],
										[
											"n2mfrow\t{grDevices}",
											"n2mfrow"
										],
										[
											"colorConverter\t{grDevices}",
											"colorConverter"
										],
										[
											"setPS\t{grDevices}",
											"setPS"
										],
										[
											"cm\t{grDevices}",
											"cm"
										],
										[
											"dev.copy\t{grDevices}",
											"dev.copy"
										],
										[
											"pictex\t{grDevices}",
											"pictex"
										],
										[
											"recordGraphics\t{grDevices}",
											"recordGraphics"
										],
										[
											"rgb2hsv\t{grDevices}",
											"rgb2hsv"
										],
										[
											"gray\t{grDevices}",
											"gray"
										],
										[
											"extendrange\t{grDevices}",
											"extendrange"
										],
										[
											"is.raster\t{grDevices}",
											"is.raster"
										],
										[
											"colorspaces\t{grDevices}",
											"colorspaces"
										],
										[
											"getGraphicsEvent\t{grDevices}",
											"getGraphicsEvent"
										],
										[
											"pdfFonts\t{grDevices}",
											"pdfFonts"
										],
										[
											"convertColor\t{grDevices}",
											"convertColor"
										],
										[
											"dev.capabilities\t{grDevices}",
											"dev.capabilities"
										],
										[
											"quartz.options\t{grDevices}",
											"quartz.options"
										],
										[
											"chull\t{grDevices}",
											"chull"
										],
										[
											"blues9\t{grDevices}",
											"blues9"
										],
										[
											"col2rgb\t{grDevices}",
											"col2rgb"
										],
										[
											"palette\t{grDevices}",
											"palette"
										],
										[
											"quartzFonts\t{grDevices}",
											"quartzFonts"
										],
										[
											"hsv\t{grDevices}",
											"hsv"
										],
										[
											"Hershey\t{grDevices}",
											"Hershey"
										],
										[
											"cm.colors\t{grDevices}",
											"cm.colors"
										],
										[
											"cairo_pdf\t{grDevices}",
											"cairo_pdf"
										],
										[
											"colours\t{grDevices}",
											"colours"
										],
										[
											"dev.interactive\t{grDevices}",
											"dev.interactive"
										],
										[
											"adjustcolor\t{grDevices}",
											"adjustcolor"
										],
										[
											"dev.new\t{grDevices}",
											"dev.new"
										],
										[
											"X11.options\t{grDevices}",
											"X11.options"
										],
										[
											"trans3d\t{grDevices}",
											"trans3d"
										],
										[
											"dev.control\t{grDevices}",
											"dev.control"
										],
										[
											"dev.next\t{grDevices}",
											"dev.next"
										],
										[
											"CIDFont\t{grDevices}",
											"CIDFont"
										],
										[
											"dev.capture\t{grDevices}",
											"dev.capture"
										],
										[
											"bmp\t{grDevices}",
											"bmp"
										],
										[
											"png\t{grDevices}",
											"png"
										],
										[
											"xfig\t{grDevices}",
											"xfig"
										],
										[
											"nclass.scott\t{grDevices}",
											"nclass.scott"
										],
										[
											"gray.colors\t{grDevices}",
											"gray.colors"
										],
										[
											"deviceIsInteractive\t{grDevices}",
											"deviceIsInteractive"
										],
										[
											"setGraphicsEventEnv\t{grDevices}",
											"setGraphicsEventEnv"
										],
										[
											"quartz\t{grDevices}",
											"quartz"
										],
										[
											"X11Fonts\t{grDevices}",
											"X11Fonts"
										],
										[
											"X11\t{grDevices}",
											"X11"
										],
										[
											"colorRampPalette\t{grDevices}",
											"colorRampPalette"
										],
										[
											"rgb\t{grDevices}",
											"rgb"
										],
										[
											"dev.set\t{grDevices}",
											"dev.set"
										],
										[
											".axisPars\t{grDevices}",
											".axisPars"
										],
										[
											"xyz.coords\t{grDevices}",
											"xyz.coords"
										],
										[
											"savePlot\t{grDevices}",
											"savePlot"
										],
										[
											"hcl\t{grDevices}",
											"hcl"
										],
										[
											"postscriptFonts\t{grDevices}",
											"postscriptFonts"
										],
										[
											"embedFonts\t{grDevices}",
											"embedFonts"
										],
										[
											"densCols\t{grDevices}",
											"densCols"
										],
										[
											"getGraphicsEventEnv\t{grDevices}",
											"getGraphicsEventEnv"
										],
										[
											"topo.colors\t{grDevices}",
											"topo.colors"
										],
										[
											"devAskNewPage\t{grDevices}",
											"devAskNewPage"
										],
										[
											"contourLines\t{grDevices}",
											"contourLines"
										],
										[
											"grSoftVersion\t{grDevices}",
											"grSoftVersion"
										],
										[
											"boxplot.stats\t{grDevices}",
											"boxplot.stats"
										],
										[
											"aspell_package_Rd_files\t{utils}",
											"aspell_package_Rd_files"
										],
										[
											"vi\t{utils}",
											"vi"
										],
										[
											"read.table\t{utils}",
											"read.table"
										],
										[
											"URLdecode\t{utils}",
											"URLdecode"
										],
										[
											"rc.status\t{utils}",
											"rc.status"
										],
										[
											"write.csv\t{utils}",
											"write.csv"
										],
										[
											"RweaveLatexOptions\t{utils}",
											"RweaveLatexOptions"
										],
										[
											"formatUL\t{utils}",
											"formatUL"
										],
										[
											"prompt\t{utils}",
											"prompt"
										],
										[
											"upgrade\t{utils}",
											"upgrade"
										],
										[
											"RShowDoc\t{utils}",
											"RShowDoc"
										],
										[
											"argsAnywhere\t{utils}",
											"argsAnywhere"
										],
										[
											"read.delim\t{utils}",
											"read.delim"
										],
										[
											"de.ncols\t{utils}",
											"de.ncols"
										],
										[
											"new.packages\t{utils}",
											"new.packages"
										],
										[
											"read.socket\t{utils}",
											"read.socket"
										],
										[
											"SweaveSyntConv\t{utils}",
											"SweaveSyntConv"
										],
										[
											"personList\t{utils}",
											"personList"
										],
										[
											"write.table\t{utils}",
											"write.table"
										],
										[
											"read.delim2\t{utils}",
											"read.delim2"
										],
										[
											"aspell_package_vignettes\t{utils}",
											"aspell_package_vignettes"
										],
										[
											"SweaveHooks\t{utils}",
											"SweaveHooks"
										],
										[
											"assignInNamespace\t{utils}",
											"assignInNamespace"
										],
										[
											"is.relistable\t{utils}",
											"is.relistable"
										],
										[
											".DollarNames\t{utils}",
											".DollarNames"
										],
										[
											"toBibtex\t{utils}",
											"toBibtex"
										],
										[
											"alarm\t{utils}",
											"alarm"
										],
										[
											"RweaveLatexSetup\t{utils}",
											"RweaveLatexSetup"
										],
										[
											"checkCRAN\t{utils}",
											"checkCRAN"
										],
										[
											"setRepositories\t{utils}",
											"setRepositories"
										],
										[
											"dump.frames\t{utils}",
											"dump.frames"
										],
										[
											"Rprof\t{utils}",
											"Rprof"
										],
										[
											"sessionInfo\t{utils}",
											"sessionInfo"
										],
										[
											"count.fields\t{utils}",
											"count.fields"
										],
										[
											"create.post\t{utils}",
											"create.post"
										],
										[
											"tail.matrix\t{utils}",
											"tail.matrix"
										],
										[
											"person\t{utils}",
											"person"
										],
										[
											"promptPackage\t{utils}",
											"promptPackage"
										],
										[
											"install.packages\t{utils}",
											"install.packages"
										],
										[
											"news\t{utils}",
											"news"
										],
										[
											"URLencode\t{utils}",
											"URLencode"
										],
										[
											"type.convert\t{utils}",
											"type.convert"
										],
										[
											"help.start\t{utils}",
											"help.start"
										],
										[
											"de.setup\t{utils}",
											"de.setup"
										],
										[
											"aregexec\t{utils}",
											"aregexec"
										],
										[
											"rc.getOption\t{utils}",
											"rc.getOption"
										],
										[
											"de.restore\t{utils}",
											"de.restore"
										],
										[
											"file.edit\t{utils}",
											"file.edit"
										],
										[
											"citHeader\t{utils}",
											"citHeader"
										],
										[
											"fix\t{utils}",
											"fix"
										],
										[
											"makeRweaveLatexCodeRunner\t{utils}",
											"makeRweaveLatexCodeRunner"
										],
										[
											"write.socket\t{utils}",
											"write.socket"
										],
										[
											"unzip\t{utils}",
											"unzip"
										],
										[
											"Sweave\t{utils}",
											"Sweave"
										],
										[
											"nsl\t{utils}",
											"nsl"
										],
										[
											"read.fwf\t{utils}",
											"read.fwf"
										],
										[
											"CRAN.packages\t{utils}",
											"CRAN.packages"
										],
										[
											"RweaveEvalWithOpt\t{utils}",
											"RweaveEvalWithOpt"
										],
										[
											"limitedLabels\t{utils}",
											"limitedLabels"
										],
										[
											"readCitationFile\t{utils}",
											"readCitationFile"
										],
										[
											"process.events\t{utils}",
											"process.events"
										],
										[
											"as.relistable\t{utils}",
											"as.relistable"
										],
										[
											"getParseText\t{utils}",
											"getParseText"
										],
										[
											"modifyList\t{utils}",
											"modifyList"
										],
										[
											"maintainer\t{utils}",
											"maintainer"
										],
										[
											"available.packages\t{utils}",
											"available.packages"
										],
										[
											"citeNatbib\t{utils}",
											"citeNatbib"
										],
										[
											"rc.options\t{utils}",
											"rc.options"
										],
										[
											"setBreakpoint\t{utils}",
											"setBreakpoint"
										],
										[
											"Rtangle\t{utils}",
											"Rtangle"
										],
										[
											"head.matrix\t{utils}",
											"head.matrix"
										],
										[
											"getTxtProgressBar\t{utils}",
											"getTxtProgressBar"
										],
										[
											"tail\t{utils}",
											"tail"
										],
										[
											"changedFiles\t{utils}",
											"changedFiles"
										],
										[
											"RweaveLatexFinish\t{utils}",
											"RweaveLatexFinish"
										],
										[
											"getAnywhere\t{utils}",
											"getAnywhere"
										],
										[
											"browseEnv\t{utils}",
											"browseEnv"
										],
										[
											"object.size\t{utils}",
											"object.size"
										],
										[
											"globalVariables\t{utils}",
											"globalVariables"
										],
										[
											"packageVersion\t{utils}",
											"packageVersion"
										],
										[
											"help.search\t{utils}",
											"help.search"
										],
										[
											"package.skeleton\t{utils}",
											"package.skeleton"
										],
										[
											"summaryRprof\t{utils}",
											"summaryRprof"
										],
										[
											"setTxtProgressBar\t{utils}",
											"setTxtProgressBar"
										],
										[
											"timestamp\t{utils}",
											"timestamp"
										],
										[
											"getSrcref\t{utils}",
											"getSrcref"
										],
										[
											"stack\t{utils}",
											"stack"
										],
										[
											"capture.output\t{utils}",
											"capture.output"
										],
										[
											"bug.report\t{utils}",
											"bug.report"
										],
										[
											"rc.settings\t{utils}",
											"rc.settings"
										],
										[
											"fileSnapshot\t{utils}",
											"fileSnapshot"
										],
										[
											"hsearch_db_keywords\t{utils}",
											"hsearch_db_keywords"
										],
										[
											"rtags\t{utils}",
											"rtags"
										],
										[
											"update.packageStatus\t{utils}",
											"update.packageStatus"
										],
										[
											"browseVignettes\t{utils}",
											"browseVignettes"
										],
										[
											"contrib.url\t{utils}",
											"contrib.url"
										],
										[
											"strOptions\t{utils}",
											"strOptions"
										],
										[
											"packageDescription\t{utils}",
											"packageDescription"
										],
										[
											"RweaveLatex\t{utils}",
											"RweaveLatex"
										],
										[
											"SweaveSyntaxNoweb\t{utils}",
											"SweaveSyntaxNoweb"
										],
										[
											"flush.console\t{utils}",
											"flush.console"
										],
										[
											"Rprofmem\t{utils}",
											"Rprofmem"
										],
										[
											"compareVersion\t{utils}",
											"compareVersion"
										],
										[
											"as.personList\t{utils}",
											"as.personList"
										],
										[
											"getFromNamespace\t{utils}",
											"getFromNamespace"
										],
										[
											"recover\t{utils}",
											"recover"
										],
										[
											"packageStatus\t{utils}",
											"packageStatus"
										],
										[
											"read.csv2\t{utils}",
											"read.csv2"
										],
										[
											"demo\t{utils}",
											"demo"
										],
										[
											"edit\t{utils}",
											"edit"
										],
										[
											"aspell_package_R_files\t{utils}",
											"aspell_package_R_files"
										],
										[
											"isS3method\t{utils}",
											"isS3method"
										],
										[
											"de\t{utils}",
											"de"
										],
										[
											"RSiteSearch\t{utils}",
											"RSiteSearch"
										],
										[
											"read.DIF\t{utils}",
											"read.DIF"
										],
										[
											"hsearch_db_concepts\t{utils}",
											"hsearch_db_concepts"
										],
										[
											"getSrcLocation\t{utils}",
											"getSrcLocation"
										],
										[
											"lsf.str\t{utils}",
											"lsf.str"
										],
										[
											"tar\t{utils}",
											"tar"
										],
										[
											"help.request\t{utils}",
											"help.request"
										],
										[
											"cite\t{utils}",
											"cite"
										],
										[
											".S3methods\t{utils}",
											".S3methods"
										],
										[
											"select.list\t{utils}",
											"select.list"
										],
										[
											".romans\t{utils}",
											".romans"
										],
										[
											"getCRANmirrors\t{utils}",
											"getCRANmirrors"
										],
										[
											"relist\t{utils}",
											"relist"
										],
										[
											"ls.str\t{utils}",
											"ls.str"
										],
										[
											"localeToCharset\t{utils}",
											"localeToCharset"
										],
										[
											"download.packages\t{utils}",
											"download.packages"
										],
										[
											"debugger\t{utils}",
											"debugger"
										],
										[
											"chooseCRANmirror\t{utils}",
											"chooseCRANmirror"
										],
										[
											"savehistory\t{utils}",
											"savehistory"
										],
										[
											"citEntry\t{utils}",
											"citEntry"
										],
										[
											"RweaveTryStop\t{utils}",
											"RweaveTryStop"
										],
										[
											"close.socket\t{utils}",
											"close.socket"
										],
										[
											"vignette\t{utils}",
											"vignette"
										],
										[
											"getS3method\t{utils}",
											"getS3method"
										],
										[
											"combn\t{utils}",
											"combn"
										],
										[
											"loadhistory\t{utils}",
											"loadhistory"
										],
										[
											"update.packages\t{utils}",
											"update.packages"
										],
										[
											"glob2rx\t{utils}",
											"glob2rx"
										],
										[
											"old.packages\t{utils}",
											"old.packages"
										],
										[
											"remove.packages\t{utils}",
											"remove.packages"
										],
										[
											"getParseData\t{utils}",
											"getParseData"
										],
										[
											"xedit\t{utils}",
											"xedit"
										],
										[
											"SweaveSyntaxLatex\t{utils}",
											"SweaveSyntaxLatex"
										],
										[
											"packageName\t{utils}",
											"packageName"
										],
										[
											"bibentry\t{utils}",
											"bibentry"
										],
										[
											"RtangleSetup\t{utils}",
											"RtangleSetup"
										],
										[
											"findLineNum\t{utils}",
											"findLineNum"
										],
										[
											"RtangleWritedoc\t{utils}",
											"RtangleWritedoc"
										],
										[
											"txtProgressBar\t{utils}",
											"txtProgressBar"
										],
										[
											"promptData\t{utils}",
											"promptData"
										],
										[
											"file_test\t{utils}",
											"file_test"
										],
										[
											"getSrcFilename\t{utils}",
											"getSrcFilename"
										],
										[
											"help\t{utils}",
											"help"
										],
										[
											"toLatex\t{utils}",
											"toLatex"
										],
										[
											"installed.packages\t{utils}",
											"installed.packages"
										],
										[
											"citFooter\t{utils}",
											"citFooter"
										],
										[
											"unstack\t{utils}",
											"unstack"
										],
										[
											"mirror2html\t{utils}",
											"mirror2html"
										],
										[
											"data.entry\t{utils}",
											"data.entry"
										],
										[
											"str\t{utils}",
											"str"
										],
										[
											"read.fortran\t{utils}",
											"read.fortran"
										],
										[
											"dataentry\t{utils}",
											"dataentry"
										],
										[
											"citation\t{utils}",
											"citation"
										],
										[
											"emacs\t{utils}",
											"emacs"
										],
										[
											"head\t{utils}",
											"head"
										],
										[
											"promptImport\t{utils}",
											"promptImport"
										],
										[
											"removeSource\t{utils}",
											"removeSource"
										],
										[
											"make.packages.html\t{utils}",
											"make.packages.html"
										],
										[
											"RweaveChunkPrefix\t{utils}",
											"RweaveChunkPrefix"
										],
										[
											"page\t{utils}",
											"page"
										],
										[
											"aspell_write_personal_dictionary_file\t{utils}",
											"aspell_write_personal_dictionary_file"
										],
										[
											"formatOL\t{utils}",
											"formatOL"
										],
										[
											"RweaveLatexWritedoc\t{utils}",
											"RweaveLatexWritedoc"
										],
										[
											"memory.limit\t{utils}",
											"memory.limit"
										],
										[
											"find\t{utils}",
											"find"
										],
										[
											"pico\t{utils}",
											"pico"
										],
										[
											"fixInNamespace\t{utils}",
											"fixInNamespace"
										],
										[
											"adist\t{utils}",
											"adist"
										],
										[
											"example\t{utils}",
											"example"
										],
										[
											"data\t{utils}",
											"data"
										],
										[
											"write.csv2\t{utils}",
											"write.csv2"
										],
										[
											"memory.size\t{utils}",
											"memory.size"
										],
										[
											"menu\t{utils}",
											"menu"
										],
										[
											"read.csv\t{utils}",
											"read.csv"
										],
										[
											"url.show\t{utils}",
											"url.show"
										],
										[
											"history\t{utils}",
											"history"
										],
										[
											"chooseBioCmirror\t{utils}",
											"chooseBioCmirror"
										],
										[
											"View\t{utils}",
											"View"
										],
										[
											"assignInMyNamespace\t{utils}",
											"assignInMyNamespace"
										],
										[
											"hsearch_db\t{utils}",
											"hsearch_db"
										],
										[
											"browseURL\t{utils}",
											"browseURL"
										],
										[
											"untar\t{utils}",
											"untar"
										],
										[
											"aspell\t{utils}",
											"aspell"
										],
										[
											"zip\t{utils}",
											"zip"
										],
										[
											"make.socket\t{utils}",
											"make.socket"
										],
										[
											"getSrcDirectory\t{utils}",
											"getSrcDirectory"
										],
										[
											"suppressForeignCheck\t{utils}",
											"suppressForeignCheck"
										],
										[
											"aspell_package_C_files\t{utils}",
											"aspell_package_C_files"
										],
										[
											"download.file\t{utils}",
											"download.file"
										],
										[
											"apropos\t{utils}",
											"apropos"
										],
										[
											"as.roman\t{utils}",
											"as.roman"
										],
										[
											"xemacs\t{utils}",
											"xemacs"
										],
										[
											"Stangle\t{utils}",
											"Stangle"
										],
										[
											"methods\t{utils}",
											"methods"
										],
										[
											"as.person\t{utils}",
											"as.person"
										],
										[
											"qqcat\t{GetoptLong}",
											"qqcat"
										],
										[
											"qq\t{GetoptLong}",
											"qq"
										],
										[
											"GetoptLong.options\t{GetoptLong}",
											"GetoptLong.options"
										],
										[
											"GetOptions\t{GetoptLong}",
											"GetOptions"
										],
										[
											"GetoptLong\t{GetoptLong}",
											"GetoptLong"
										],
										[
											"qq.options\t{GetoptLong}",
											"qq.options"
										],
										[
											"get_scriptname\t{GetoptLong}",
											"get_scriptname"
										],
										[
											"AnnotationHub\tInstalled Package",
											"AnnotationHub"
										],
										[
											"BB\tInstalled Package",
											"BB"
										],
										[
											"BiocParallel\tInstalled Package",
											"BiocParallel"
										],
										[
											"Biostrings\tInstalled Package",
											"Biostrings"
										],
										[
											"Cairo\tInstalled Package",
											"Cairo"
										],
										[
											"DMwR\tInstalled Package",
											"DMwR"
										],
										[
											"DNAcopy\tInstalled Package",
											"DNAcopy"
										],
										[
											"ExtDist\tInstalled Package",
											"ExtDist"
										],
										[
											"Formula\tInstalled Package",
											"Formula"
										],
										[
											"GO.db\tInstalled Package",
											"GO.db"
										],
										[
											"GenomeInfoDb\tInstalled Package",
											"GenomeInfoDb"
										],
										[
											"GenomicAlignments\tInstalled Package",
											"GenomicAlignments"
										],
										[
											"GenomicFeatures\tInstalled Package",
											"GenomicFeatures"
										],
										[
											"GenomicRanges\tInstalled Package",
											"GenomicRanges"
										],
										[
											"GetoptLong\tInstalled Package",
											"GetoptLong"
										],
										[
											"GlobalOptions\tInstalled Package",
											"GlobalOptions"
										],
										[
											"Hmisc\tInstalled Package",
											"Hmisc"
										],
										[
											"Homo.sapiens\tInstalled Package",
											"Homo.sapiens"
										],
										[
											"KFKSDS\tInstalled Package",
											"KFKSDS"
										],
										[
											"MBESS\tInstalled Package",
											"MBESS"
										],
										[
											"MSACS\tInstalled Package",
											"MSACS"
										],
										[
											"OpenMx\tInstalled Package",
											"OpenMx"
										],
										[
											"OrganismDbi\tInstalled Package",
											"OrganismDbi"
										],
										[
											"PKI\tInstalled Package",
											"PKI"
										],
										[
											"PSCBS\tInstalled Package",
											"PSCBS"
										],
										[
											"R.cache\tInstalled Package",
											"R.cache"
										],
										[
											"R.methodsS3\tInstalled Package",
											"R.methodsS3"
										],
										[
											"R.oo\tInstalled Package",
											"R.oo"
										],
										[
											"R.utils\tInstalled Package",
											"R.utils"
										],
										[
											"RBGL\tInstalled Package",
											"RBGL"
										],
										[
											"ROSE\tInstalled Package",
											"ROSE"
										],
										[
											"RStudioAddIns\tInstalled Package",
											"RStudioAddIns"
										],
										[
											"Rcgmin\tInstalled Package",
											"Rcgmin"
										],
										[
											"Rcpp\tInstalled Package",
											"Rcpp"
										],
										[
											"RcppArmadillo\tInstalled Package",
											"RcppArmadillo"
										],
										[
											"RcppParallel\tInstalled Package",
											"RcppParallel"
										],
										[
											"Rmpfr\tInstalled Package",
											"Rmpfr"
										],
										[
											"Rsamtools\tInstalled Package",
											"Rsamtools"
										],
										[
											"Rvmmin\tInstalled Package",
											"Rvmmin"
										],
										[
											"S4Vectors\tInstalled Package",
											"S4Vectors"
										],
										[
											"StanHeaders\tInstalled Package",
											"StanHeaders"
										],
										[
											"SummarizedExperiment\tInstalled Package",
											"SummarizedExperiment"
										],
										[
											"TTR\tInstalled Package",
											"TTR"
										],
										[
											"TxDb.Hsapiens.UCSC.hg19.knownGene\tInstalled Package",
											"TxDb.Hsapiens.UCSC.hg19.knownGene"
										],
										[
											"XVector\tInstalled Package",
											"XVector"
										],
										[
											"acepack\tInstalled Package",
											"acepack"
										],
										[
											"assertthat\tInstalled Package",
											"assertthat"
										],
										[
											"bayesplot\tInstalled Package",
											"bayesplot"
										],
										[
											"biomaRt\tInstalled Package",
											"biomaRt"
										],
										[
											"brms\tInstalled Package",
											"brms"
										],
										[
											"caTools\tInstalled Package",
											"caTools"
										],
										[
											"colorscience\tInstalled Package",
											"colorscience"
										],
										[
											"combinat\tInstalled Package",
											"combinat"
										],
										[
											"crosstalk\tInstalled Package",
											"crosstalk"
										],
										[
											"dfoptim\tInstalled Package",
											"dfoptim"
										],
										[
											"docthis\tInstalled Package",
											"docthis"
										],
										[
											"energy\tInstalled Package",
											"energy"
										],
										[
											"ensembldb\tInstalled Package",
											"ensembldb"
										],
										[
											"exactci\tInstalled Package",
											"exactci"
										],
										[
											"fastAdaboost\tInstalled Package",
											"fastAdaboost"
										],
										[
											"forecast\tInstalled Package",
											"forecast"
										],
										[
											"fracdiff\tInstalled Package",
											"fracdiff"
										],
										[
											"futile.logger\tInstalled Package",
											"futile.logger"
										],
										[
											"futile.options\tInstalled Package",
											"futile.options"
										],
										[
											"future\tInstalled Package",
											"future"
										],
										[
											"gbm\tInstalled Package",
											"gbm"
										],
										[
											"gdtools\tInstalled Package",
											"gdtools"
										],
										[
											"geometry\tInstalled Package",
											"geometry"
										],
										[
											"ggfortify\tInstalled Package",
											"ggfortify"
										],
										[
											"globals\tInstalled Package",
											"globals"
										],
										[
											"gmp\tInstalled Package",
											"gmp"
										],
										[
											"graph\tInstalled Package",
											"graph"
										],
										[
											"gsl\tInstalled Package",
											"gsl"
										],
										[
											"hexbin\tInstalled Package",
											"hexbin"
										],
										[
											"htmlTable\tInstalled Package",
											"htmlTable"
										],
										[
											"htmlwidgets\tInstalled Package",
											"htmlwidgets"
										],
										[
											"imputeTS\tInstalled Package",
											"imputeTS"
										],
										[
											"inline\tInstalled Package",
											"inline"
										],
										[
											"interactiveDisplayBase\tInstalled Package",
											"interactiveDisplayBase"
										],
										[
											"klaR\tInstalled Package",
											"klaR"
										],
										[
											"lambda.r\tInstalled Package",
											"lambda.r"
										],
										[
											"latticeExtra\tInstalled Package",
											"latticeExtra"
										],
										[
											"lavaan\tInstalled Package",
											"lavaan"
										],
										[
											"listenv\tInstalled Package",
											"listenv"
										],
										[
											"lmtest\tInstalled Package",
											"lmtest"
										],
										[
											"loo\tInstalled Package",
											"loo"
										],
										[
											"magic\tInstalled Package",
											"magic"
										],
										[
											"magick\tInstalled Package",
											"magick"
										],
										[
											"matrixcalc\tInstalled Package",
											"matrixcalc"
										],
										[
											"mgcv\tInstalled Package",
											"mgcv"
										],
										[
											"mi\tInstalled Package",
											"mi"
										],
										[
											"munsellinterpol\tInstalled Package",
											"munsellinterpol"
										],
										[
											"optextras\tInstalled Package",
											"optextras"
										],
										[
											"optimx\tInstalled Package",
											"optimx"
										],
										[
											"org.Hs.eg.db\tInstalled Package",
											"org.Hs.eg.db"
										],
										[
											"packrat\tInstalled Package",
											"packrat"
										],
										[
											"pbivnorm\tInstalled Package",
											"pbivnorm"
										],
										[
											"plotly\tInstalled Package",
											"plotly"
										],
										[
											"pracma\tInstalled Package",
											"pracma"
										],
										[
											"purrrlyr\tInstalled Package",
											"purrrlyr"
										],
										[
											"qualpalr\tInstalled Package",
											"qualpalr"
										],
										[
											"quantmod\tInstalled Package",
											"quantmod"
										],
										[
											"randtoolbox\tInstalled Package",
											"randtoolbox"
										],
										[
											"rgl\tInstalled Package",
											"rgl"
										],
										[
											"rjson\tInstalled Package",
											"rjson"
										],
										[
											"rmarkdown\tInstalled Package",
											"rmarkdown"
										],
										[
											"rngWELL\tInstalled Package",
											"rngWELL"
										],
										[
											"rpf\tInstalled Package",
											"rpf"
										],
										[
											"rsconnect\tInstalled Package",
											"rsconnect"
										],
										[
											"rstan\tInstalled Package",
											"rstan"
										],
										[
											"rstantools\tInstalled Package",
											"rstantools"
										],
										[
											"rtracklayer\tInstalled Package",
											"rtracklayer"
										],
										[
											"scatterplot3d\tInstalled Package",
											"scatterplot3d"
										],
										[
											"sem\tInstalled Package",
											"sem"
										],
										[
											"semTools\tInstalled Package",
											"semTools"
										],
										[
											"setRNG\tInstalled Package",
											"setRNG"
										],
										[
											"snow\tInstalled Package",
											"snow"
										],
										[
											"sp\tInstalled Package",
											"sp"
										],
										[
											"ssanv\tInstalled Package",
											"ssanv"
										],
										[
											"stinepack\tInstalled Package",
											"stinepack"
										],
										[
											"stsm\tInstalled Package",
											"stsm"
										],
										[
											"svUnit\tInstalled Package",
											"svUnit"
										],
										[
											"svglite\tInstalled Package",
											"svglite"
										],
										[
											"tibble\tInstalled Package",
											"tibble"
										],
										[
											"timeDate\tInstalled Package",
											"timeDate"
										],
										[
											"tseries\tInstalled Package",
											"tseries"
										],
										[
											"tsoutliers\tInstalled Package",
											"tsoutliers"
										],
										[
											"ucminf\tInstalled Package",
											"ucminf"
										],
										[
											"xts\tInstalled Package",
											"xts"
										],
										[
											"AnnotationDbi\tInstalled Package",
											"AnnotationDbi"
										],
										[
											"BBmisc\tInstalled Package",
											"BBmisc"
										],
										[
											"BH\tInstalled Package",
											"BH"
										],
										[
											"Biobase\tInstalled Package",
											"Biobase"
										],
										[
											"BiocGenerics\tInstalled Package",
											"BiocGenerics"
										],
										[
											"BiocInstaller\tInstalled Package",
											"BiocInstaller"
										],
										[
											"Boruta\tInstalled Package",
											"Boruta"
										],
										[
											"DBI\tInstalled Package",
											"DBI"
										],
										[
											"DEoptim\tInstalled Package",
											"DEoptim"
										],
										[
											"DEoptimR\tInstalled Package",
											"DEoptimR"
										],
										[
											"DNAcopy\tInstalled Package",
											"DNAcopy"
										],
										[
											"FNN\tInstalled Package",
											"FNN"
										],
										[
											"GGally\tInstalled Package",
											"GGally"
										],
										[
											"GenomeInfoDb\tInstalled Package",
											"GenomeInfoDb"
										],
										[
											"GenomicRanges\tInstalled Package",
											"GenomicRanges"
										],
										[
											"HMM\tInstalled Package",
											"HMM"
										],
										[
											"IRanges\tInstalled Package",
											"IRanges"
										],
										[
											"KernSmooth\tInstalled Package",
											"KernSmooth"
										],
										[
											"MASS\tInstalled Package",
											"MASS"
										],
										[
											"Matrix\tInstalled Package",
											"Matrix"
										],
										[
											"MatrixModels\tInstalled Package",
											"MatrixModels"
										],
										[
											"ModelMetrics\tInstalled Package",
											"ModelMetrics"
										],
										[
											"NMF\tInstalled Package",
											"NMF"
										],
										[
											"ParamHelpers\tInstalled Package",
											"ParamHelpers"
										],
										[
											"R6\tInstalled Package",
											"R6"
										],
										[
											"RANN\tInstalled Package",
											"RANN"
										],
										[
											"RColorBrewer\tInstalled Package",
											"RColorBrewer"
										],
										[
											"RCurl\tInstalled Package",
											"RCurl"
										],
										[
											"RJSONIO\tInstalled Package",
											"RJSONIO"
										],
										[
											"ROCR\tInstalled Package",
											"ROCR"
										],
										[
											"RSQLite\tInstalled Package",
											"RSQLite"
										],
										[
											"Rcpp\tInstalled Package",
											"Rcpp"
										],
										[
											"RcppArmadillo\tInstalled Package",
											"RcppArmadillo"
										],
										[
											"RcppDE\tInstalled Package",
											"RcppDE"
										],
										[
											"RcppEigen\tInstalled Package",
											"RcppEigen"
										],
										[
											"RcppProgress\tInstalled Package",
											"RcppProgress"
										],
										[
											"Rmisc\tInstalled Package",
											"Rmisc"
										],
										[
											"Rtsne\tInstalled Package",
											"Rtsne"
										],
										[
											"S4Vectors\tInstalled Package",
											"S4Vectors"
										],
										[
											"Seurat\tInstalled Package",
											"Seurat"
										],
										[
											"SparseM\tInstalled Package",
											"SparseM"
										],
										[
											"TH.data\tInstalled Package",
											"TH.data"
										],
										[
											"VGAM\tInstalled Package",
											"VGAM"
										],
										[
											"XML\tInstalled Package",
											"XML"
										],
										[
											"XVector\tInstalled Package",
											"XVector"
										],
										[
											"abind\tInstalled Package",
											"abind"
										],
										[
											"affy\tInstalled Package",
											"affy"
										],
										[
											"affyio\tInstalled Package",
											"affyio"
										],
										[
											"annotate\tInstalled Package",
											"annotate"
										],
										[
											"ape\tInstalled Package",
											"ape"
										],
										[
											"arm\tInstalled Package",
											"arm"
										],
										[
											"assertthat\tInstalled Package",
											"assertthat"
										],
										[
											"backports\tInstalled Package",
											"backports"
										],
										[
											"base\tInstalled Package",
											"base"
										],
										[
											"base64enc\tInstalled Package",
											"base64enc"
										],
										[
											"bbmle\tInstalled Package",
											"bbmle"
										],
										[
											"bindr\tInstalled Package",
											"bindr"
										],
										[
											"bindrcpp\tInstalled Package",
											"bindrcpp"
										],
										[
											"bitops\tInstalled Package",
											"bitops"
										],
										[
											"boot\tInstalled Package",
											"boot"
										],
										[
											"brew\tInstalled Package",
											"brew"
										],
										[
											"broom\tInstalled Package",
											"broom"
										],
										[
											"caTools\tInstalled Package",
											"caTools"
										],
										[
											"car\tInstalled Package",
											"car"
										],
										[
											"caret\tInstalled Package",
											"caret"
										],
										[
											"checkmate\tInstalled Package",
											"checkmate"
										],
										[
											"chron\tInstalled Package",
											"chron"
										],
										[
											"class\tInstalled Package",
											"class"
										],
										[
											"cluster\tInstalled Package",
											"cluster"
										],
										[
											"coda\tInstalled Package",
											"coda"
										],
										[
											"codetools\tInstalled Package",
											"codetools"
										],
										[
											"coin\tInstalled Package",
											"coin"
										],
										[
											"colorspace\tInstalled Package",
											"colorspace"
										],
										[
											"colourpicker\tInstalled Package",
											"colourpicker"
										],
										[
											"compiler\tInstalled Package",
											"compiler"
										],
										[
											"cowplot\tInstalled Package",
											"cowplot"
										],
										[
											"curl\tInstalled Package",
											"curl"
										],
										[
											"data.table\tInstalled Package",
											"data.table"
										],
										[
											"datasets\tInstalled Package",
											"datasets"
										],
										[
											"devtools\tInstalled Package",
											"devtools"
										],
										[
											"dichromat\tInstalled Package",
											"dichromat"
										],
										[
											"digest\tInstalled Package",
											"digest"
										],
										[
											"diptest\tInstalled Package",
											"diptest"
										],
										[
											"doMC\tInstalled Package",
											"doMC"
										],
										[
											"doParallel\tInstalled Package",
											"doParallel"
										],
										[
											"dplyr\tInstalled Package",
											"dplyr"
										],
										[
											"e1071\tInstalled Package",
											"e1071"
										],
										[
											"elasticnet\tInstalled Package",
											"elasticnet"
										],
										[
											"evaluate\tInstalled Package",
											"evaluate"
										],
										[
											"fastICA\tInstalled Package",
											"fastICA"
										],
										[
											"flexmix\tInstalled Package",
											"flexmix"
										],
										[
											"forcats\tInstalled Package",
											"forcats"
										],
										[
											"foreach\tInstalled Package",
											"foreach"
										],
										[
											"foreign\tInstalled Package",
											"foreign"
										],
										[
											"formatR\tInstalled Package",
											"formatR"
										],
										[
											"fpc\tInstalled Package",
											"fpc"
										],
										[
											"gdata\tInstalled Package",
											"gdata"
										],
										[
											"genefilter\tInstalled Package",
											"genefilter"
										],
										[
											"ggExtra\tInstalled Package",
											"ggExtra"
										],
										[
											"ggThemeAssist\tInstalled Package",
											"ggThemeAssist"
										],
										[
											"ggplot2\tInstalled Package",
											"ggplot2"
										],
										[
											"ggrepel\tInstalled Package",
											"ggrepel"
										],
										[
											"ggthemes\tInstalled Package",
											"ggthemes"
										],
										[
											"ggvis\tInstalled Package",
											"ggvis"
										],
										[
											"git2r\tInstalled Package",
											"git2r"
										],
										[
											"glmnet\tInstalled Package",
											"glmnet"
										],
										[
											"glue\tInstalled Package",
											"glue"
										],
										[
											"gplots\tInstalled Package",
											"gplots"
										],
										[
											"grDevices\tInstalled Package",
											"grDevices"
										],
										[
											"graphics\tInstalled Package",
											"graphics"
										],
										[
											"grid\tInstalled Package",
											"grid"
										],
										[
											"gridBase\tInstalled Package",
											"gridBase"
										],
										[
											"gridExtra\tInstalled Package",
											"gridExtra"
										],
										[
											"gtable\tInstalled Package",
											"gtable"
										],
										[
											"gtools\tInstalled Package",
											"gtools"
										],
										[
											"highr\tInstalled Package",
											"highr"
										],
										[
											"hms\tInstalled Package",
											"hms"
										],
										[
											"htmltools\tInstalled Package",
											"htmltools"
										],
										[
											"htmlwidgets\tInstalled Package",
											"htmlwidgets"
										],
										[
											"httpuv\tInstalled Package",
											"httpuv"
										],
										[
											"httr\tInstalled Package",
											"httr"
										],
										[
											"igraph\tInstalled Package",
											"igraph"
										],
										[
											"interplot\tInstalled Package",
											"interplot"
										],
										[
											"irlba\tInstalled Package",
											"irlba"
										],
										[
											"iterators\tInstalled Package",
											"iterators"
										],
										[
											"jsonlite\tInstalled Package",
											"jsonlite"
										],
										[
											"kernlab\tInstalled Package",
											"kernlab"
										],
										[
											"knitr\tInstalled Package",
											"knitr"
										],
										[
											"labeling\tInstalled Package",
											"labeling"
										],
										[
											"lars\tInstalled Package",
											"lars"
										],
										[
											"lattice\tInstalled Package",
											"lattice"
										],
										[
											"lazyeval\tInstalled Package",
											"lazyeval"
										],
										[
											"leaps\tInstalled Package",
											"leaps"
										],
										[
											"limma\tInstalled Package",
											"limma"
										],
										[
											"lme4\tInstalled Package",
											"lme4"
										],
										[
											"lubridate\tInstalled Package",
											"lubridate"
										],
										[
											"magrittr\tInstalled Package",
											"magrittr"
										],
										[
											"markdown\tInstalled Package",
											"markdown"
										],
										[
											"matrixStats\tInstalled Package",
											"matrixStats"
										],
										[
											"mboost\tInstalled Package",
											"mboost"
										],
										[
											"mclust\tInstalled Package",
											"mclust"
										],
										[
											"memoise\tInstalled Package",
											"memoise"
										],
										[
											"metRology\tInstalled Package",
											"metRology"
										],
										[
											"methods\tInstalled Package",
											"methods"
										],
										[
											"mgcv\tInstalled Package",
											"mgcv"
										],
										[
											"mime\tInstalled Package",
											"mime"
										],
										[
											"miniUI\tInstalled Package",
											"miniUI"
										],
										[
											"minqa\tInstalled Package",
											"minqa"
										],
										[
											"mixtools\tInstalled Package",
											"mixtools"
										],
										[
											"mlr\tInstalled Package",
											"mlr"
										],
										[
											"mnormt\tInstalled Package",
											"mnormt"
										],
										[
											"modeltools\tInstalled Package",
											"modeltools"
										],
										[
											"mouse4302.db\tInstalled Package",
											"mouse4302.db"
										],
										[
											"mouse4302cdf\tInstalled Package",
											"mouse4302cdf"
										],
										[
											"multcomp\tInstalled Package",
											"multcomp"
										],
										[
											"munsell\tInstalled Package",
											"munsell"
										],
										[
											"mvtnorm\tInstalled Package",
											"mvtnorm"
										],
										[
											"nlme\tInstalled Package",
											"nlme"
										],
										[
											"nloptr\tInstalled Package",
											"nloptr"
										],
										[
											"nnet\tInstalled Package",
											"nnet"
										],
										[
											"nnls\tInstalled Package",
											"nnls"
										],
										[
											"numDeriv\tInstalled Package",
											"numDeriv"
										],
										[
											"openssl\tInstalled Package",
											"openssl"
										],
										[
											"openxlsx\tInstalled Package",
											"openxlsx"
										],
										[
											"org.Mm.eg.db\tInstalled Package",
											"org.Mm.eg.db"
										],
										[
											"pander\tInstalled Package",
											"pander"
										],
										[
											"parallel\tInstalled Package",
											"parallel"
										],
										[
											"parallelMap\tInstalled Package",
											"parallelMap"
										],
										[
											"party\tInstalled Package",
											"party"
										],
										[
											"pbapply\tInstalled Package",
											"pbapply"
										],
										[
											"pbkrtest\tInstalled Package",
											"pbkrtest"
										],
										[
											"pkgmaker\tInstalled Package",
											"pkgmaker"
										],
										[
											"plogr\tInstalled Package",
											"plogr"
										],
										[
											"plyr\tInstalled Package",
											"plyr"
										],
										[
											"png\tInstalled Package",
											"png"
										],
										[
											"prabclus\tInstalled Package",
											"prabclus"
										],
										[
											"preprocessCore\tInstalled Package",
											"preprocessCore"
										],
										[
											"prettyunits\tInstalled Package",
											"prettyunits"
										],
										[
											"progress\tInstalled Package",
											"progress"
										],
										[
											"psych\tInstalled Package",
											"psych"
										],
										[
											"purrr\tInstalled Package",
											"purrr"
										],
										[
											"quadprog\tInstalled Package",
											"quadprog"
										],
										[
											"quantreg\tInstalled Package",
											"quantreg"
										],
										[
											"rJava\tInstalled Package",
											"rJava"
										],
										[
											"rPython\tInstalled Package",
											"rPython"
										],
										[
											"randomForest\tInstalled Package",
											"randomForest"
										],
										[
											"ranger\tInstalled Package",
											"ranger"
										],
										[
											"readr\tInstalled Package",
											"readr"
										],
										[
											"readxl\tInstalled Package",
											"readxl"
										],
										[
											"registry\tInstalled Package",
											"registry"
										],
										[
											"reshape\tInstalled Package",
											"reshape"
										],
										[
											"reshape2\tInstalled Package",
											"reshape2"
										],
										[
											"rlang\tInstalled Package",
											"rlang"
										],
										[
											"rmarkdown\tInstalled Package",
											"rmarkdown"
										],
										[
											"rngtools\tInstalled Package",
											"rngtools"
										],
										[
											"robustbase\tInstalled Package",
											"robustbase"
										],
										[
											"roxygen2\tInstalled Package",
											"roxygen2"
										],
										[
											"rpart\tInstalled Package",
											"rpart"
										],
										[
											"rprojroot\tInstalled Package",
											"rprojroot"
										],
										[
											"rstudioapi\tInstalled Package",
											"rstudioapi"
										],
										[
											"sandwich\tInstalled Package",
											"sandwich"
										],
										[
											"scLVM\tInstalled Package",
											"scLVM"
										],
										[
											"scales\tInstalled Package",
											"scales"
										],
										[
											"segmented\tInstalled Package",
											"segmented"
										],
										[
											"shiny\tInstalled Package",
											"shiny"
										],
										[
											"shinyjs\tInstalled Package",
											"shinyjs"
										],
										[
											"sn\tInstalled Package",
											"sn"
										],
										[
											"sourcetools\tInstalled Package",
											"sourcetools"
										],
										[
											"spatial\tInstalled Package",
											"spatial"
										],
										[
											"splines\tInstalled Package",
											"splines"
										],
										[
											"stabs\tInstalled Package",
											"stabs"
										],
										[
											"statmod\tInstalled Package",
											"statmod"
										],
										[
											"stats\tInstalled Package",
											"stats"
										],
										[
											"stats4\tInstalled Package",
											"stats4"
										],
										[
											"stringi\tInstalled Package",
											"stringi"
										],
										[
											"stringr\tInstalled Package",
											"stringr"
										],
										[
											"strucchange\tInstalled Package",
											"strucchange"
										],
										[
											"survival\tInstalled Package",
											"survival"
										],
										[
											"tcltk\tInstalled Package",
											"tcltk"
										],
										[
											"tclust\tInstalled Package",
											"tclust"
										],
										[
											"tibble\tInstalled Package",
											"tibble"
										],
										[
											"tidyr\tInstalled Package",
											"tidyr"
										],
										[
											"tidyverse\tInstalled Package",
											"tidyverse"
										],
										[
											"tools\tInstalled Package",
											"tools"
										],
										[
											"trimcluster\tInstalled Package",
											"trimcluster"
										],
										[
											"tsne\tInstalled Package",
											"tsne"
										],
										[
											"unbalanced\tInstalled Package",
											"unbalanced"
										],
										[
											"utils\tInstalled Package",
											"utils"
										],
										[
											"uuid\tInstalled Package",
											"uuid"
										],
										[
											"viridis\tInstalled Package",
											"viridis"
										],
										[
											"viridisLite\tInstalled Package",
											"viridisLite"
										],
										[
											"whisker\tInstalled Package",
											"whisker"
										],
										[
											"withr\tInstalled Package",
											"withr"
										],
										[
											"xgboost\tInstalled Package",
											"xgboost"
										],
										[
											"xlsx\tInstalled Package",
											"xlsx"
										],
										[
											"xlsxjars\tInstalled Package",
											"xlsxjars"
										],
										[
											"xtable\tInstalled Package",
											"xtable"
										],
										[
											"yaml\tInstalled Package",
											"yaml"
										],
										[
											"zlibbioc\tInstalled Package",
											"zlibbioc"
										],
										[
											"zoo\tInstalled Package",
											"zoo"
										]
									],
									"R-Box.loaded_packages":
									[
										"purrr",
										"purrrlyr",
										"tidyr",
										"base",
										"dplyr",
										"readr",
										"stats",
										"stringr",
										"methods",
										"tibble",
										"graphics",
										"grDevices",
										"utils",
										"GetoptLong"
									],
									"git_gutter_is_enabled": false,
									"syntax": "Packages/R-Box/syntax/R Extended.sublime-syntax",
									"tab_size": 2,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 22.0
			},
			"input":
			{
				"height": 34.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.exec":
			{
				"height": 102.0
			},
			"output.find_results":
			{
				"height": 0.0
			},
			"output.mdpopups":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"position": "0 0 4 1680 1023 0 0 1680 1027 ",
			"project": "",
			"replace":
			{
				"height": 40.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"msacs",
						"scripts/MSACS/MSACS.R"
					],
					[
						"fix",
						"scripts/coverage/fix_sgrc_output.R"
					],
					[
						"agg",
						"scripts/analysis/agg_msacs_segs.R"
					],
					[
						"msa",
						"scripts/MSACS/MSACS_submit.R"
					],
					[
						"combine",
						"scripts/hets/combine_hets.R"
					],
					[
						"set",
						"scripts/setup.R"
					],
					[
						"spar",
						"scripts/coverage/SparkGenomeReadCounts.sh"
					],
					[
						"coll",
						"scripts/hets/CollectAllelicCounts_submit.R"
					],
					[
						"readm",
						"README.md"
					],
					[
						"read",
						"scripts/coverage/CombineNormalReadCounts_submit.R"
					],
					[
						"tar",
						"scripts/genotyping/TargetCoverageSexGenotyper_submit.R"
					],
					[
						"germ",
						"scripts/coverage/GermlineCNVCaller_submit.R"
					],
					[
						"comb",
						"scripts/coverage/CombineReadCounts.sh"
					],
					[
						"gem",
						"scripts/coverage/GermlineCNVCaller.sh"
					],
					[
						"var",
						"scripts/vars.R"
					],
					[
						"calc",
						"scripts/coverage/CalculateTargetCoverage_submit.R"
					],
					[
						"rea",
						"README.md"
					],
					[
						"filt",
						"scripts/hets/filter_hets.R"
					],
					[
						"mod",
						"R/models.R"
					],
					[
						"all",
						"R/export_allelic_seg_summaries.R"
					],
					[
						"alle",
						"R/compute_grid_posteriors_on_allelic_copyratio.R"
					],
					[
						"exp",
						"R/exporter.R"
					],
					[
						"fit",
						"R/fit_tcr.R"
					],
					[
						"load",
						"R/load_data.R"
					],
					[
						"merge",
						"R/MS_plot_mergers.R"
					],
					[
						"def",
						"R/definitions.R"
					],
					[
						"segm",
						"R/segmenter.R"
					],
					[
						"des",
						"DESCRIPTION"
					],
					[
						"filter",
						"scripts/hets/filter_hets.R"
					],
					[
						"git",
						".gitignore"
					],
					[
						"com",
						"scripts/common.R"
					],
					[
						"nam",
						"NAMESPACE"
					],
					[
						"de",
						"DESCRIPTION"
					],
					[
						"nae",
						"NAMESPACE"
					],
					[
						"msc",
						"R/mscbs_wrapper.R"
					],
					[
						"cbs",
						"R/cbs_wrapper.R"
					],
					[
						"msplot",
						"R/MS_plot_mergers.R"
					],
					[
						"mspl",
						"R/MS_Split.R"
					],
					[
						"cmp",
						"R/modcmp_seg_merge.R"
					],
					[
						"lod",
						"R/load_data.R"
					],
					[
						"mer",
						"R/modcmp_seg_merge.R"
					],
					[
						"expo",
						"R/export_allelic_seg_summaries.R"
					],
					[
						"seg",
						"R/segmenter.R"
					],
					[
						"ms",
						"R/MSACS.R"
					],
					[
						"modc",
						"R/modcmp_seg_merge.R"
					],
					[
						"plot",
						"R/MS_plot_mergers.R"
					],
					[
						"ex",
						"R/export_allelic_seg_summaries.R"
					],
					[
						"fitt",
						"R/fit_tcr.R"
					],
					[
						"mscbs",
						"R/mscbs_wrapper.R"
					],
					[
						"geno",
						"R/genome_plots.R"
					],
					[
						"gen",
						"R/genome_plots.R"
					],
					[
						"name",
						"NAMESPACE"
					],
					[
						"giti",
						".gitignore"
					],
					[
						"dens",
						"R/densities.R"
					],
					[
						"d",
						"DESCRIPTION"
					],
					[
						"na",
						"NAMESPACE"
					],
					[
						"mscb",
						"R/mscbs_wrapper.R"
					],
					[
						"model",
						"R/models.R"
					],
					[
						"export",
						"R/export_allelic_seg_summaries.R"
					],
					[
						"defin",
						"R/definitions.R"
					],
					[
						"msac",
						"R/MSACS.r"
					],
					[
						"tcr",
						"R/fit_tcr.r"
					],
					[
						"fitob",
						"R/fit_object.r"
					],
					[
						"desc",
						"DESCRIPTION"
					],
					[
						"capseg",
						"R/capseg_error_model.R"
					],
					[
						"cache",
						"R/cache_me.r"
					],
					[
						"genom",
						"R/genome_plots.r"
					],
					[
						"ave",
						"R/MS_compute_ACS_f_model_average_posteriors.R"
					],
					[
						"grid",
						"R/compute_grid_posteriors_on_allelic_copyratio.R"
					],
					[
						"mode",
						"R/models.r"
					],
					[
						"genome",
						"R/genome_plots.r"
					],
					[
						"geom",
						"R/genome_plots.r"
					],
					[
						"plotmer",
						"R/MS_plot_mergers.R"
					],
					[
						"fittc",
						"R/fit_tcr.r"
					],
					[
						"mo",
						"R/models.r"
					],
					[
						"ms_fit_joint_seg_f_cond_consensus_snp_gts",
						"R/MS_fit_joint_seg_f_cond_consensus_SNP_GTs.R"
					],
					[
						"geo",
						"R/genome_plots.r"
					],
					[
						"joint",
						"R/MS_fit_joint_seg_f.R"
					],
					[
						"",
						"R/detect_tiny_clones.R"
					],
					[
						"merg",
						"R/MS_LRT_seg_merge.R"
					],
					[
						"cach",
						"R/cache_me.r"
					],
					[
						"msfitj",
						"R/MS_fit_joint_seg_f.R"
					],
					[
						"fito",
						"R/fit_object.r"
					],
					[
						"data",
						"R/load_data.r"
					],
					[
						"mserr",
						"R/MS_error_model.R"
					],
					[
						"wrap",
						"R/legacy_wrapper.r"
					],
					[
						"lrt",
						"R/MS_LRT_seg_merge.R"
					],
					[
						"msall",
						"R/MS_AllelicCapseg.R"
					],
					[
						"file",
						"R/file_parsers.R"
					],
					[
						"filep",
						"R/file_parsers.R"
					],
					[
						"msalli",
						"R/MS_AllelicCapseg.R"
					],
					[
						"parse",
						"R/file_parsers.R"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 375.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"",
						"AllelicCapseg"
					]
				],
				"width": 530.0
			},
			"selected_group": 0,
			"settings":
			{
			},
			"show_minimap": false,
			"show_open_files": false,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 339.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 491,
			"workspace_name": ""
		}
	],
	"workspaces":
	{
		"recent_workspaces":
		[
		]
	}
}
